(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["skatejsGithubIo"] = factory();
	else
		root["skatejsGithubIo"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonpskatejsGithubIo"];
/******/ 	window["webpackJsonpskatejsGithubIo"] = function webpackJsonpCallback(chunkIds, moreModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, callbacks = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId])
/******/ 				callbacks.push.apply(callbacks, installedChunks[chunkId]);
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			modules[moduleId] = moreModules[moduleId];
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules);
/******/ 		while(callbacks.length)
/******/ 			callbacks.shift().call(null, __webpack_require__);
/******/
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// "0" means "already loaded"
/******/ 	// Array means "loading", array contains callbacks
/******/ 	var installedChunks = {
/******/ 		0:0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] === 0)
/******/ 			return callback.call(null, __webpack_require__);
/******/
/******/ 		// an array means "currently loading".
/******/ 		if(installedChunks[chunkId] !== undefined) {
/******/ 			installedChunks[chunkId].push(callback);
/******/ 		} else {
/******/ 			// start chunk loading
/******/ 			installedChunks[chunkId] = [callback];
/******/ 			var head = document.getElementsByTagName('head')[0];
/******/ 			var script = document.createElement('script');
/******/ 			script.type = 'text/javascript';
/******/ 			script.charset = 'utf-8';
/******/ 			script.async = true;
/******/
/******/ 			script.src = __webpack_require__.p + "" + chunkId + "." + ({}[chunkId]||chunkId) + "";
/******/ 			head.appendChild(script);
/******/ 		}
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.App = undefined;
	
	__webpack_require__(1);
	
	__webpack_require__(292);
	
	var _index = __webpack_require__(293);
	
	var _index2 = _interopRequireDefault(_index);
	
	__webpack_require__(350);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.App = _index2.default;

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(2);
	__webpack_require__(51);
	__webpack_require__(52);
	__webpack_require__(53);
	__webpack_require__(54);
	__webpack_require__(56);
	__webpack_require__(59);
	__webpack_require__(60);
	__webpack_require__(61);
	__webpack_require__(62);
	__webpack_require__(63);
	__webpack_require__(64);
	__webpack_require__(65);
	__webpack_require__(66);
	__webpack_require__(67);
	__webpack_require__(69);
	__webpack_require__(71);
	__webpack_require__(73);
	__webpack_require__(75);
	__webpack_require__(78);
	__webpack_require__(79);
	__webpack_require__(80);
	__webpack_require__(84);
	__webpack_require__(86);
	__webpack_require__(88);
	__webpack_require__(91);
	__webpack_require__(92);
	__webpack_require__(93);
	__webpack_require__(94);
	__webpack_require__(96);
	__webpack_require__(97);
	__webpack_require__(98);
	__webpack_require__(99);
	__webpack_require__(100);
	__webpack_require__(101);
	__webpack_require__(102);
	__webpack_require__(104);
	__webpack_require__(105);
	__webpack_require__(106);
	__webpack_require__(108);
	__webpack_require__(109);
	__webpack_require__(110);
	__webpack_require__(112);
	__webpack_require__(113);
	__webpack_require__(114);
	__webpack_require__(115);
	__webpack_require__(116);
	__webpack_require__(117);
	__webpack_require__(118);
	__webpack_require__(119);
	__webpack_require__(120);
	__webpack_require__(121);
	__webpack_require__(122);
	__webpack_require__(123);
	__webpack_require__(124);
	__webpack_require__(125);
	__webpack_require__(130);
	__webpack_require__(131);
	__webpack_require__(135);
	__webpack_require__(136);
	__webpack_require__(137);
	__webpack_require__(138);
	__webpack_require__(140);
	__webpack_require__(141);
	__webpack_require__(142);
	__webpack_require__(143);
	__webpack_require__(144);
	__webpack_require__(145);
	__webpack_require__(146);
	__webpack_require__(147);
	__webpack_require__(148);
	__webpack_require__(149);
	__webpack_require__(150);
	__webpack_require__(151);
	__webpack_require__(152);
	__webpack_require__(153);
	__webpack_require__(154);
	__webpack_require__(155);
	__webpack_require__(156);
	__webpack_require__(158);
	__webpack_require__(159);
	__webpack_require__(165);
	__webpack_require__(166);
	__webpack_require__(168);
	__webpack_require__(169);
	__webpack_require__(170);
	__webpack_require__(174);
	__webpack_require__(175);
	__webpack_require__(176);
	__webpack_require__(177);
	__webpack_require__(178);
	__webpack_require__(180);
	__webpack_require__(181);
	__webpack_require__(182);
	__webpack_require__(183);
	__webpack_require__(186);
	__webpack_require__(188);
	__webpack_require__(189);
	__webpack_require__(190);
	__webpack_require__(192);
	__webpack_require__(194);
	__webpack_require__(196);
	__webpack_require__(197);
	__webpack_require__(198);
	__webpack_require__(200);
	__webpack_require__(201);
	__webpack_require__(202);
	__webpack_require__(203);
	__webpack_require__(210);
	__webpack_require__(213);
	__webpack_require__(214);
	__webpack_require__(216);
	__webpack_require__(217);
	__webpack_require__(220);
	__webpack_require__(221);
	__webpack_require__(223);
	__webpack_require__(224);
	__webpack_require__(225);
	__webpack_require__(226);
	__webpack_require__(227);
	__webpack_require__(228);
	__webpack_require__(229);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	__webpack_require__(233);
	__webpack_require__(234);
	__webpack_require__(235);
	__webpack_require__(236);
	__webpack_require__(237);
	__webpack_require__(238);
	__webpack_require__(239);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(243);
	__webpack_require__(244);
	__webpack_require__(245);
	__webpack_require__(246);
	__webpack_require__(247);
	__webpack_require__(248);
	__webpack_require__(250);
	__webpack_require__(251);
	__webpack_require__(252);
	__webpack_require__(253);
	__webpack_require__(254);
	__webpack_require__(255);
	__webpack_require__(256);
	__webpack_require__(257);
	__webpack_require__(259);
	__webpack_require__(260);
	__webpack_require__(262);
	__webpack_require__(263);
	__webpack_require__(264);
	__webpack_require__(265);
	__webpack_require__(268);
	__webpack_require__(269);
	__webpack_require__(270);
	__webpack_require__(271);
	__webpack_require__(272);
	__webpack_require__(273);
	__webpack_require__(274);
	__webpack_require__(275);
	__webpack_require__(277);
	__webpack_require__(278);
	__webpack_require__(279);
	__webpack_require__(280);
	__webpack_require__(281);
	__webpack_require__(282);
	__webpack_require__(283);
	__webpack_require__(284);
	__webpack_require__(285);
	__webpack_require__(286);
	__webpack_require__(287);
	__webpack_require__(290);
	__webpack_require__(291);
	module.exports = __webpack_require__(8);

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(3)
	  , has            = __webpack_require__(4)
	  , DESCRIPTORS    = __webpack_require__(5)
	  , $export        = __webpack_require__(7)
	  , redefine       = __webpack_require__(17)
	  , META           = __webpack_require__(21).KEY
	  , $fails         = __webpack_require__(6)
	  , shared         = __webpack_require__(22)
	  , setToStringTag = __webpack_require__(23)
	  , uid            = __webpack_require__(18)
	  , wks            = __webpack_require__(24)
	  , wksExt         = __webpack_require__(25)
	  , wksDefine      = __webpack_require__(26)
	  , keyOf          = __webpack_require__(28)
	  , enumKeys       = __webpack_require__(41)
	  , isArray        = __webpack_require__(44)
	  , anObject       = __webpack_require__(11)
	  , toIObject      = __webpack_require__(31)
	  , toPrimitive    = __webpack_require__(15)
	  , createDesc     = __webpack_require__(16)
	  , _create        = __webpack_require__(45)
	  , gOPNExt        = __webpack_require__(48)
	  , $GOPD          = __webpack_require__(50)
	  , $DP            = __webpack_require__(10)
	  , $keys          = __webpack_require__(29)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(49).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(43).f  = $propertyIsEnumerable;
	  __webpack_require__(42).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(27)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(9)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 3 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 4 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(6)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 6 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(3)
	  , core      = __webpack_require__(8)
	  , hide      = __webpack_require__(9)
	  , redefine  = __webpack_require__(17)
	  , ctx       = __webpack_require__(19)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 8 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(10)
	  , createDesc = __webpack_require__(16);
	module.exports = __webpack_require__(5) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(11)
	  , IE8_DOM_DEFINE = __webpack_require__(13)
	  , toPrimitive    = __webpack_require__(15)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(5) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(12);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(5) && !__webpack_require__(6)(function(){
	  return Object.defineProperty(__webpack_require__(14)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(12)
	  , document = __webpack_require__(3).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(12);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 16 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(3)
	  , hide      = __webpack_require__(9)
	  , has       = __webpack_require__(4)
	  , SRC       = __webpack_require__(18)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(8).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 18 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(20);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 20 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(18)('meta')
	  , isObject = __webpack_require__(12)
	  , has      = __webpack_require__(4)
	  , setDesc  = __webpack_require__(10).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(6)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(3)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(10).f
	  , has = __webpack_require__(4)
	  , TAG = __webpack_require__(24)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(22)('wks')
	  , uid        = __webpack_require__(18)
	  , Symbol     = __webpack_require__(3).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(24);

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(3)
	  , core           = __webpack_require__(8)
	  , LIBRARY        = __webpack_require__(27)
	  , wksExt         = __webpack_require__(25)
	  , defineProperty = __webpack_require__(10).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 27 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(29)
	  , toIObject = __webpack_require__(31);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(30)
	  , enumBugKeys = __webpack_require__(40);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(4)
	  , toIObject    = __webpack_require__(31)
	  , arrayIndexOf = __webpack_require__(35)(false)
	  , IE_PROTO     = __webpack_require__(39)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(32)
	  , defined = __webpack_require__(34);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(33);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 33 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 34 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(31)
	  , toLength  = __webpack_require__(36)
	  , toIndex   = __webpack_require__(38);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(37)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 37 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(37)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(22)('keys')
	  , uid    = __webpack_require__(18);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 40 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(29)
	  , gOPS    = __webpack_require__(42)
	  , pIE     = __webpack_require__(43);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 42 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 43 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(33);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(11)
	  , dPs         = __webpack_require__(46)
	  , enumBugKeys = __webpack_require__(40)
	  , IE_PROTO    = __webpack_require__(39)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(14)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(47).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(10)
	  , anObject = __webpack_require__(11)
	  , getKeys  = __webpack_require__(29);
	
	module.exports = __webpack_require__(5) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(3).document && document.documentElement;

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(31)
	  , gOPN      = __webpack_require__(49).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(30)
	  , hiddenKeys = __webpack_require__(40).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(43)
	  , createDesc     = __webpack_require__(16)
	  , toIObject      = __webpack_require__(31)
	  , toPrimitive    = __webpack_require__(15)
	  , has            = __webpack_require__(4)
	  , IE8_DOM_DEFINE = __webpack_require__(13)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(5) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(45)});

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(5), 'Object', {defineProperty: __webpack_require__(10).f});

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(5), 'Object', {defineProperties: __webpack_require__(46)});

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(31)
	  , $getOwnPropertyDescriptor = __webpack_require__(50).f;
	
	__webpack_require__(55)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(7)
	  , core    = __webpack_require__(8)
	  , fails   = __webpack_require__(6);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(57)
	  , $getPrototypeOf = __webpack_require__(58);
	
	__webpack_require__(55)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(34);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(4)
	  , toObject    = __webpack_require__(57)
	  , IE_PROTO    = __webpack_require__(39)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(57)
	  , $keys    = __webpack_require__(29);
	
	__webpack_require__(55)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(55)('getOwnPropertyNames', function(){
	  return __webpack_require__(48).f;
	});

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(12)
	  , meta     = __webpack_require__(21).onFreeze;
	
	__webpack_require__(55)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(12)
	  , meta     = __webpack_require__(21).onFreeze;
	
	__webpack_require__(55)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(12)
	  , meta     = __webpack_require__(21).onFreeze;
	
	__webpack_require__(55)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(12);
	
	__webpack_require__(55)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(12);
	
	__webpack_require__(55)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(12);
	
	__webpack_require__(55)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(7);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(68)});

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(29)
	  , gOPS     = __webpack_require__(42)
	  , pIE      = __webpack_require__(43)
	  , toObject = __webpack_require__(57)
	  , IObject  = __webpack_require__(32)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(6)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(7);
	$export($export.S, 'Object', {is: __webpack_require__(70)});

/***/ },
/* 70 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(7);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(72).set});

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(12)
	  , anObject = __webpack_require__(11);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(19)(Function.call, __webpack_require__(50).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(74)
	  , test    = {};
	test[__webpack_require__(24)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(17)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(33)
	  , TAG = __webpack_require__(24)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(7);
	
	$export($export.P, 'Function', {bind: __webpack_require__(76)});

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(20)
	  , isObject   = __webpack_require__(12)
	  , invoke     = __webpack_require__(77)
	  , arraySlice = [].slice
	  , factories  = {};
	
	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};
	
	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 77 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(10).f
	  , createDesc = __webpack_require__(16)
	  , has        = __webpack_require__(4)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';
	
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	
	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(5) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(12)
	  , getPrototypeOf = __webpack_require__(58)
	  , HAS_INSTANCE   = __webpack_require__(24)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(10).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(7)
	  , $parseInt = __webpack_require__(81);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(3).parseInt
	  , $trim     = __webpack_require__(82).trim
	  , ws        = __webpack_require__(83)
	  , hex       = /^[\-+]?0[xX]/;
	
	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7)
	  , defined = __webpack_require__(34)
	  , fails   = __webpack_require__(6)
	  , spaces  = __webpack_require__(83)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');
	
	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};
	
	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};
	
	module.exports = exporter;

/***/ },
/* 83 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(7)
	  , $parseFloat = __webpack_require__(85);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(3).parseFloat
	  , $trim       = __webpack_require__(82).trim;
	
	module.exports = 1 / $parseFloat(__webpack_require__(83) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(3)
	  , has               = __webpack_require__(4)
	  , cof               = __webpack_require__(33)
	  , inheritIfRequired = __webpack_require__(87)
	  , toPrimitive       = __webpack_require__(15)
	  , fails             = __webpack_require__(6)
	  , gOPN              = __webpack_require__(49).f
	  , gOPD              = __webpack_require__(50).f
	  , dP                = __webpack_require__(10).f
	  , $trim             = __webpack_require__(82).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(45)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;
	
	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};
	
	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(5) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(17)(global, NUMBER, $Number);
	}

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(12)
	  , setPrototypeOf = __webpack_require__(72).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(7)
	  , toInteger    = __webpack_require__(37)
	  , aNumberValue = __webpack_require__(89)
	  , repeat       = __webpack_require__(90)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';
	
	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};
	
	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(6)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(33);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(37)
	  , defined   = __webpack_require__(34);
	
	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(7)
	  , $fails       = __webpack_require__(6)
	  , aNumberValue = __webpack_require__(89)
	  , $toPrecision = 1..toPrecision;
	
	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(7)
	  , _isFinite = __webpack_require__(3).isFinite;
	
	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Number', {isInteger: __webpack_require__(95)});

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(12)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(7)
	  , isInteger = __webpack_require__(95)
	  , abs       = Math.abs;
	
	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(7)
	  , $parseFloat = __webpack_require__(85);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(7)
	  , $parseInt = __webpack_require__(81);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(7)
	  , log1p   = __webpack_require__(103)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;
	
	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 103 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(7)
	  , $asinh  = Math.asinh;
	
	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}
	
	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(7)
	  , $atanh  = Math.atanh;
	
	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(7)
	  , sign    = __webpack_require__(107);
	
	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 107 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(7)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(7)
	  , $expm1  = __webpack_require__(111);
	
	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 111 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(7)
	  , sign      = __webpack_require__(107)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);
	
	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};
	
	
	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(7)
	  , abs     = Math.abs;
	
	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(7)
	  , $imul   = Math.imul;
	
	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(6)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {log1p: __webpack_require__(103)});

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {sign: __webpack_require__(107)});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(7)
	  , expm1   = __webpack_require__(111)
	  , exp     = Math.exp;
	
	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(6)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(7)
	  , expm1   = __webpack_require__(111)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(7)
	  , toIndex        = __webpack_require__(38)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;
	
	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(7)
	  , toIObject = __webpack_require__(31)
	  , toLength  = __webpack_require__(36);
	
	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(82)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(126)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(127)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(37)
	  , defined   = __webpack_require__(34);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(27)
	  , $export        = __webpack_require__(7)
	  , redefine       = __webpack_require__(17)
	  , hide           = __webpack_require__(9)
	  , has            = __webpack_require__(4)
	  , Iterators      = __webpack_require__(128)
	  , $iterCreate    = __webpack_require__(129)
	  , setToStringTag = __webpack_require__(23)
	  , getPrototypeOf = __webpack_require__(58)
	  , ITERATOR       = __webpack_require__(24)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 128 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(45)
	  , descriptor     = __webpack_require__(16)
	  , setToStringTag = __webpack_require__(23)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(9)(IteratorPrototype, __webpack_require__(24)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(7)
	  , $at     = __webpack_require__(126)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(7)
	  , toLength  = __webpack_require__(36)
	  , context   = __webpack_require__(132)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(134)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(133)
	  , defined  = __webpack_require__(34);
	
	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(12)
	  , cof      = __webpack_require__(33)
	  , MATCH    = __webpack_require__(24)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(24)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(7)
	  , context  = __webpack_require__(132)
	  , INCLUDES = 'includes';
	
	$export($export.P + $export.F * __webpack_require__(134)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7);
	
	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(90)
	});

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(7)
	  , toLength    = __webpack_require__(36)
	  , context     = __webpack_require__(132)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(134)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(139)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7)
	  , fails   = __webpack_require__(6)
	  , defined = __webpack_require__(34)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(139)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(139)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(139)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(139)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(139)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(139)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(139)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(139)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(139)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(139)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(139)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(139)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(7)
	  , toObject    = __webpack_require__(57)
	  , toPrimitive = __webpack_require__(15);
	
	$export($export.P + $export.F * __webpack_require__(6)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(7)
	  , fails   = __webpack_require__(6)
	  , getTime = Date.prototype.getTime;
	
	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};
	
	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(17)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(24)('toPrimitive')
	  , proto        = Date.prototype;
	
	if(!(TO_PRIMITIVE in proto))__webpack_require__(9)(proto, TO_PRIMITIVE, __webpack_require__(157));

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(11)
	  , toPrimitive = __webpack_require__(15)
	  , NUMBER      = 'number';
	
	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Array', {isArray: __webpack_require__(44)});

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(19)
	  , $export        = __webpack_require__(7)
	  , toObject       = __webpack_require__(57)
	  , call           = __webpack_require__(160)
	  , isArrayIter    = __webpack_require__(161)
	  , toLength       = __webpack_require__(36)
	  , createProperty = __webpack_require__(162)
	  , getIterFn      = __webpack_require__(163);
	
	$export($export.S + $export.F * !__webpack_require__(164)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(11);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(128)
	  , ITERATOR   = __webpack_require__(24)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(10)
	  , createDesc      = __webpack_require__(16);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(74)
	  , ITERATOR  = __webpack_require__(24)('iterator')
	  , Iterators = __webpack_require__(128);
	module.exports = __webpack_require__(8).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(24)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(7)
	  , createProperty = __webpack_require__(162);
	
	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(6)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(7)
	  , toIObject = __webpack_require__(31)
	  , arrayJoin = [].join;
	
	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(32) != Object || !__webpack_require__(167)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(6);
	
	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(7)
	  , html       = __webpack_require__(47)
	  , cof        = __webpack_require__(33)
	  , toIndex    = __webpack_require__(38)
	  , toLength   = __webpack_require__(36)
	  , arraySlice = [].slice;
	
	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(6)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(7)
	  , aFunction = __webpack_require__(20)
	  , toObject  = __webpack_require__(57)
	  , fails     = __webpack_require__(6)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];
	
	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(167)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(7)
	  , $forEach = __webpack_require__(171)(0)
	  , STRICT   = __webpack_require__(167)([].forEach, true);
	
	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(19)
	  , IObject  = __webpack_require__(32)
	  , toObject = __webpack_require__(57)
	  , toLength = __webpack_require__(36)
	  , asc      = __webpack_require__(172);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(173);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(12)
	  , isArray  = __webpack_require__(44)
	  , SPECIES  = __webpack_require__(24)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(7)
	  , $map    = __webpack_require__(171)(1);
	
	$export($export.P + $export.F * !__webpack_require__(167)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(7)
	  , $filter = __webpack_require__(171)(2);
	
	$export($export.P + $export.F * !__webpack_require__(167)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(7)
	  , $some   = __webpack_require__(171)(3);
	
	$export($export.P + $export.F * !__webpack_require__(167)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(7)
	  , $every  = __webpack_require__(171)(4);
	
	$export($export.P + $export.F * !__webpack_require__(167)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(7)
	  , $reduce = __webpack_require__(179);
	
	$export($export.P + $export.F * !__webpack_require__(167)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(20)
	  , toObject  = __webpack_require__(57)
	  , IObject   = __webpack_require__(32)
	  , toLength  = __webpack_require__(36);
	
	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(7)
	  , $reduce = __webpack_require__(179);
	
	$export($export.P + $export.F * !__webpack_require__(167)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(7)
	  , $indexOf      = __webpack_require__(35)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(167)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(7)
	  , toIObject     = __webpack_require__(31)
	  , toInteger     = __webpack_require__(37)
	  , toLength      = __webpack_require__(36)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(167)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(7);
	
	$export($export.P, 'Array', {copyWithin: __webpack_require__(184)});
	
	__webpack_require__(185)('copyWithin');

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(57)
	  , toIndex  = __webpack_require__(38)
	  , toLength = __webpack_require__(36);
	
	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(24)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(9)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(7);
	
	$export($export.P, 'Array', {fill: __webpack_require__(187)});
	
	__webpack_require__(185)('fill');

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(57)
	  , toIndex  = __webpack_require__(38)
	  , toLength = __webpack_require__(36);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(7)
	  , $find   = __webpack_require__(171)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(185)(KEY);

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(7)
	  , $find   = __webpack_require__(171)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(185)(KEY);

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(191)('Array');

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(3)
	  , dP          = __webpack_require__(10)
	  , DESCRIPTORS = __webpack_require__(5)
	  , SPECIES     = __webpack_require__(24)('species');
	
	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(185)
	  , step             = __webpack_require__(193)
	  , Iterators        = __webpack_require__(128)
	  , toIObject        = __webpack_require__(31);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(127)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 193 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(3)
	  , inheritIfRequired = __webpack_require__(87)
	  , dP                = __webpack_require__(10).f
	  , gOPN              = __webpack_require__(49).f
	  , isRegExp          = __webpack_require__(133)
	  , $flags            = __webpack_require__(195)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;
	
	if(__webpack_require__(5) && (!CORRECT_NEW || __webpack_require__(6)(function(){
	  re2[__webpack_require__(24)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(17)(global, 'RegExp', $RegExp);
	}
	
	__webpack_require__(191)('RegExp');

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(11);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(197);
	var anObject    = __webpack_require__(11)
	  , $flags      = __webpack_require__(195)
	  , DESCRIPTORS = __webpack_require__(5)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];
	
	var define = function(fn){
	  __webpack_require__(17)(RegExp.prototype, TO_STRING, fn, true);
	};
	
	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(6)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(5) && /./g.flags != 'g')__webpack_require__(10).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(195)
	});

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(199)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(9)
	  , redefine = __webpack_require__(17)
	  , fails    = __webpack_require__(6)
	  , defined  = __webpack_require__(34)
	  , wks      = __webpack_require__(24);
	
	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(199)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(199)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(199)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(133)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(27)
	  , global             = __webpack_require__(3)
	  , ctx                = __webpack_require__(19)
	  , classof            = __webpack_require__(74)
	  , $export            = __webpack_require__(7)
	  , isObject           = __webpack_require__(12)
	  , aFunction          = __webpack_require__(20)
	  , anInstance         = __webpack_require__(204)
	  , forOf              = __webpack_require__(205)
	  , speciesConstructor = __webpack_require__(206)
	  , task               = __webpack_require__(207).set
	  , microtask          = __webpack_require__(208)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;
	
	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(24)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(209)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(23)($Promise, PROMISE);
	__webpack_require__(191)(PROMISE);
	Wrapper = __webpack_require__(8)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(164)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 204 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(19)
	  , call        = __webpack_require__(160)
	  , isArrayIter = __webpack_require__(161)
	  , anObject    = __webpack_require__(11)
	  , toLength    = __webpack_require__(36)
	  , getIterFn   = __webpack_require__(163)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(11)
	  , aFunction = __webpack_require__(20)
	  , SPECIES   = __webpack_require__(24)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(19)
	  , invoke             = __webpack_require__(77)
	  , html               = __webpack_require__(47)
	  , cel                = __webpack_require__(14)
	  , global             = __webpack_require__(3)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(33)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(3)
	  , macrotask = __webpack_require__(207).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(33)(process) == 'process';
	
	module.exports = function(){
	  var head, last, notify;
	
	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };
	
	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(17);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(211);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(212)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(10).f
	  , create      = __webpack_require__(45)
	  , redefineAll = __webpack_require__(209)
	  , ctx         = __webpack_require__(19)
	  , anInstance  = __webpack_require__(204)
	  , defined     = __webpack_require__(34)
	  , forOf       = __webpack_require__(205)
	  , $iterDefine = __webpack_require__(127)
	  , step        = __webpack_require__(193)
	  , setSpecies  = __webpack_require__(191)
	  , DESCRIPTORS = __webpack_require__(5)
	  , fastKey     = __webpack_require__(21).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(3)
	  , $export           = __webpack_require__(7)
	  , redefine          = __webpack_require__(17)
	  , redefineAll       = __webpack_require__(209)
	  , meta              = __webpack_require__(21)
	  , forOf             = __webpack_require__(205)
	  , anInstance        = __webpack_require__(204)
	  , isObject          = __webpack_require__(12)
	  , fails             = __webpack_require__(6)
	  , $iterDetect       = __webpack_require__(164)
	  , setToStringTag    = __webpack_require__(23)
	  , inheritIfRequired = __webpack_require__(87);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(211);
	
	// 23.2 Set Objects
	module.exports = __webpack_require__(212)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(171)(0)
	  , redefine     = __webpack_require__(17)
	  , meta         = __webpack_require__(21)
	  , assign       = __webpack_require__(68)
	  , weak         = __webpack_require__(215)
	  , isObject     = __webpack_require__(12)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;
	
	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};
	
	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};
	
	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(212)('WeakMap', wrapper, methods, weak, true, true);
	
	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(209)
	  , getWeak           = __webpack_require__(21).getWeak
	  , anObject          = __webpack_require__(11)
	  , isObject          = __webpack_require__(12)
	  , anInstance        = __webpack_require__(204)
	  , forOf             = __webpack_require__(205)
	  , createArrayMethod = __webpack_require__(171)
	  , $has              = __webpack_require__(4)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;
	
	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(215);
	
	// 23.4 WeakSet Objects
	__webpack_require__(212)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(7)
	  , $typed       = __webpack_require__(218)
	  , buffer       = __webpack_require__(219)
	  , anObject     = __webpack_require__(11)
	  , toIndex      = __webpack_require__(38)
	  , toLength     = __webpack_require__(36)
	  , isObject     = __webpack_require__(12)
	  , ArrayBuffer  = __webpack_require__(3).ArrayBuffer
	  , speciesConstructor = __webpack_require__(206)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';
	
	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});
	
	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});
	
	$export($export.P + $export.U + $export.F * __webpack_require__(6)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});
	
	__webpack_require__(191)(ARRAY_BUFFER);

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(3)
	  , hide   = __webpack_require__(9)
	  , uid    = __webpack_require__(18)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;
	
	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');
	
	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}
	
	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(3)
	  , DESCRIPTORS    = __webpack_require__(5)
	  , LIBRARY        = __webpack_require__(27)
	  , $typed         = __webpack_require__(218)
	  , hide           = __webpack_require__(9)
	  , redefineAll    = __webpack_require__(209)
	  , fails          = __webpack_require__(6)
	  , anInstance     = __webpack_require__(204)
	  , toInteger      = __webpack_require__(37)
	  , toLength       = __webpack_require__(36)
	  , gOPN           = __webpack_require__(49).f
	  , dP             = __webpack_require__(10).f
	  , arrayFill      = __webpack_require__(187)
	  , setToStringTag = __webpack_require__(23)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;
	
	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};
	
	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};
	
	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};
	
	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};
	
	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};
	
	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };
	
	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };
	
	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }
	
	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7);
	$export($export.G + $export.W + $export.F * !__webpack_require__(218).ABV, {
	  DataView: __webpack_require__(219).DataView
	});

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(5)){
	  var LIBRARY             = __webpack_require__(27)
	    , global              = __webpack_require__(3)
	    , fails               = __webpack_require__(6)
	    , $export             = __webpack_require__(7)
	    , $typed              = __webpack_require__(218)
	    , $buffer             = __webpack_require__(219)
	    , ctx                 = __webpack_require__(19)
	    , anInstance          = __webpack_require__(204)
	    , propertyDesc        = __webpack_require__(16)
	    , hide                = __webpack_require__(9)
	    , redefineAll         = __webpack_require__(209)
	    , toInteger           = __webpack_require__(37)
	    , toLength            = __webpack_require__(36)
	    , toIndex             = __webpack_require__(38)
	    , toPrimitive         = __webpack_require__(15)
	    , has                 = __webpack_require__(4)
	    , same                = __webpack_require__(70)
	    , classof             = __webpack_require__(74)
	    , isObject            = __webpack_require__(12)
	    , toObject            = __webpack_require__(57)
	    , isArrayIter         = __webpack_require__(161)
	    , create              = __webpack_require__(45)
	    , getPrototypeOf      = __webpack_require__(58)
	    , gOPN                = __webpack_require__(49).f
	    , getIterFn           = __webpack_require__(163)
	    , uid                 = __webpack_require__(18)
	    , wks                 = __webpack_require__(24)
	    , createArrayMethod   = __webpack_require__(171)
	    , createArrayIncludes = __webpack_require__(35)
	    , speciesConstructor  = __webpack_require__(206)
	    , ArrayIterators      = __webpack_require__(192)
	    , Iterators           = __webpack_require__(128)
	    , $iterDetect         = __webpack_require__(164)
	    , setSpecies          = __webpack_require__(191)
	    , arrayFill           = __webpack_require__(187)
	    , arrayCopyWithin     = __webpack_require__(184)
	    , $DP                 = __webpack_require__(10)
	    , $GOPD               = __webpack_require__(50)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';
	
	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });
	
	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });
	
	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });
	
	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };
	
	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };
	
	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };
	
	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };
	
	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };
	
	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };
	
	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };
	
	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };
	
	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };
	
	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });
	
	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };
	
	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };
	
	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };
	
	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };
	
	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };
	
	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };
	
	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }
	
	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });
	
	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }
	
	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });
	
	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
	
	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }
	
	    O[NAME] = TypedArray;
	
	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
	
	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });
	
	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
	
	    $export($export.P, NAME, proto);
	
	    setSpecies(NAME);
	
	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});
	
	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
	
	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});
	
	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});
	
	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});
	
	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(222)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(7)
	  , aFunction = __webpack_require__(20)
	  , anObject  = __webpack_require__(11)
	  , rApply    = (__webpack_require__(3).Reflect || {}).apply
	  , fApply    = Function.apply;
	// MS Edge argumentsList argument is optional
	$export($export.S + $export.F * !__webpack_require__(6)(function(){
	  rApply(function(){});
	}), 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    var T = aFunction(target)
	      , L = anObject(argumentsList);
	    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
	  }
	});

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export    = __webpack_require__(7)
	  , create     = __webpack_require__(45)
	  , aFunction  = __webpack_require__(20)
	  , anObject   = __webpack_require__(11)
	  , isObject   = __webpack_require__(12)
	  , fails      = __webpack_require__(6)
	  , bind       = __webpack_require__(76)
	  , rConstruct = (__webpack_require__(3).Reflect || {}).construct;
	
	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function(){
	  function F(){}
	  return !(rConstruct(function(){}, [], F) instanceof F);
	});
	var ARGS_BUG = !fails(function(){
	  rConstruct(function(){});
	});
	
	$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(10)
	  , $export     = __webpack_require__(7)
	  , anObject    = __webpack_require__(11)
	  , toPrimitive = __webpack_require__(15);
	
	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(6)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(7)
	  , gOPD     = __webpack_require__(50).f
	  , anObject = __webpack_require__(11);
	
	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(7)
	  , anObject = __webpack_require__(11);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(129)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});
	
	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(50)
	  , getPrototypeOf = __webpack_require__(58)
	  , has            = __webpack_require__(4)
	  , $export        = __webpack_require__(7)
	  , isObject       = __webpack_require__(12)
	  , anObject       = __webpack_require__(11);
	
	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}
	
	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(50)
	  , $export  = __webpack_require__(7)
	  , anObject = __webpack_require__(11);
	
	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(7)
	  , getProto = __webpack_require__(58)
	  , anObject = __webpack_require__(11);
	
	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(7)
	  , anObject      = __webpack_require__(11)
	  , $isExtensible = Object.isExtensible;
	
	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(242)});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(49)
	  , gOPS     = __webpack_require__(42)
	  , anObject = __webpack_require__(11)
	  , Reflect  = __webpack_require__(3).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(7)
	  , anObject           = __webpack_require__(11)
	  , $preventExtensions = Object.preventExtensions;
	
	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(10)
	  , gOPD           = __webpack_require__(50)
	  , getPrototypeOf = __webpack_require__(58)
	  , has            = __webpack_require__(4)
	  , $export        = __webpack_require__(7)
	  , createDesc     = __webpack_require__(16)
	  , anObject       = __webpack_require__(11)
	  , isObject       = __webpack_require__(12);
	
	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}
	
	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(7)
	  , setProto = __webpack_require__(72);
	
	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(7)
	  , $includes = __webpack_require__(35)(true);
	
	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	
	__webpack_require__(185)('includes');

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(7)
	  , $at     = __webpack_require__(126)(true);
	
	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(7)
	  , $pad    = __webpack_require__(249);
	
	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(36)
	  , repeat   = __webpack_require__(90)
	  , defined  = __webpack_require__(34);
	
	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(7)
	  , $pad    = __webpack_require__(249);
	
	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(82)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(82)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(7)
	  , defined     = __webpack_require__(34)
	  , toLength    = __webpack_require__(36)
	  , isRegExp    = __webpack_require__(133)
	  , getFlags    = __webpack_require__(195)
	  , RegExpProto = RegExp.prototype;
	
	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};
	
	__webpack_require__(129)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});
	
	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(26)('asyncIterator');

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(26)('observable');

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(7)
	  , ownKeys        = __webpack_require__(242)
	  , toIObject      = __webpack_require__(31)
	  , gOPD           = __webpack_require__(50)
	  , createProperty = __webpack_require__(162);
	
	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(7)
	  , $values = __webpack_require__(258)(false);
	
	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(29)
	  , toIObject = __webpack_require__(31)
	  , isEnum    = __webpack_require__(43).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(7)
	  , $entries = __webpack_require__(258)(true);
	
	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(7)
	  , toObject        = __webpack_require__(57)
	  , aFunction       = __webpack_require__(20)
	  , $defineProperty = __webpack_require__(10);
	
	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(5) && $export($export.P + __webpack_require__(261), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(27)|| !__webpack_require__(6)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(3)[K];
	});

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(7)
	  , toObject        = __webpack_require__(57)
	  , aFunction       = __webpack_require__(20)
	  , $defineProperty = __webpack_require__(10);
	
	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(5) && $export($export.P + __webpack_require__(261), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(7)
	  , toObject                 = __webpack_require__(57)
	  , toPrimitive              = __webpack_require__(15)
	  , getPrototypeOf           = __webpack_require__(58)
	  , getOwnPropertyDescriptor = __webpack_require__(50).f;
	
	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(5) && $export($export.P + __webpack_require__(261), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(7)
	  , toObject                 = __webpack_require__(57)
	  , toPrimitive              = __webpack_require__(15)
	  , getPrototypeOf           = __webpack_require__(58)
	  , getOwnPropertyDescriptor = __webpack_require__(50).f;
	
	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(5) && $export($export.P + __webpack_require__(261), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(7);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(266)('Map')});

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(74)
	  , from    = __webpack_require__(267);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(205);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(7);
	
	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(266)('Set')});

/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(7);
	
	$export($export.S, 'System', {global: __webpack_require__(3)});

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(7)
	  , cof     = __webpack_require__(33);
	
	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(7);
	
	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(276)
	  , anObject                  = __webpack_require__(11)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(210)
	  , $export = __webpack_require__(7)
	  , shared  = __webpack_require__(22)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(214)));
	
	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};
	
	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(276)
	  , anObject               = __webpack_require__(11)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;
	
	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(276)
	  , anObject               = __webpack_require__(11)
	  , getPrototypeOf         = __webpack_require__(58)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};
	
	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(213)
	  , from                    = __webpack_require__(267)
	  , metadata                = __webpack_require__(276)
	  , anObject                = __webpack_require__(11)
	  , getPrototypeOf          = __webpack_require__(58)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};
	
	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(276)
	  , anObject               = __webpack_require__(11)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(276)
	  , anObject                = __webpack_require__(11)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(276)
	  , anObject               = __webpack_require__(11)
	  , getPrototypeOf         = __webpack_require__(58)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};
	
	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(276)
	  , anObject               = __webpack_require__(11)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(276)
	  , anObject                  = __webpack_require__(11)
	  , aFunction                 = __webpack_require__(20)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(7)
	  , microtask = __webpack_require__(208)()
	  , process   = __webpack_require__(3).process
	  , isNode    = __webpack_require__(33)(process) == 'process';
	
	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(7)
	  , global      = __webpack_require__(3)
	  , core        = __webpack_require__(8)
	  , microtask   = __webpack_require__(208)()
	  , OBSERVABLE  = __webpack_require__(24)('observable')
	  , aFunction   = __webpack_require__(20)
	  , anObject    = __webpack_require__(11)
	  , anInstance  = __webpack_require__(204)
	  , redefineAll = __webpack_require__(209)
	  , hide        = __webpack_require__(9)
	  , forOf       = __webpack_require__(205)
	  , RETURN      = forOf.RETURN;
	
	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};
	
	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};
	
	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};
	
	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};
	
	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};
	
	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});
	
	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};
	
	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});
	
	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};
	
	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});
	
	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});
	
	hide($Observable.prototype, OBSERVABLE, function(){ return this; });
	
	$export($export.G, {Observable: $Observable});
	
	__webpack_require__(191)('Observable');

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(3)
	  , $export    = __webpack_require__(7)
	  , invoke     = __webpack_require__(77)
	  , partial    = __webpack_require__(288)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(289)
	  , invoke    = __webpack_require__(77)
	  , aFunction = __webpack_require__(20);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(3);

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(7)
	  , $task   = __webpack_require__(207);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(192)
	  , redefine      = __webpack_require__(17)
	  , global        = __webpack_require__(3)
	  , hide          = __webpack_require__(9)
	  , Iterators     = __webpack_require__(128)
	  , wks           = __webpack_require__(24)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else if(typeof exports === 'object')
			exports["skatejsWebComponents"] = factory();
		else
			root["skatejsWebComponents"] = factory();
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		// NOTE!!!
		//
		// We have to load polyfills directly from source as non-minified files are not
		// published by the polyfills. An issue was raised to discuss this problem and
		// to see if it can be resolved.
		//
		// See https://github.com/webcomponents/custom-elements/issues/45
		
		// ES2015 polyfills required for the polyfills to work in older browsers.
		__webpack_require__(1).shim();
		__webpack_require__(26).shim();
		__webpack_require__(31).polyfill();
		
		// We have to include this first so that it can patch native. This must be done
		// befoer any polyfills are loaded.
		__webpack_require__(34);
		
		// This comes after the native shim because it requries it to be patched first.
		__webpack_require__(35);
		
		// Force the polyfill in Safari 10.0.0 and 10.0.1.
		var _window = window,
		    navigator = _window.navigator;
		var userAgent = navigator.userAgent;
		
		var safari = userAgent.indexOf('Safari/60') !== -1;
		var safariVersion = safari && userAgent.match(/Version\/([^\s]+)/)[1];
		var safariVersions = [0, 1].map(function (v) {
		  return '10.0.' + v;
		}).concat(['10.0']);
		
		if (safari && safariVersions.indexOf(safariVersion) > -1) {
		  window.ShadyDOM = { force: true };
		}
		
		// ShadyDOM comes first. Both because it may need to be forced and the
		// ShadyCSS polyill requires it to function.
		__webpack_require__(36);
		__webpack_require__(52);
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var define = __webpack_require__(2);
		
		var implementation = __webpack_require__(6);
		var getPolyfill = __webpack_require__(24);
		var shim = __webpack_require__(25);
		
		// eslint-disable-next-line no-unused-vars
		var boundFromShim = function from(array) {
			// eslint-disable-next-line no-invalid-this
			return implementation.apply(this || Array, arguments);
		};
		
		define(boundFromShim, {
			'getPolyfill': getPolyfill,
			'implementation': implementation,
			'shim': shim
		});
		
		module.exports = boundFromShim;
	
	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var keys = __webpack_require__(3);
		var foreach = __webpack_require__(5);
		var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol()) === 'symbol';
		
		var toStr = Object.prototype.toString;
		
		var isFunction = function isFunction(fn) {
			return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
		};
		
		var arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {
			var obj = {};
			try {
				Object.defineProperty(obj, 'x', { enumerable: false, value: obj });
				/* eslint-disable no-unused-vars, no-restricted-syntax */
				for (var _ in obj) {
					return false;
				}
				/* eslint-enable no-unused-vars, no-restricted-syntax */
				return obj.x === obj;
			} catch (e) {
				/* this is IE 8. */
				return false;
			}
		};
		var supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();
		
		var defineProperty = function defineProperty(object, name, value, predicate) {
			if (name in object && (!isFunction(predicate) || !predicate())) {
				return;
			}
			if (supportsDescriptors) {
				Object.defineProperty(object, name, {
					configurable: true,
					enumerable: false,
					value: value,
					writable: true
				});
			} else {
				object[name] = value;
			}
		};
		
		var defineProperties = function defineProperties(object, map) {
			var predicates = arguments.length > 2 ? arguments[2] : {};
			var props = keys(map);
			if (hasSymbols) {
				props = props.concat(Object.getOwnPropertySymbols(map));
			}
			foreach(props, function (name) {
				defineProperty(object, name, map[name], predicates[name]);
			});
		};
		
		defineProperties.supportsDescriptors = !!supportsDescriptors;
		
		module.exports = defineProperties;
	
	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		// modified from https://github.com/es-shims/es5-shim
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var has = Object.prototype.hasOwnProperty;
		var toStr = Object.prototype.toString;
		var slice = Array.prototype.slice;
		var isArgs = __webpack_require__(4);
		var isEnumerable = Object.prototype.propertyIsEnumerable;
		var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
		var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
		var dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];
		var equalsConstructorPrototype = function equalsConstructorPrototype(o) {
			var ctor = o.constructor;
			return ctor && ctor.prototype === o;
		};
		var excludedKeys = {
			$console: true,
			$external: true,
			$frame: true,
			$frameElement: true,
			$frames: true,
			$innerHeight: true,
			$innerWidth: true,
			$outerHeight: true,
			$outerWidth: true,
			$pageXOffset: true,
			$pageYOffset: true,
			$parent: true,
			$scrollLeft: true,
			$scrollTop: true,
			$scrollX: true,
			$scrollY: true,
			$self: true,
			$webkitIndexedDB: true,
			$webkitStorageInfo: true,
			$window: true
		};
		var hasAutomationEqualityBug = function () {
			/* global window */
			if (typeof window === 'undefined') {
				return false;
			}
			for (var k in window) {
				try {
					if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && _typeof(window[k]) === 'object') {
						try {
							equalsConstructorPrototype(window[k]);
						} catch (e) {
							return true;
						}
					}
				} catch (e) {
					return true;
				}
			}
			return false;
		}();
		var equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {
			/* global window */
			if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
				return equalsConstructorPrototype(o);
			}
			try {
				return equalsConstructorPrototype(o);
			} catch (e) {
				return false;
			}
		};
		
		var keysShim = function keys(object) {
			var isObject = object !== null && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';
			var isFunction = toStr.call(object) === '[object Function]';
			var isArguments = isArgs(object);
			var isString = isObject && toStr.call(object) === '[object String]';
			var theKeys = [];
		
			if (!isObject && !isFunction && !isArguments) {
				throw new TypeError('Object.keys called on a non-object');
			}
		
			var skipProto = hasProtoEnumBug && isFunction;
			if (isString && object.length > 0 && !has.call(object, 0)) {
				for (var i = 0; i < object.length; ++i) {
					theKeys.push(String(i));
				}
			}
		
			if (isArguments && object.length > 0) {
				for (var j = 0; j < object.length; ++j) {
					theKeys.push(String(j));
				}
			} else {
				for (var name in object) {
					if (!(skipProto && name === 'prototype') && has.call(object, name)) {
						theKeys.push(String(name));
					}
				}
			}
		
			if (hasDontEnumBug) {
				var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);
		
				for (var k = 0; k < dontEnums.length; ++k) {
					if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
						theKeys.push(dontEnums[k]);
					}
				}
			}
			return theKeys;
		};
		
		keysShim.shim = function shimObjectKeys() {
			if (Object.keys) {
				var keysWorksWithArguments = function () {
					// Safari 5.0 bug
					return (Object.keys(arguments) || '').length === 2;
				}(1, 2);
				if (!keysWorksWithArguments) {
					var originalKeys = Object.keys;
					Object.keys = function keys(object) {
						if (isArgs(object)) {
							return originalKeys(slice.call(object));
						} else {
							return originalKeys(object);
						}
					};
				}
			} else {
				Object.keys = keysShim;
			}
			return Object.keys || keysShim;
		};
		
		module.exports = keysShim;
	
	/***/ },
	/* 4 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var toStr = Object.prototype.toString;
		
		module.exports = function isArguments(value) {
			var str = toStr.call(value);
			var isArgs = str === '[object Arguments]';
			if (!isArgs) {
				isArgs = str !== '[object Array]' && value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';
			}
			return isArgs;
		};
	
	/***/ },
	/* 5 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var hasOwn = Object.prototype.hasOwnProperty;
		var toString = Object.prototype.toString;
		
		module.exports = function forEach(obj, fn, ctx) {
		    if (toString.call(fn) !== '[object Function]') {
		        throw new TypeError('iterator must be a function');
		    }
		    var l = obj.length;
		    if (l === +l) {
		        for (var i = 0; i < l; i++) {
		            fn.call(ctx, obj[i], i, obj);
		        }
		    } else {
		        for (var k in obj) {
		            if (hasOwn.call(obj, k)) {
		                fn.call(ctx, obj[k], k, obj);
		            }
		        }
		    }
		};
	
	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var ES = __webpack_require__(7);
		var supportsDescriptors = __webpack_require__(2).supportsDescriptors;
		
		/*! https://mths.be/array-from v0.2.0 by @mathias */
		module.exports = function from(arrayLike) {
			var defineProperty = supportsDescriptors ? Object.defineProperty : function put(object, key, descriptor) {
				object[key] = descriptor.value;
			};
			var C = this;
			if (arrayLike === null || typeof arrayLike === 'undefined') {
				throw new TypeError('`Array.from` requires an array-like object, not `null` or `undefined`');
			}
			var items = ES.ToObject(arrayLike);
		
			var mapFn, T;
			if (typeof arguments[1] !== 'undefined') {
				mapFn = arguments[1];
				if (!ES.IsCallable(mapFn)) {
					throw new TypeError('When provided, the second argument to `Array.from` must be a function');
				}
				if (arguments.length > 2) {
					T = arguments[2];
				}
			}
		
			var len = ES.ToLength(items.length);
			var A = ES.IsCallable(C) ? ES.ToObject(new C(len)) : new Array(len);
			var k = 0;
			var kValue, mappedValue;
			while (k < len) {
				kValue = items[k];
				if (mapFn) {
					mappedValue = typeof T === 'undefined' ? mapFn(kValue, k) : ES.Call(mapFn, T, [kValue, k]);
				} else {
					mappedValue = kValue;
				}
				defineProperty(A, k, {
					'configurable': true,
					'enumerable': true,
					'value': mappedValue,
					'writable': true
				});
				k += 1;
			}
			A.length = len;
			return A;
		};
	
	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var toStr = Object.prototype.toString;
		var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol';
		var symbolToStr = hasSymbols ? Symbol.prototype.toString : toStr;
		
		var $isNaN = __webpack_require__(8);
		var $isFinite = __webpack_require__(9);
		var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;
		
		var assign = __webpack_require__(10);
		var sign = __webpack_require__(11);
		var mod = __webpack_require__(12);
		var isPrimitive = __webpack_require__(13);
		var toPrimitive = __webpack_require__(14);
		var parseInteger = parseInt;
		var bind = __webpack_require__(19);
		var strSlice = bind.call(Function.call, String.prototype.slice);
		var isBinary = bind.call(Function.call, RegExp.prototype.test, /^0b[01]+$/i);
		var isOctal = bind.call(Function.call, RegExp.prototype.test, /^0o[0-7]+$/i);
		var nonWS = ['\x85', '\u200B', '\uFFFE'].join('');
		var nonWSregex = new RegExp('[' + nonWS + ']', 'g');
		var hasNonWS = bind.call(Function.call, RegExp.prototype.test, nonWSregex);
		var invalidHexLiteral = /^[\-\+]0x[0-9a-f]+$/i;
		var isInvalidHexLiteral = bind.call(Function.call, RegExp.prototype.test, invalidHexLiteral);
		
		// whitespace from: http://es5.github.io/#x15.5.4.20
		// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324
		var ws = ['\t\n\x0B\f\r \xA0\u1680\u180E\u2000\u2001\u2002\u2003', '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028', '\u2029\uFEFF'].join('');
		var trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');
		var replace = bind.call(Function.call, String.prototype.replace);
		var trim = function trim(value) {
			return replace(value, trimRegex, '');
		};
		
		var ES5 = __webpack_require__(21);
		
		var hasRegExpMatcher = __webpack_require__(23);
		
		// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations
		var ES6 = assign(assign({}, ES5), {
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args
			Call: function Call(F, V) {
				var args = arguments.length > 2 ? arguments[2] : [];
				if (!this.IsCallable(F)) {
					throw new TypeError(F + ' is not a function');
				}
				return F.apply(V, args);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive
			ToPrimitive: toPrimitive,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean
			// ToBoolean: ES5.ToBoolean,
		
			// http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber
			ToNumber: function ToNumber(argument) {
				var value = isPrimitive(argument) ? argument : toPrimitive(argument, 'number');
				if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'symbol') {
					throw new TypeError('Cannot convert a Symbol value to a number');
				}
				if (typeof value === 'string') {
					if (isBinary(value)) {
						return this.ToNumber(parseInteger(strSlice(value, 2), 2));
					} else if (isOctal(value)) {
						return this.ToNumber(parseInteger(strSlice(value, 2), 8));
					} else if (hasNonWS(value) || isInvalidHexLiteral(value)) {
						return NaN;
					} else {
						var trimmed = trim(value);
						if (trimmed !== value) {
							return this.ToNumber(trimmed);
						}
					}
				}
				return Number(value);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger
			// ToInteger: ES5.ToNumber,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32
			// ToInt32: ES5.ToInt32,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32
			// ToUint32: ES5.ToUint32,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16
			ToInt16: function ToInt16(argument) {
				var int16bit = this.ToUint16(argument);
				return int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16
			// ToUint16: ES5.ToUint16,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8
			ToInt8: function ToInt8(argument) {
				var int8bit = this.ToUint8(argument);
				return int8bit >= 0x80 ? int8bit - 0x100 : int8bit;
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8
			ToUint8: function ToUint8(argument) {
				var number = this.ToNumber(argument);
				if ($isNaN(number) || number === 0 || !$isFinite(number)) {
					return 0;
				}
				var posInt = sign(number) * Math.floor(Math.abs(number));
				return mod(posInt, 0x100);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp
			ToUint8Clamp: function ToUint8Clamp(argument) {
				var number = this.ToNumber(argument);
				if ($isNaN(number) || number <= 0) {
					return 0;
				}
				if (number >= 0xFF) {
					return 0xFF;
				}
				var f = Math.floor(argument);
				if (f + 0.5 < number) {
					return f + 1;
				}
				if (number < f + 0.5) {
					return f;
				}
				if (f % 2 !== 0) {
					return f + 1;
				}
				return f;
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring
			ToString: function ToString(argument) {
				if ((typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol') {
					throw new TypeError('Cannot convert a Symbol value to a string');
				}
				return String(argument);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject
			ToObject: function ToObject(value) {
				this.RequireObjectCoercible(value);
				return Object(value);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey
			ToPropertyKey: function ToPropertyKey(argument) {
				var key = this.ToPrimitive(argument, String);
				return (typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'symbol' ? symbolToStr.call(key) : this.ToString(key);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
			ToLength: function ToLength(argument) {
				var len = this.ToInteger(argument);
				if (len <= 0) {
					return 0;
				} // includes converting -0 to +0
				if (len > MAX_SAFE_INTEGER) {
					return MAX_SAFE_INTEGER;
				}
				return len;
			},
		
			// http://www.ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring
			CanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {
				if (toStr.call(argument) !== '[object String]') {
					throw new TypeError('must be a string');
				}
				if (argument === '-0') {
					return -0;
				}
				var n = this.ToNumber(argument);
				if (this.SameValue(this.ToString(n), argument)) {
					return n;
				}
				return void 0;
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible
			RequireObjectCoercible: ES5.CheckObjectCoercible,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray
			IsArray: Array.isArray || function IsArray(argument) {
				return toStr.call(argument) === '[object Array]';
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable
			// IsCallable: ES5.IsCallable,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor
			IsConstructor: function IsConstructor(argument) {
				return typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o
			IsExtensible: function IsExtensible(obj) {
				if (!Object.preventExtensions) {
					return true;
				}
				if (isPrimitive(obj)) {
					return false;
				}
				return Object.isExtensible(obj);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger
			IsInteger: function IsInteger(argument) {
				if (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {
					return false;
				}
				var abs = Math.abs(argument);
				return Math.floor(abs) === abs;
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey
			IsPropertyKey: function IsPropertyKey(argument) {
				return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';
			},
		
			// http://www.ecma-international.org/ecma-262/6.0/#sec-isregexp
			IsRegExp: function IsRegExp(argument) {
				if (!argument || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) !== 'object') {
					return false;
				}
				if (hasSymbols) {
					var isRegExp = argument[Symbol.match];
					if (typeof isRegExp !== 'undefined') {
						return ES5.ToBoolean(isRegExp);
					}
				}
				return hasRegExpMatcher(argument);
			},
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue
			// SameValue: ES5.SameValue,
		
			// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero
			SameValueZero: function SameValueZero(x, y) {
				return x === y || $isNaN(x) && $isNaN(y);
			},
		
			Type: function Type(x) {
				if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'symbol') {
					return 'Symbol';
				}
				return ES5.Type(x);
			},
		
			// http://www.ecma-international.org/ecma-262/6.0/#sec-speciesconstructor
			SpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {
				if (this.Type(O) !== 'Object') {
					throw new TypeError('Assertion failed: Type(O) is not Object');
				}
				var C = O.constructor;
				if (typeof C === 'undefined') {
					return defaultConstructor;
				}
				if (this.Type(C) !== 'Object') {
					throw new TypeError('O.constructor is not an Object');
				}
				var S = hasSymbols && Symbol.species ? C[Symbol.species] : undefined;
				if (S == null) {
					return defaultConstructor;
				}
				if (this.IsConstructor(S)) {
					return S;
				}
				throw new TypeError('no constructor found');
			}
		});
		
		delete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible
		
		module.exports = ES6;
	
	/***/ },
	/* 8 */
	/***/ function(module, exports) {
	
		"use strict";
		
		module.exports = Number.isNaN || function isNaN(a) {
			return a !== a;
		};
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var $isNaN = Number.isNaN || function (a) {
		  return a !== a;
		};
		
		module.exports = Number.isFinite || function (x) {
		  return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity;
		};
	
	/***/ },
	/* 10 */
	/***/ function(module, exports) {
	
		"use strict";
		
		var has = Object.prototype.hasOwnProperty;
		module.exports = Object.assign || function assign(target, source) {
			for (var key in source) {
				if (has.call(source, key)) {
					target[key] = source[key];
				}
			}
			return target;
		};
	
	/***/ },
	/* 11 */
	/***/ function(module, exports) {
	
		"use strict";
		
		module.exports = function sign(number) {
			return number >= 0 ? 1 : -1;
		};
	
	/***/ },
	/* 12 */
	/***/ function(module, exports) {
	
		"use strict";
		
		module.exports = function mod(number, modulo) {
			var remain = number % modulo;
			return Math.floor(remain >= 0 ? remain : remain + modulo);
		};
	
	/***/ },
	/* 13 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		module.exports = function isPrimitive(value) {
			return value === null || typeof value !== 'function' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object';
		};
	
	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol';
		
		var isPrimitive = __webpack_require__(15);
		var isCallable = __webpack_require__(16);
		var isDate = __webpack_require__(17);
		var isSymbol = __webpack_require__(18);
		
		var ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {
			if (typeof O === 'undefined' || O === null) {
				throw new TypeError('Cannot call method on ' + O);
			}
			if (typeof hint !== 'string' || hint !== 'number' && hint !== 'string') {
				throw new TypeError('hint must be "string" or "number"');
			}
			var methodNames = hint === 'string' ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var method, result, i;
			for (i = 0; i < methodNames.length; ++i) {
				method = O[methodNames[i]];
				if (isCallable(method)) {
					result = method.call(O);
					if (isPrimitive(result)) {
						return result;
					}
				}
			}
			throw new TypeError('No default value');
		};
		
		var GetMethod = function GetMethod(O, P) {
			var func = O[P];
			if (func !== null && typeof func !== 'undefined') {
				if (!isCallable(func)) {
					throw new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');
				}
				return func;
			}
		};
		
		// http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive
		module.exports = function ToPrimitive(input, PreferredType) {
			if (isPrimitive(input)) {
				return input;
			}
			var hint = 'default';
			if (arguments.length > 1) {
				if (PreferredType === String) {
					hint = 'string';
				} else if (PreferredType === Number) {
					hint = 'number';
				}
			}
		
			var exoticToPrim;
			if (hasSymbols) {
				if (Symbol.toPrimitive) {
					exoticToPrim = GetMethod(input, Symbol.toPrimitive);
				} else if (isSymbol(input)) {
					exoticToPrim = Symbol.prototype.valueOf;
				}
			}
			if (typeof exoticToPrim !== 'undefined') {
				var result = exoticToPrim.call(input, hint);
				if (isPrimitive(result)) {
					return result;
				}
				throw new TypeError('unable to convert exotic object to primitive');
			}
			if (hint === 'default' && (isDate(input) || isSymbol(input))) {
				hint = 'string';
			}
			return ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);
		};
	
	/***/ },
	/* 15 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		module.exports = function isPrimitive(value) {
			return value === null || typeof value !== 'function' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object';
		};
	
	/***/ },
	/* 16 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var fnToStr = Function.prototype.toString;
		
		var constructorRegex = /^\s*class /;
		var isES6ClassFn = function isES6ClassFn(value) {
			try {
				var fnStr = fnToStr.call(value);
				var singleStripped = fnStr.replace(/\/\/.*\n/g, '');
				var multiStripped = singleStripped.replace(/\/\*[.\s\S]*\*\//g, '');
				var spaceStripped = multiStripped.replace(/\n/mg, ' ').replace(/ {2}/g, ' ');
				return constructorRegex.test(spaceStripped);
			} catch (e) {
				return false; // not a function
			}
		};
		
		var tryFunctionObject = function tryFunctionObject(value) {
			try {
				if (isES6ClassFn(value)) {
					return false;
				}
				fnToStr.call(value);
				return true;
			} catch (e) {
				return false;
			}
		};
		var toStr = Object.prototype.toString;
		var fnClass = '[object Function]';
		var genClass = '[object GeneratorFunction]';
		var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
		
		module.exports = function isCallable(value) {
			if (!value) {
				return false;
			}
			if (typeof value !== 'function' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
				return false;
			}
			if (hasToStringTag) {
				return tryFunctionObject(value);
			}
			if (isES6ClassFn(value)) {
				return false;
			}
			var strClass = toStr.call(value);
			return strClass === fnClass || strClass === genClass;
		};
	
	/***/ },
	/* 17 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var getDay = Date.prototype.getDay;
		var tryDateObject = function tryDateObject(value) {
			try {
				getDay.call(value);
				return true;
			} catch (e) {
				return false;
			}
		};
		
		var toStr = Object.prototype.toString;
		var dateClass = '[object Date]';
		var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
		
		module.exports = function isDateObject(value) {
			if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null) {
				return false;
			}
			return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
		};
	
	/***/ },
	/* 18 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var toStr = Object.prototype.toString;
		var hasSymbols = typeof Symbol === 'function' && _typeof(Symbol()) === 'symbol';
		
		if (hasSymbols) {
			var symToStr = Symbol.prototype.toString;
			var symStringRegex = /^Symbol\(.*\)$/;
			var isSymbolObject = function isSymbolObject(value) {
				if (_typeof(value.valueOf()) !== 'symbol') {
					return false;
				}
				return symStringRegex.test(symToStr.call(value));
			};
			module.exports = function isSymbol(value) {
				if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'symbol') {
					return true;
				}
				if (toStr.call(value) !== '[object Symbol]') {
					return false;
				}
				try {
					return isSymbolObject(value);
				} catch (e) {
					return false;
				}
			};
		} else {
			module.exports = function isSymbol(value) {
				// this environment does not support Symbols.
				return false;
			};
		}
	
	/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var implementation = __webpack_require__(20);
		
		module.exports = Function.prototype.bind || implementation;
	
	/***/ },
	/* 20 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
		var slice = Array.prototype.slice;
		var toStr = Object.prototype.toString;
		var funcType = '[object Function]';
		
		module.exports = function bind(that) {
		    var target = this;
		    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
		        throw new TypeError(ERROR_MESSAGE + target);
		    }
		    var args = slice.call(arguments, 1);
		
		    var bound;
		    var binder = function binder() {
		        if (this instanceof bound) {
		            var result = target.apply(this, args.concat(slice.call(arguments)));
		            if (Object(result) === result) {
		                return result;
		            }
		            return this;
		        } else {
		            return target.apply(that, args.concat(slice.call(arguments)));
		        }
		    };
		
		    var boundLength = Math.max(0, target.length - args.length);
		    var boundArgs = [];
		    for (var i = 0; i < boundLength; i++) {
		        boundArgs.push('$' + i);
		    }
		
		    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
		
		    if (target.prototype) {
		        var Empty = function Empty() {};
		        Empty.prototype = target.prototype;
		        bound.prototype = new Empty();
		        Empty.prototype = null;
		    }
		
		    return bound;
		};
	
	/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var $isNaN = __webpack_require__(8);
		var $isFinite = __webpack_require__(9);
		
		var sign = __webpack_require__(11);
		var mod = __webpack_require__(12);
		
		var IsCallable = __webpack_require__(16);
		var toPrimitive = __webpack_require__(22);
		
		// https://es5.github.io/#x9
		var ES5 = {
			ToPrimitive: toPrimitive,
		
			ToBoolean: function ToBoolean(value) {
				return Boolean(value);
			},
			ToNumber: function ToNumber(value) {
				return Number(value);
			},
			ToInteger: function ToInteger(value) {
				var number = this.ToNumber(value);
				if ($isNaN(number)) {
					return 0;
				}
				if (number === 0 || !$isFinite(number)) {
					return number;
				}
				return sign(number) * Math.floor(Math.abs(number));
			},
			ToInt32: function ToInt32(x) {
				return this.ToNumber(x) >> 0;
			},
			ToUint32: function ToUint32(x) {
				return this.ToNumber(x) >>> 0;
			},
			ToUint16: function ToUint16(value) {
				var number = this.ToNumber(value);
				if ($isNaN(number) || number === 0 || !$isFinite(number)) {
					return 0;
				}
				var posInt = sign(number) * Math.floor(Math.abs(number));
				return mod(posInt, 0x10000);
			},
			ToString: function ToString(value) {
				return String(value);
			},
			ToObject: function ToObject(value) {
				this.CheckObjectCoercible(value);
				return Object(value);
			},
			CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {
				/* jshint eqnull:true */
				if (value == null) {
					throw new TypeError(optMessage || 'Cannot call method on ' + value);
				}
				return value;
			},
			IsCallable: IsCallable,
			SameValue: function SameValue(x, y) {
				if (x === y) {
					// 0 === -0, but they are not identical.
					if (x === 0) {
						return 1 / x === 1 / y;
					}
					return true;
				}
				return $isNaN(x) && $isNaN(y);
			},
		
			// http://www.ecma-international.org/ecma-262/5.1/#sec-8
			Type: function Type(x) {
				if (x === null) {
					return 'Null';
				}
				if (typeof x === 'undefined') {
					return 'Undefined';
				}
				if (typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object') {
					return 'Object';
				}
				if (typeof x === 'number') {
					return 'Number';
				}
				if (typeof x === 'boolean') {
					return 'Boolean';
				}
				if (typeof x === 'string') {
					return 'String';
				}
			}
		};
		
		module.exports = ES5;
	
	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var toStr = Object.prototype.toString;
		
		var isPrimitive = __webpack_require__(15);
		
		var isCallable = __webpack_require__(16);
		
		// https://es5.github.io/#x8.12
		var ES5internalSlots = {
			'[[DefaultValue]]': function DefaultValue(O, hint) {
				var actualHint = hint || (toStr.call(O) === '[object Date]' ? String : Number);
		
				if (actualHint === String || actualHint === Number) {
					var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
					var value, i;
					for (i = 0; i < methods.length; ++i) {
						if (isCallable(O[methods[i]])) {
							value = O[methods[i]]();
							if (isPrimitive(value)) {
								return value;
							}
						}
					}
					throw new TypeError('No default value');
				}
				throw new TypeError('invalid [[DefaultValue]] hint supplied');
			}
		};
		
		// https://es5.github.io/#x9
		module.exports = function ToPrimitive(input, PreferredType) {
			if (isPrimitive(input)) {
				return input;
			}
			return ES5internalSlots['[[DefaultValue]]'](input, PreferredType);
		};
	
	/***/ },
	/* 23 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var regexExec = RegExp.prototype.exec;
		var tryRegexExec = function tryRegexExec(value) {
			try {
				regexExec.call(value);
				return true;
			} catch (e) {
				return false;
			}
		};
		var toStr = Object.prototype.toString;
		var regexClass = '[object RegExp]';
		var hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';
		
		module.exports = function isRegex(value) {
			if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {
				return false;
			}
			return hasToStringTag ? tryRegexExec(value) : toStr.call(value) === regexClass;
		};
	
	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var ES = __webpack_require__(7);
		var implementation = __webpack_require__(6);
		
		var tryCall = function tryCall(fn) {
			try {
				fn();
				return true;
			} catch (e) {
				return false;
			}
		};
		
		module.exports = function getPolyfill() {
			var implemented = ES.IsCallable(Array.from) && tryCall(function () {
				Array.from({ 'length': -Infinity });
			}) && !tryCall(function () {
				Array.from([], undefined);
			});
		
			return implemented ? Array.from : implementation;
		};
	
	/***/ },
	/* 25 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var define = __webpack_require__(2);
		var getPolyfill = __webpack_require__(24);
		
		module.exports = function shimArrayFrom() {
			var polyfill = getPolyfill();
		
			define(Array, { 'from': polyfill }, {
				'from': function from() {
					return Array.from !== polyfill;
				}
			});
		
			return polyfill;
		};
	
	/***/ },
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var defineProperties = __webpack_require__(2);
		
		var implementation = __webpack_require__(27);
		var getPolyfill = __webpack_require__(29);
		var shim = __webpack_require__(30);
		
		var polyfill = getPolyfill();
		
		defineProperties(polyfill, {
			implementation: implementation,
			getPolyfill: getPolyfill,
			shim: shim
		});
		
		module.exports = polyfill;
	
	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		// modified from https://github.com/es-shims/es6-shim
		
		var keys = __webpack_require__(3);
		var bind = __webpack_require__(19);
		var canBeObject = function canBeObject(obj) {
			return typeof obj !== 'undefined' && obj !== null;
		};
		var hasSymbols = __webpack_require__(28)();
		var toObject = Object;
		var push = bind.call(Function.call, Array.prototype.push);
		var propIsEnumerable = bind.call(Function.call, Object.prototype.propertyIsEnumerable);
		var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;
		
		module.exports = function assign(target, source1) {
			if (!canBeObject(target)) {
				throw new TypeError('target must be an object');
			}
			var objTarget = toObject(target);
			var s, source, i, props, syms, value, key;
			for (s = 1; s < arguments.length; ++s) {
				source = toObject(arguments[s]);
				props = keys(source);
				var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
				if (getSymbols) {
					syms = getSymbols(source);
					for (i = 0; i < syms.length; ++i) {
						key = syms[i];
						if (propIsEnumerable(source, key)) {
							push(props, key);
						}
					}
				}
				for (i = 0; i < props.length; ++i) {
					key = props[i];
					value = source[key];
					if (propIsEnumerable(source, key)) {
						objTarget[key] = value;
					}
				}
			}
			return objTarget;
		};
	
	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var keys = __webpack_require__(3);
		
		module.exports = function hasSymbols() {
			if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') {
				return false;
			}
			if (_typeof(Symbol.iterator) === 'symbol') {
				return true;
			}
		
			var obj = {};
			var sym = Symbol('test');
			var symObj = Object(sym);
			if (typeof sym === 'string') {
				return false;
			}
		
			if (Object.prototype.toString.call(sym) !== '[object Symbol]') {
				return false;
			}
			if (Object.prototype.toString.call(symObj) !== '[object Symbol]') {
				return false;
			}
		
			// temp disabled per https://github.com/ljharb/object.assign/issues/17
			// if (sym instanceof Symbol) { return false; }
			// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
			// if (!(symObj instanceof Symbol)) { return false; }
		
			var symVal = 42;
			obj[sym] = symVal;
			for (sym in obj) {
				return false;
			}
			if (keys(obj).length !== 0) {
				return false;
			}
			if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) {
				return false;
			}
		
			if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) {
				return false;
			}
		
			var syms = Object.getOwnPropertySymbols(obj);
			if (syms.length !== 1 || syms[0] !== sym) {
				return false;
			}
		
			if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) {
				return false;
			}
		
			if (typeof Object.getOwnPropertyDescriptor === 'function') {
				var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
				if (descriptor.value !== symVal || descriptor.enumerable !== true) {
					return false;
				}
			}
		
			return true;
		};
	
	/***/ },
	/* 29 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var implementation = __webpack_require__(27);
		
		var lacksProperEnumerationOrder = function lacksProperEnumerationOrder() {
			if (!Object.assign) {
				return false;
			}
			// v8, specifically in node 4.x, has a bug with incorrect property enumeration order
			// note: this does not detect the bug unless there's 20 characters
			var str = 'abcdefghijklmnopqrst';
			var letters = str.split('');
			var map = {};
			for (var i = 0; i < letters.length; ++i) {
				map[letters[i]] = letters[i];
			}
			var obj = Object.assign({}, map);
			var actual = '';
			for (var k in obj) {
				actual += k;
			}
			return str !== actual;
		};
		
		var assignHasPendingExceptions = function assignHasPendingExceptions() {
			if (!Object.assign || !Object.preventExtensions) {
				return false;
			}
			// Firefox 37 still has "pending exception" logic in its Object.assign implementation,
			// which is 72% slower than our shim, and Firefox 40's native implementation.
			var thrower = Object.preventExtensions({ 1: 2 });
			try {
				Object.assign(thrower, 'xy');
			} catch (e) {
				return thrower[1] === 'y';
			}
			return false;
		};
		
		module.exports = function getPolyfill() {
			if (!Object.assign) {
				return implementation;
			}
			if (lacksProperEnumerationOrder()) {
				return implementation;
			}
			if (assignHasPendingExceptions()) {
				return implementation;
			}
			return Object.assign;
		};
	
	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {
	
		'use strict';
		
		var define = __webpack_require__(2);
		var getPolyfill = __webpack_require__(29);
		
		module.exports = function shimAssign() {
			var polyfill = getPolyfill();
			define(Object, { assign: polyfill }, { assign: function assign() {
					return Object.assign !== polyfill;
				} });
			return polyfill;
		};
	
	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {
	
		var require;var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, global) {'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		/*!
		 * @overview es6-promise - a tiny implementation of Promises/A+.
		 * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
		 * @license   Licensed under MIT license
		 *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
		 * @version   4.0.5
		 */
		
		(function (global, factory) {
		  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.ES6Promise = factory();
		})(undefined, function () {
		  'use strict';
		
		  function objectOrFunction(x) {
		    return typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null;
		  }
		
		  function isFunction(x) {
		    return typeof x === 'function';
		  }
		
		  var _isArray = undefined;
		  if (!Array.isArray) {
		    _isArray = function _isArray(x) {
		      return Object.prototype.toString.call(x) === '[object Array]';
		    };
		  } else {
		    _isArray = Array.isArray;
		  }
		
		  var isArray = _isArray;
		
		  var len = 0;
		  var vertxNext = undefined;
		  var customSchedulerFn = undefined;
		
		  var asap = function asap(callback, arg) {
		    queue[len] = callback;
		    queue[len + 1] = arg;
		    len += 2;
		    if (len === 2) {
		      // If len is 2, that means that we need to schedule an async flush.
		      // If additional callbacks are queued before the queue is flushed, they
		      // will be processed by this flush that we are scheduling.
		      if (customSchedulerFn) {
		        customSchedulerFn(flush);
		      } else {
		        scheduleFlush();
		      }
		    }
		  };
		
		  function setScheduler(scheduleFn) {
		    customSchedulerFn = scheduleFn;
		  }
		
		  function setAsap(asapFn) {
		    asap = asapFn;
		  }
		
		  var browserWindow = typeof window !== 'undefined' ? window : undefined;
		  var browserGlobal = browserWindow || {};
		  var BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;
		  var isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';
		
		  // test for web worker but not in IE10
		  var isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';
		
		  // node
		  function useNextTick() {
		    // node version 0.10.x displays a deprecation warning when nextTick is used recursively
		    // see https://github.com/cujojs/when/issues/410 for details
		    return function () {
		      return process.nextTick(flush);
		    };
		  }
		
		  // vertx
		  function useVertxTimer() {
		    if (typeof vertxNext !== 'undefined') {
		      return function () {
		        vertxNext(flush);
		      };
		    }
		
		    return useSetTimeout();
		  }
		
		  function useMutationObserver() {
		    var iterations = 0;
		    var observer = new BrowserMutationObserver(flush);
		    var node = document.createTextNode('');
		    observer.observe(node, { characterData: true });
		
		    return function () {
		      node.data = iterations = ++iterations % 2;
		    };
		  }
		
		  // web worker
		  function useMessageChannel() {
		    var channel = new MessageChannel();
		    channel.port1.onmessage = flush;
		    return function () {
		      return channel.port2.postMessage(0);
		    };
		  }
		
		  function useSetTimeout() {
		    // Store setTimeout reference so es6-promise will be unaffected by
		    // other code modifying setTimeout (like sinon.useFakeTimers())
		    var globalSetTimeout = setTimeout;
		    return function () {
		      return globalSetTimeout(flush, 1);
		    };
		  }
		
		  var queue = new Array(1000);
		  function flush() {
		    for (var i = 0; i < len; i += 2) {
		      var callback = queue[i];
		      var arg = queue[i + 1];
		
		      callback(arg);
		
		      queue[i] = undefined;
		      queue[i + 1] = undefined;
		    }
		
		    len = 0;
		  }
		
		  function attemptVertx() {
		    try {
		      var r = require;
		      var vertx = __webpack_require__(33);
		      vertxNext = vertx.runOnLoop || vertx.runOnContext;
		      return useVertxTimer();
		    } catch (e) {
		      return useSetTimeout();
		    }
		  }
		
		  var scheduleFlush = undefined;
		  // Decide what async method to use to triggering processing of queued callbacks:
		  if (isNode) {
		    scheduleFlush = useNextTick();
		  } else if (BrowserMutationObserver) {
		    scheduleFlush = useMutationObserver();
		  } else if (isWorker) {
		    scheduleFlush = useMessageChannel();
		  } else if (browserWindow === undefined && "function" === 'function') {
		    scheduleFlush = attemptVertx();
		  } else {
		    scheduleFlush = useSetTimeout();
		  }
		
		  function then(onFulfillment, onRejection) {
		    var _arguments = arguments;
		
		    var parent = this;
		
		    var child = new this.constructor(noop);
		
		    if (child[PROMISE_ID] === undefined) {
		      makePromise(child);
		    }
		
		    var _state = parent._state;
		
		    if (_state) {
		      (function () {
		        var callback = _arguments[_state - 1];
		        asap(function () {
		          return invokeCallback(_state, child, callback, parent._result);
		        });
		      })();
		    } else {
		      subscribe(parent, child, onFulfillment, onRejection);
		    }
		
		    return child;
		  }
		
		  /**
		    `Promise.resolve` returns a promise that will become resolved with the
		    passed `value`. It is shorthand for the following:
		  
		    ```javascript
		    let promise = new Promise(function(resolve, reject){
		      resolve(1);
		    });
		  
		    promise.then(function(value){
		      // value === 1
		    });
		    ```
		  
		    Instead of writing the above, your code now simply becomes the following:
		  
		    ```javascript
		    let promise = Promise.resolve(1);
		  
		    promise.then(function(value){
		      // value === 1
		    });
		    ```
		  
		    @method resolve
		    @static
		    @param {Any} value value that the returned promise will be resolved with
		    Useful for tooling.
		    @return {Promise} a promise that will become fulfilled with the given
		    `value`
		  */
		  function resolve(object) {
		    /*jshint validthis:true */
		    var Constructor = this;
		
		    if (object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.constructor === Constructor) {
		      return object;
		    }
		
		    var promise = new Constructor(noop);
		    _resolve(promise, object);
		    return promise;
		  }
		
		  var PROMISE_ID = Math.random().toString(36).substring(16);
		
		  function noop() {}
		
		  var PENDING = void 0;
		  var FULFILLED = 1;
		  var REJECTED = 2;
		
		  var GET_THEN_ERROR = new ErrorObject();
		
		  function selfFulfillment() {
		    return new TypeError("You cannot resolve a promise with itself");
		  }
		
		  function cannotReturnOwn() {
		    return new TypeError('A promises callback cannot return that same promise.');
		  }
		
		  function getThen(promise) {
		    try {
		      return promise.then;
		    } catch (error) {
		      GET_THEN_ERROR.error = error;
		      return GET_THEN_ERROR;
		    }
		  }
		
		  function tryThen(then, value, fulfillmentHandler, rejectionHandler) {
		    try {
		      then.call(value, fulfillmentHandler, rejectionHandler);
		    } catch (e) {
		      return e;
		    }
		  }
		
		  function handleForeignThenable(promise, thenable, then) {
		    asap(function (promise) {
		      var sealed = false;
		      var error = tryThen(then, thenable, function (value) {
		        if (sealed) {
		          return;
		        }
		        sealed = true;
		        if (thenable !== value) {
		          _resolve(promise, value);
		        } else {
		          fulfill(promise, value);
		        }
		      }, function (reason) {
		        if (sealed) {
		          return;
		        }
		        sealed = true;
		
		        _reject(promise, reason);
		      }, 'Settle: ' + (promise._label || ' unknown promise'));
		
		      if (!sealed && error) {
		        sealed = true;
		        _reject(promise, error);
		      }
		    }, promise);
		  }
		
		  function handleOwnThenable(promise, thenable) {
		    if (thenable._state === FULFILLED) {
		      fulfill(promise, thenable._result);
		    } else if (thenable._state === REJECTED) {
		      _reject(promise, thenable._result);
		    } else {
		      subscribe(thenable, undefined, function (value) {
		        return _resolve(promise, value);
		      }, function (reason) {
		        return _reject(promise, reason);
		      });
		    }
		  }
		
		  function handleMaybeThenable(promise, maybeThenable, then$$) {
		    if (maybeThenable.constructor === promise.constructor && then$$ === then && maybeThenable.constructor.resolve === resolve) {
		      handleOwnThenable(promise, maybeThenable);
		    } else {
		      if (then$$ === GET_THEN_ERROR) {
		        _reject(promise, GET_THEN_ERROR.error);
		      } else if (then$$ === undefined) {
		        fulfill(promise, maybeThenable);
		      } else if (isFunction(then$$)) {
		        handleForeignThenable(promise, maybeThenable, then$$);
		      } else {
		        fulfill(promise, maybeThenable);
		      }
		    }
		  }
		
		  function _resolve(promise, value) {
		    if (promise === value) {
		      _reject(promise, selfFulfillment());
		    } else if (objectOrFunction(value)) {
		      handleMaybeThenable(promise, value, getThen(value));
		    } else {
		      fulfill(promise, value);
		    }
		  }
		
		  function publishRejection(promise) {
		    if (promise._onerror) {
		      promise._onerror(promise._result);
		    }
		
		    publish(promise);
		  }
		
		  function fulfill(promise, value) {
		    if (promise._state !== PENDING) {
		      return;
		    }
		
		    promise._result = value;
		    promise._state = FULFILLED;
		
		    if (promise._subscribers.length !== 0) {
		      asap(publish, promise);
		    }
		  }
		
		  function _reject(promise, reason) {
		    if (promise._state !== PENDING) {
		      return;
		    }
		    promise._state = REJECTED;
		    promise._result = reason;
		
		    asap(publishRejection, promise);
		  }
		
		  function subscribe(parent, child, onFulfillment, onRejection) {
		    var _subscribers = parent._subscribers;
		    var length = _subscribers.length;
		
		    parent._onerror = null;
		
		    _subscribers[length] = child;
		    _subscribers[length + FULFILLED] = onFulfillment;
		    _subscribers[length + REJECTED] = onRejection;
		
		    if (length === 0 && parent._state) {
		      asap(publish, parent);
		    }
		  }
		
		  function publish(promise) {
		    var subscribers = promise._subscribers;
		    var settled = promise._state;
		
		    if (subscribers.length === 0) {
		      return;
		    }
		
		    var child = undefined,
		        callback = undefined,
		        detail = promise._result;
		
		    for (var i = 0; i < subscribers.length; i += 3) {
		      child = subscribers[i];
		      callback = subscribers[i + settled];
		
		      if (child) {
		        invokeCallback(settled, child, callback, detail);
		      } else {
		        callback(detail);
		      }
		    }
		
		    promise._subscribers.length = 0;
		  }
		
		  function ErrorObject() {
		    this.error = null;
		  }
		
		  var TRY_CATCH_ERROR = new ErrorObject();
		
		  function tryCatch(callback, detail) {
		    try {
		      return callback(detail);
		    } catch (e) {
		      TRY_CATCH_ERROR.error = e;
		      return TRY_CATCH_ERROR;
		    }
		  }
		
		  function invokeCallback(settled, promise, callback, detail) {
		    var hasCallback = isFunction(callback),
		        value = undefined,
		        error = undefined,
		        succeeded = undefined,
		        failed = undefined;
		
		    if (hasCallback) {
		      value = tryCatch(callback, detail);
		
		      if (value === TRY_CATCH_ERROR) {
		        failed = true;
		        error = value.error;
		        value = null;
		      } else {
		        succeeded = true;
		      }
		
		      if (promise === value) {
		        _reject(promise, cannotReturnOwn());
		        return;
		      }
		    } else {
		      value = detail;
		      succeeded = true;
		    }
		
		    if (promise._state !== PENDING) {
		      // noop
		    } else if (hasCallback && succeeded) {
		      _resolve(promise, value);
		    } else if (failed) {
		      _reject(promise, error);
		    } else if (settled === FULFILLED) {
		      fulfill(promise, value);
		    } else if (settled === REJECTED) {
		      _reject(promise, value);
		    }
		  }
		
		  function initializePromise(promise, resolver) {
		    try {
		      resolver(function resolvePromise(value) {
		        _resolve(promise, value);
		      }, function rejectPromise(reason) {
		        _reject(promise, reason);
		      });
		    } catch (e) {
		      _reject(promise, e);
		    }
		  }
		
		  var id = 0;
		  function nextId() {
		    return id++;
		  }
		
		  function makePromise(promise) {
		    promise[PROMISE_ID] = id++;
		    promise._state = undefined;
		    promise._result = undefined;
		    promise._subscribers = [];
		  }
		
		  function Enumerator(Constructor, input) {
		    this._instanceConstructor = Constructor;
		    this.promise = new Constructor(noop);
		
		    if (!this.promise[PROMISE_ID]) {
		      makePromise(this.promise);
		    }
		
		    if (isArray(input)) {
		      this._input = input;
		      this.length = input.length;
		      this._remaining = input.length;
		
		      this._result = new Array(this.length);
		
		      if (this.length === 0) {
		        fulfill(this.promise, this._result);
		      } else {
		        this.length = this.length || 0;
		        this._enumerate();
		        if (this._remaining === 0) {
		          fulfill(this.promise, this._result);
		        }
		      }
		    } else {
		      _reject(this.promise, validationError());
		    }
		  }
		
		  function validationError() {
		    return new Error('Array Methods must be provided an Array');
		  };
		
		  Enumerator.prototype._enumerate = function () {
		    var length = this.length;
		    var _input = this._input;
		
		    for (var i = 0; this._state === PENDING && i < length; i++) {
		      this._eachEntry(_input[i], i);
		    }
		  };
		
		  Enumerator.prototype._eachEntry = function (entry, i) {
		    var c = this._instanceConstructor;
		    var resolve$$ = c.resolve;
		
		    if (resolve$$ === resolve) {
		      var _then = getThen(entry);
		
		      if (_then === then && entry._state !== PENDING) {
		        this._settledAt(entry._state, i, entry._result);
		      } else if (typeof _then !== 'function') {
		        this._remaining--;
		        this._result[i] = entry;
		      } else if (c === Promise) {
		        var promise = new c(noop);
		        handleMaybeThenable(promise, entry, _then);
		        this._willSettleAt(promise, i);
		      } else {
		        this._willSettleAt(new c(function (resolve$$) {
		          return resolve$$(entry);
		        }), i);
		      }
		    } else {
		      this._willSettleAt(resolve$$(entry), i);
		    }
		  };
		
		  Enumerator.prototype._settledAt = function (state, i, value) {
		    var promise = this.promise;
		
		    if (promise._state === PENDING) {
		      this._remaining--;
		
		      if (state === REJECTED) {
		        _reject(promise, value);
		      } else {
		        this._result[i] = value;
		      }
		    }
		
		    if (this._remaining === 0) {
		      fulfill(promise, this._result);
		    }
		  };
		
		  Enumerator.prototype._willSettleAt = function (promise, i) {
		    var enumerator = this;
		
		    subscribe(promise, undefined, function (value) {
		      return enumerator._settledAt(FULFILLED, i, value);
		    }, function (reason) {
		      return enumerator._settledAt(REJECTED, i, reason);
		    });
		  };
		
		  /**
		    `Promise.all` accepts an array of promises, and returns a new promise which
		    is fulfilled with an array of fulfillment values for the passed promises, or
		    rejected with the reason of the first passed promise to be rejected. It casts all
		    elements of the passed iterable to promises as it runs this algorithm.
		  
		    Example:
		  
		    ```javascript
		    let promise1 = resolve(1);
		    let promise2 = resolve(2);
		    let promise3 = resolve(3);
		    let promises = [ promise1, promise2, promise3 ];
		  
		    Promise.all(promises).then(function(array){
		      // The array here would be [ 1, 2, 3 ];
		    });
		    ```
		  
		    If any of the `promises` given to `all` are rejected, the first promise
		    that is rejected will be given as an argument to the returned promises's
		    rejection handler. For example:
		  
		    Example:
		  
		    ```javascript
		    let promise1 = resolve(1);
		    let promise2 = reject(new Error("2"));
		    let promise3 = reject(new Error("3"));
		    let promises = [ promise1, promise2, promise3 ];
		  
		    Promise.all(promises).then(function(array){
		      // Code here never runs because there are rejected promises!
		    }, function(error) {
		      // error.message === "2"
		    });
		    ```
		  
		    @method all
		    @static
		    @param {Array} entries array of promises
		    @param {String} label optional string for labeling the promise.
		    Useful for tooling.
		    @return {Promise} promise that is fulfilled when all `promises` have been
		    fulfilled, or rejected if any of them become rejected.
		    @static
		  */
		  function all(entries) {
		    return new Enumerator(this, entries).promise;
		  }
		
		  /**
		    `Promise.race` returns a new promise which is settled in the same way as the
		    first passed promise to settle.
		  
		    Example:
		  
		    ```javascript
		    let promise1 = new Promise(function(resolve, reject){
		      setTimeout(function(){
		        resolve('promise 1');
		      }, 200);
		    });
		  
		    let promise2 = new Promise(function(resolve, reject){
		      setTimeout(function(){
		        resolve('promise 2');
		      }, 100);
		    });
		  
		    Promise.race([promise1, promise2]).then(function(result){
		      // result === 'promise 2' because it was resolved before promise1
		      // was resolved.
		    });
		    ```
		  
		    `Promise.race` is deterministic in that only the state of the first
		    settled promise matters. For example, even if other promises given to the
		    `promises` array argument are resolved, but the first settled promise has
		    become rejected before the other promises became fulfilled, the returned
		    promise will become rejected:
		  
		    ```javascript
		    let promise1 = new Promise(function(resolve, reject){
		      setTimeout(function(){
		        resolve('promise 1');
		      }, 200);
		    });
		  
		    let promise2 = new Promise(function(resolve, reject){
		      setTimeout(function(){
		        reject(new Error('promise 2'));
		      }, 100);
		    });
		  
		    Promise.race([promise1, promise2]).then(function(result){
		      // Code here never runs
		    }, function(reason){
		      // reason.message === 'promise 2' because promise 2 became rejected before
		      // promise 1 became fulfilled
		    });
		    ```
		  
		    An example real-world use case is implementing timeouts:
		  
		    ```javascript
		    Promise.race([ajax('foo.json'), timeout(5000)])
		    ```
		  
		    @method race
		    @static
		    @param {Array} promises array of promises to observe
		    Useful for tooling.
		    @return {Promise} a promise which settles in the same way as the first passed
		    promise to settle.
		  */
		  function race(entries) {
		    /*jshint validthis:true */
		    var Constructor = this;
		
		    if (!isArray(entries)) {
		      return new Constructor(function (_, reject) {
		        return reject(new TypeError('You must pass an array to race.'));
		      });
		    } else {
		      return new Constructor(function (resolve, reject) {
		        var length = entries.length;
		        for (var i = 0; i < length; i++) {
		          Constructor.resolve(entries[i]).then(resolve, reject);
		        }
		      });
		    }
		  }
		
		  /**
		    `Promise.reject` returns a promise rejected with the passed `reason`.
		    It is shorthand for the following:
		  
		    ```javascript
		    let promise = new Promise(function(resolve, reject){
		      reject(new Error('WHOOPS'));
		    });
		  
		    promise.then(function(value){
		      // Code here doesn't run because the promise is rejected!
		    }, function(reason){
		      // reason.message === 'WHOOPS'
		    });
		    ```
		  
		    Instead of writing the above, your code now simply becomes the following:
		  
		    ```javascript
		    let promise = Promise.reject(new Error('WHOOPS'));
		  
		    promise.then(function(value){
		      // Code here doesn't run because the promise is rejected!
		    }, function(reason){
		      // reason.message === 'WHOOPS'
		    });
		    ```
		  
		    @method reject
		    @static
		    @param {Any} reason value that the returned promise will be rejected with.
		    Useful for tooling.
		    @return {Promise} a promise rejected with the given `reason`.
		  */
		  function reject(reason) {
		    /*jshint validthis:true */
		    var Constructor = this;
		    var promise = new Constructor(noop);
		    _reject(promise, reason);
		    return promise;
		  }
		
		  function needsResolver() {
		    throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');
		  }
		
		  function needsNew() {
		    throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
		  }
		
		  /**
		    Promise objects represent the eventual result of an asynchronous operation. The
		    primary way of interacting with a promise is through its `then` method, which
		    registers callbacks to receive either a promise's eventual value or the reason
		    why the promise cannot be fulfilled.
		  
		    Terminology
		    -----------
		  
		    - `promise` is an object or function with a `then` method whose behavior conforms to this specification.
		    - `thenable` is an object or function that defines a `then` method.
		    - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).
		    - `exception` is a value that is thrown using the throw statement.
		    - `reason` is a value that indicates why a promise was rejected.
		    - `settled` the final resting state of a promise, fulfilled or rejected.
		  
		    A promise can be in one of three states: pending, fulfilled, or rejected.
		  
		    Promises that are fulfilled have a fulfillment value and are in the fulfilled
		    state.  Promises that are rejected have a rejection reason and are in the
		    rejected state.  A fulfillment value is never a thenable.
		  
		    Promises can also be said to *resolve* a value.  If this value is also a
		    promise, then the original promise's settled state will match the value's
		    settled state.  So a promise that *resolves* a promise that rejects will
		    itself reject, and a promise that *resolves* a promise that fulfills will
		    itself fulfill.
		  
		  
		    Basic Usage:
		    ------------
		  
		    ```js
		    let promise = new Promise(function(resolve, reject) {
		      // on success
		      resolve(value);
		  
		      // on failure
		      reject(reason);
		    });
		  
		    promise.then(function(value) {
		      // on fulfillment
		    }, function(reason) {
		      // on rejection
		    });
		    ```
		  
		    Advanced Usage:
		    ---------------
		  
		    Promises shine when abstracting away asynchronous interactions such as
		    `XMLHttpRequest`s.
		  
		    ```js
		    function getJSON(url) {
		      return new Promise(function(resolve, reject){
		        let xhr = new XMLHttpRequest();
		  
		        xhr.open('GET', url);
		        xhr.onreadystatechange = handler;
		        xhr.responseType = 'json';
		        xhr.setRequestHeader('Accept', 'application/json');
		        xhr.send();
		  
		        function handler() {
		          if (this.readyState === this.DONE) {
		            if (this.status === 200) {
		              resolve(this.response);
		            } else {
		              reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));
		            }
		          }
		        };
		      });
		    }
		  
		    getJSON('/posts.json').then(function(json) {
		      // on fulfillment
		    }, function(reason) {
		      // on rejection
		    });
		    ```
		  
		    Unlike callbacks, promises are great composable primitives.
		  
		    ```js
		    Promise.all([
		      getJSON('/posts'),
		      getJSON('/comments')
		    ]).then(function(values){
		      values[0] // => postsJSON
		      values[1] // => commentsJSON
		  
		      return values;
		    });
		    ```
		  
		    @class Promise
		    @param {function} resolver
		    Useful for tooling.
		    @constructor
		  */
		  function Promise(resolver) {
		    this[PROMISE_ID] = nextId();
		    this._result = this._state = undefined;
		    this._subscribers = [];
		
		    if (noop !== resolver) {
		      typeof resolver !== 'function' && needsResolver();
		      this instanceof Promise ? initializePromise(this, resolver) : needsNew();
		    }
		  }
		
		  Promise.all = all;
		  Promise.race = race;
		  Promise.resolve = resolve;
		  Promise.reject = reject;
		  Promise._setScheduler = setScheduler;
		  Promise._setAsap = setAsap;
		  Promise._asap = asap;
		
		  Promise.prototype = {
		    constructor: Promise,
		
		    /**
		      The primary way of interacting with a promise is through its `then` method,
		      which registers callbacks to receive either a promise's eventual value or the
		      reason why the promise cannot be fulfilled.
		    
		      ```js
		      findUser().then(function(user){
		        // user is available
		      }, function(reason){
		        // user is unavailable, and you are given the reason why
		      });
		      ```
		    
		      Chaining
		      --------
		    
		      The return value of `then` is itself a promise.  This second, 'downstream'
		      promise is resolved with the return value of the first promise's fulfillment
		      or rejection handler, or rejected if the handler throws an exception.
		    
		      ```js
		      findUser().then(function (user) {
		        return user.name;
		      }, function (reason) {
		        return 'default name';
		      }).then(function (userName) {
		        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it
		        // will be `'default name'`
		      });
		    
		      findUser().then(function (user) {
		        throw new Error('Found user, but still unhappy');
		      }, function (reason) {
		        throw new Error('`findUser` rejected and we're unhappy');
		      }).then(function (value) {
		        // never reached
		      }, function (reason) {
		        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.
		        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.
		      });
		      ```
		      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.
		    
		      ```js
		      findUser().then(function (user) {
		        throw new PedagogicalException('Upstream error');
		      }).then(function (value) {
		        // never reached
		      }).then(function (value) {
		        // never reached
		      }, function (reason) {
		        // The `PedgagocialException` is propagated all the way down to here
		      });
		      ```
		    
		      Assimilation
		      ------------
		    
		      Sometimes the value you want to propagate to a downstream promise can only be
		      retrieved asynchronously. This can be achieved by returning a promise in the
		      fulfillment or rejection handler. The downstream promise will then be pending
		      until the returned promise is settled. This is called *assimilation*.
		    
		      ```js
		      findUser().then(function (user) {
		        return findCommentsByAuthor(user);
		      }).then(function (comments) {
		        // The user's comments are now available
		      });
		      ```
		    
		      If the assimliated promise rejects, then the downstream promise will also reject.
		    
		      ```js
		      findUser().then(function (user) {
		        return findCommentsByAuthor(user);
		      }).then(function (comments) {
		        // If `findCommentsByAuthor` fulfills, we'll have the value here
		      }, function (reason) {
		        // If `findCommentsByAuthor` rejects, we'll have the reason here
		      });
		      ```
		    
		      Simple Example
		      --------------
		    
		      Synchronous Example
		    
		      ```javascript
		      let result;
		    
		      try {
		        result = findResult();
		        // success
		      } catch(reason) {
		        // failure
		      }
		      ```
		    
		      Errback Example
		    
		      ```js
		      findResult(function(result, err){
		        if (err) {
		          // failure
		        } else {
		          // success
		        }
		      });
		      ```
		    
		      Promise Example;
		    
		      ```javascript
		      findResult().then(function(result){
		        // success
		      }, function(reason){
		        // failure
		      });
		      ```
		    
		      Advanced Example
		      --------------
		    
		      Synchronous Example
		    
		      ```javascript
		      let author, books;
		    
		      try {
		        author = findAuthor();
		        books  = findBooksByAuthor(author);
		        // success
		      } catch(reason) {
		        // failure
		      }
		      ```
		    
		      Errback Example
		    
		      ```js
		    
		      function foundBooks(books) {
		    
		      }
		    
		      function failure(reason) {
		    
		      }
		    
		      findAuthor(function(author, err){
		        if (err) {
		          failure(err);
		          // failure
		        } else {
		          try {
		            findBoooksByAuthor(author, function(books, err) {
		              if (err) {
		                failure(err);
		              } else {
		                try {
		                  foundBooks(books);
		                } catch(reason) {
		                  failure(reason);
		                }
		              }
		            });
		          } catch(error) {
		            failure(err);
		          }
		          // success
		        }
		      });
		      ```
		    
		      Promise Example;
		    
		      ```javascript
		      findAuthor().
		        then(findBooksByAuthor).
		        then(function(books){
		          // found books
		      }).catch(function(reason){
		        // something went wrong
		      });
		      ```
		    
		      @method then
		      @param {Function} onFulfilled
		      @param {Function} onRejected
		      Useful for tooling.
		      @return {Promise}
		    */
		    then: then,
		
		    /**
		      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same
		      as the catch block of a try/catch statement.
		    
		      ```js
		      function findAuthor(){
		        throw new Error('couldn't find that author');
		      }
		    
		      // synchronous
		      try {
		        findAuthor();
		      } catch(reason) {
		        // something went wrong
		      }
		    
		      // async with promises
		      findAuthor().catch(function(reason){
		        // something went wrong
		      });
		      ```
		    
		      @method catch
		      @param {Function} onRejection
		      Useful for tooling.
		      @return {Promise}
		    */
		    'catch': function _catch(onRejection) {
		      return this.then(null, onRejection);
		    }
		  };
		
		  function polyfill() {
		    var local = undefined;
		
		    if (typeof global !== 'undefined') {
		      local = global;
		    } else if (typeof self !== 'undefined') {
		      local = self;
		    } else {
		      try {
		        local = Function('return this')();
		      } catch (e) {
		        throw new Error('polyfill failed because global object is unavailable in this environment');
		      }
		    }
		
		    var P = local.Promise;
		
		    if (P) {
		      var promiseToString = null;
		      try {
		        promiseToString = Object.prototype.toString.call(P.resolve());
		      } catch (e) {
		        // silently ignored
		      }
		
		      if (promiseToString === '[object Promise]' && !P.cast) {
		        return;
		      }
		    }
		
		    local.Promise = Promise;
		  }
		
		  // Strange compat..
		  Promise.polyfill = polyfill;
		  Promise.Promise = Promise;
		
		  return Promise;
		});
		//# sourceMappingURL=es6-promise.map
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32), (function() { return this; }())))
	
	/***/ },
	/* 32 */
	/***/ function(module, exports) {
	
		'use strict';
		
		// shim for using process in browser
		var process = module.exports = {};
		
		// cached from whatever global is present so that test runners that stub it
		// don't break things.  But we need to wrap it in a try catch in case it is
		// wrapped in strict mode code which doesn't define any globals.  It's inside a
		// function because try/catches deoptimize in certain engines.
		
		var cachedSetTimeout;
		var cachedClearTimeout;
		
		function defaultSetTimout() {
		    throw new Error('setTimeout has not been defined');
		}
		function defaultClearTimeout() {
		    throw new Error('clearTimeout has not been defined');
		}
		(function () {
		    try {
		        if (typeof setTimeout === 'function') {
		            cachedSetTimeout = setTimeout;
		        } else {
		            cachedSetTimeout = defaultSetTimout;
		        }
		    } catch (e) {
		        cachedSetTimeout = defaultSetTimout;
		    }
		    try {
		        if (typeof clearTimeout === 'function') {
		            cachedClearTimeout = clearTimeout;
		        } else {
		            cachedClearTimeout = defaultClearTimeout;
		        }
		    } catch (e) {
		        cachedClearTimeout = defaultClearTimeout;
		    }
		})();
		function runTimeout(fun) {
		    if (cachedSetTimeout === setTimeout) {
		        //normal enviroments in sane situations
		        return setTimeout(fun, 0);
		    }
		    // if setTimeout wasn't available but was latter defined
		    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
		        cachedSetTimeout = setTimeout;
		        return setTimeout(fun, 0);
		    }
		    try {
		        // when when somebody has screwed with setTimeout but no I.E. maddness
		        return cachedSetTimeout(fun, 0);
		    } catch (e) {
		        try {
		            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
		            return cachedSetTimeout.call(null, fun, 0);
		        } catch (e) {
		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
		            return cachedSetTimeout.call(this, fun, 0);
		        }
		    }
		}
		function runClearTimeout(marker) {
		    if (cachedClearTimeout === clearTimeout) {
		        //normal enviroments in sane situations
		        return clearTimeout(marker);
		    }
		    // if clearTimeout wasn't available but was latter defined
		    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
		        cachedClearTimeout = clearTimeout;
		        return clearTimeout(marker);
		    }
		    try {
		        // when when somebody has screwed with setTimeout but no I.E. maddness
		        return cachedClearTimeout(marker);
		    } catch (e) {
		        try {
		            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
		            return cachedClearTimeout.call(null, marker);
		        } catch (e) {
		            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
		            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
		            return cachedClearTimeout.call(this, marker);
		        }
		    }
		}
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;
		
		function cleanUpNextTick() {
		    if (!draining || !currentQueue) {
		        return;
		    }
		    draining = false;
		    if (currentQueue.length) {
		        queue = currentQueue.concat(queue);
		    } else {
		        queueIndex = -1;
		    }
		    if (queue.length) {
		        drainQueue();
		    }
		}
		
		function drainQueue() {
		    if (draining) {
		        return;
		    }
		    var timeout = runTimeout(cleanUpNextTick);
		    draining = true;
		
		    var len = queue.length;
		    while (len) {
		        currentQueue = queue;
		        queue = [];
		        while (++queueIndex < len) {
		            if (currentQueue) {
		                currentQueue[queueIndex].run();
		            }
		        }
		        queueIndex = -1;
		        len = queue.length;
		    }
		    currentQueue = null;
		    draining = false;
		    runClearTimeout(timeout);
		}
		
		process.nextTick = function (fun) {
		    var args = new Array(arguments.length - 1);
		    if (arguments.length > 1) {
		        for (var i = 1; i < arguments.length; i++) {
		            args[i - 1] = arguments[i];
		        }
		    }
		    queue.push(new Item(fun, args));
		    if (queue.length === 1 && !draining) {
		        runTimeout(drainQueue);
		    }
		};
		
		// v8 likes predictible objects
		function Item(fun, array) {
		    this.fun = fun;
		    this.array = array;
		}
		Item.prototype.run = function () {
		    this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};
		
		function noop() {}
		
		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;
		
		process.binding = function (name) {
		    throw new Error('process.binding is not supported');
		};
		
		process.cwd = function () {
		    return '/';
		};
		process.chdir = function (dir) {
		    throw new Error('process.chdir is not supported');
		};
		process.umask = function () {
		    return 0;
		};
	
	/***/ },
	/* 33 */
	/***/ function(module, exports) {
	
		/* (ignored) */
	
	/***/ },
	/* 34 */
	/***/ function(module, exports) {
	
		"use strict";
		
		window.customElements && eval("/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This shim allows elements written in, or compiled to, ES5 to work on native\n * implementations of Custom Elements.\n *\n * ES5-style classes don't work with native Custom Elements because the\n * HTMLElement constructor uses the value of `new.target` to look up the custom\n * element definition for the currently called constructor. `new.target` is only\n * set when `new` is called and is only propagated via super() calls. super()\n * is not emulatable in ES5. The pattern of `SuperClass.call(this)`` only works\n * when extending other ES5-style classes, and does not propagate `new.target`.\n *\n * This shim allows the native HTMLElement constructor to work by generating and\n * registering a stand-in class instead of the users custom element class. This\n * stand-in class's constructor has an actual call to super().\n * `customElements.define()` and `customElements.get()` are both overridden to\n * hide this stand-in class from users.\n *\n * In order to create instance of the user-defined class, rather than the stand\n * in, the stand-in's constructor swizzles its instances prototype and invokes\n * the user-defined constructor. When the user-defined constructor is called\n * directly it creates an instance of the stand-in class to get a real extension\n * of HTMLElement and returns that.\n *\n * There are two important constructors: A patched HTMLElement constructor, and\n * the StandInElement constructor. They both will be called to create an element\n * but which is called first depends on whether the browser creates the element\n * or the user-defined constructor is called directly. The variables\n * `browserConstruction` and `userConstruction` control the flow between the\n * two constructors.\n *\n * This shim should be better than forcing the polyfill because:\n *   1. It's smaller\n *   2. All reaction timings are the same as native (mostly synchronous)\n *   3. All reaction triggering DOM operations are automatically supported\n *\n * There are some restrictions and requirements on ES5 constructors:\n *   1. All constructors in a inheritance hierarchy must be ES5-style, so that\n *      they can be called with Function.call(). This effectively means that the\n *      whole application must be compiled to ES5.\n *   2. Constructors must return the value of the emulated super() call. Like\n *      `return SuperClass.call(this)`\n *   3. The `this` reference should not be used before the emulated super() call\n *      just like `this` is illegal to use before super() in ES6.\n *   4. Constructors should not create other custom elements before the emulated\n *      super() call. This is the same restriction as with native custom\n *      elements.\n *\n *  Compiling valid class-based custom elements to ES5 will satisfy these\n *  requirements with the latest version of popular transpilers.\n */\n(() => {\n  'use strict';\n\n  const NativeHTMLElement = window.HTMLElement;\n  const nativeDefine = window.customElements.define;\n  const nativeGet = window.customElements.get;\n\n  /**\n   * Map of user-provided constructors to tag names.\n   *\n   * @type {Map<Function, string>}\n   */\n  const tagnameByConstructor = new Map();\n\n  /**\n   * Map of tag names to user-provided constructors.\n   *\n   * @type {Map<string, Function>}\n   */\n  const constructorByTagname = new Map();\n\n\n  /**\n   * Whether the constructors are being called by a browser process, ie parsing\n   * or createElement.\n   */\n  let browserConstruction = false;\n\n  /**\n   * Whether the constructors are being called by a user-space process, ie\n   * calling an element constructor.\n   */\n  let userConstruction = false;\n\n  window.HTMLElement = function() {\n    if (!browserConstruction) {\n      const tagname = tagnameByConstructor.get(this.constructor);\n      const fakeClass = nativeGet.call(window.customElements, tagname);\n\n      // Make sure that the fake constructor doesn't call back to this constructor\n      userConstruction = true;\n      const instance = new (fakeClass)();\n      return instance;\n    }\n    // Else do nothing. This will be reached by ES5-style classes doing\n    // HTMLElement.call() during initialization\n    browserConstruction = false;\n  };\n  // By setting the patched HTMLElement's prototype property to the native\n  // HTMLElement's prototype we make sure that:\n  //     document.createElement('a') instanceof HTMLElement\n  // works because instanceof uses HTMLElement.prototype, which is on the\n  // ptototype chain of built-in elements.\n  window.HTMLElement.prototype = NativeHTMLElement.prototype;\n\n  window.customElements.define = (tagname, elementClass) => {\n    const elementProto = elementClass.prototype;\n    const StandInElement = class extends NativeHTMLElement {\n      constructor() {\n        // Call the native HTMLElement constructor, this gives us the\n        // under-construction instance as `this`:\n        super();\n\n        // The prototype will be wrong up because the browser used our fake\n        // class, so fix it:\n        Object.setPrototypeOf(this, elementProto);\n\n        if (!userConstruction) {\n          // Make sure that user-defined constructor bottom's out to a do-nothing\n          // HTMLElement() call\n          browserConstruction = true;\n          // Call the user-defined constructor on our instance:\n          elementClass.call(this);\n        }\n        userConstruction = false;\n      }\n    };\n    const standInProto = StandInElement.prototype;\n    StandInElement.observedAttributes = elementClass.observedAttributes;\n    standInProto.connectedCallback = elementProto.connectedCallback;\n    standInProto.disconnectedCallback = elementProto.disconnectedCallback;\n    standInProto.attributeChangedCallback = elementProto.attributeChangedCallback;\n    standInProto.adoptedCallback = elementProto.adoptedCallback;\n\n    tagnameByConstructor.set(elementClass, tagname);\n    constructorByTagname.set(tagname, elementClass);\n    nativeDefine.call(window.customElements, tagname, StandInElement);\n  };\n\n  window.customElements.get = (tagname) => constructorByTagname.get(tagname);\n\n})();");
	
	/***/ },
	/* 35 */
	/***/ function(module, exports) {
	
		'use strict';
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * @license
		 * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		 * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		 * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		 * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		 * Code distributed by Google as part of the polymer project is also
		 * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		 */
		
		/**
		 * 2.3
		 * http://w3c.github.io/webcomponents/spec/custom/#dfn-element-definition
		 * @typedef {{
		 *  name: string,
		 *  localName: string,
		 *  constructor: function(new:HTMLElement),
		 *  connectedCallback: (Function|undefined),
		 *  disconnectedCallback: (Function|undefined),
		 *  attributeChangedCallback: (Function|undefined),
		 *  observedAttributes: Array<string>,
		 * }}
		 */
		var CustomElementDefinition = void 0;
		
		/**
		 * @typedef {{
		 *  resolve: !function(undefined),
		 *  promise: !Promise<undefined>,
		 * }}
		 */
		var Deferred = void 0;
		
		(function () {
		  'use strict';
		
		  /**
		   * Gets 'customElement' from window so that it could be modified after
		   * the polyfill loads.
		   * @function
		   * @return {CustomElementRegistry}
		   */
		
		  var _customElements = function _customElements() {
		    return window['customElements'];
		  };
		
		  var _observerProp = '__$CE_observer';
		  var _attachedProp = '__$CE_attached';
		  var _upgradedProp = '__$CE_upgraded';
		
		  if (_customElements()) {
		    _customElements().flush = function () {};
		    if (!_customElements().forcePolyfill) {
		      return;
		    }
		  }
		
		  // name validation
		  // https://html.spec.whatwg.org/multipage/scripting.html#valid-custom-element-name
		
		  /**
		   * @const
		   * @type {Array<string>}
		   */
		  var reservedTagList = ['annotation-xml', 'color-profile', 'font-face', 'font-face-src', 'font-face-uri', 'font-face-format', 'font-face-name', 'missing-glyph'];
		
		  /**
		   * @param {!string} name
		   * @return {!Error|undefined}
		   */
		  function checkValidCustomElementName(name) {
		    if (!(/^[a-z][.0-9_a-z]*-[\-.0-9_a-z]*$/.test(name) && reservedTagList.indexOf(name) === -1)) {
		      return new Error('The element name \'' + name + '\' is not valid.');
		    }
		  }
		
		  /**
		   * @param {!Node} root
		   * @return {TreeWalker}
		   */
		  function createTreeWalker(root) {
		    // IE 11 requires the third and fourth arguments be present. If the third
		    // arg is null, it applies the default behaviour. However IE also requires
		    // the fourth argument be present even though the other browsers ignore it.
		    return document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, null, false);
		  }
		
		  /**
		   * @param {!Node} node
		   * @return {boolean}
		   */
		  function isElement(node) {
		    return node.nodeType === Node.ELEMENT_NODE;
		  }
		
		  /**
		   * @param {!Element} element
		   * @return {boolean}
		   */
		  function isHtmlImport(element) {
		    return element.tagName === 'LINK' && element.rel && element.rel.toLowerCase().split(' ').indexOf('import') !== -1;
		  }
		
		  /**
		   * @param {!Element} element
		   * @return {boolean}
		   */
		  function isConnected(element) {
		    var n = element;
		    do {
		      if (n[_attachedProp] || n.nodeType === Node.DOCUMENT_NODE) return true;
		      n = n.parentNode || n.nodeType === Node.DOCUMENT_FRAGMENT_NODE && n.host;
		    } while (n);
		    return false;
		  }
		
		  /**
		   * A registry of custom element definitions.
		   *
		   * See https://html.spec.whatwg.org/multipage/scripting.html#customelementsregistry
		   *
		   * @property {boolean} enableFlush Set to true to enable the flush() method
		   *   to work. This should only be done for tests, as it causes a memory leak.
		   */
		
		  var CustomElementRegistry = function () {
		    function CustomElementRegistry() {
		      _classCallCheck(this, CustomElementRegistry);
		
		      /** @private {!Map<string, !CustomElementDefinition>} **/
		      this._definitions = new Map();
		
		      /** @private {!Map<Function, string>} **/
		      this._constructors = new Map();
		
		      /** @private {!Map<string, !Deferred>} **/
		      this._whenDefinedMap = new Map();
		
		      /** @private {!Set<!MutationObserver>} **/
		      this._observers = new Set();
		
		      /** @private {!MutationObserver} **/
		      this._attributeObserver = new MutationObserver(
		      /** @type {function(Array<MutationRecord>, MutationObserver)} */
		      this._handleAttributeChange.bind(this));
		
		      /** @private {?HTMLElement} **/
		      this._newInstance = null;
		
		      /** @private {!Set<string>} **/
		      this._pendingHtmlImportUrls = new Set();
		
		      /** @type {boolean} **/
		      this.enableFlush = true;
		
		      /** @private {boolean} **/
		      this._upgradeScheduled = false;
		
		      /** @type {MutationObserver} **/
		      this._mainDocumentObserver = null;
		    }
		
		    // HTML spec part 4.13.4
		    // https://html.spec.whatwg.org/multipage/scripting.html#dom-customelementsregistry-define
		    /**
		     * @param {string} name
		     * @param {function(new:HTMLElement)} constructor
		     * @param {{extends: string}} options
		     * @return {undefined}
		     */
		
		
		    _createClass(CustomElementRegistry, [{
		      key: 'define',
		      value: function define(name, constructor, options) {
		        // 1:
		        if (typeof constructor !== 'function') {
		          throw new TypeError('constructor must be a Constructor');
		        }
		
		        // 2. If constructor is an interface object whose corresponding interface
		        //    either is HTMLElement or has HTMLElement in its set of inherited
		        //    interfaces, throw a TypeError and abort these steps.
		        //
		        // It doesn't appear possible to check this condition from script
		
		        // 3:
		        var nameError = checkValidCustomElementName(name);
		        if (nameError) throw nameError;
		
		        // 4, 5:
		        // Note: we don't track being-defined names and constructors because
		        // define() isn't normally reentrant. The only time user code can run
		        // during define() is when getting callbacks off the prototype, which
		        // would be highly-unusual. We can make define() reentrant-safe if needed.
		        if (this._definitions.has(name)) {
		          throw new Error('An element with name \'' + name + '\' is already defined');
		        }
		
		        // 6, 7:
		        if (this._constructors.has(constructor)) {
		          throw new Error('Definition failed for \'' + name + '\': ' + 'The constructor is already used.');
		        }
		
		        // 8:
		        /** @type {string} */
		        var localName = name;
		
		        // 9, 10: We do not support extends currently.
		
		        // 11, 12, 13: Our define() isn't rentrant-safe
		
		        // 14.1:
		        /** @type {Object} */
		        var prototype = constructor.prototype;
		
		        // 14.2:
		        if ((typeof prototype === 'undefined' ? 'undefined' : _typeof(prototype)) !== 'object') {
		          throw new TypeError('Definition failed for \'' + name + '\': ' + 'constructor.prototype must be an object');
		        }
		
		        /**
		         * @param {string} callbackName
		         * @return {Function|undefined}
		         */
		        function getCallback(callbackName) {
		          var callback = prototype[callbackName];
		          if (callback !== undefined && typeof callback !== 'function') {
		            throw new Error(localName + ' \'' + callbackName + '\' is not a Function');
		          }
		          return callback;
		        }
		
		        // 3, 4:
		        var connectedCallback = getCallback('connectedCallback');
		
		        // 5, 6:
		        var disconnectedCallback = getCallback('disconnectedCallback');
		
		        // Divergence from spec: we always throw if attributeChangedCallback is
		        // not a function.
		
		        // 7, 9.1:
		        var attributeChangedCallback = getCallback('attributeChangedCallback');
		
		        // 8, 9.2, 9.3:
		        var observedAttributes = attributeChangedCallback && constructor['observedAttributes'] || [];
		
		        // 15:
		        /** @type {CustomElementDefinition} */
		        var definition = {
		          name: name,
		          localName: localName,
		          constructor: constructor,
		          connectedCallback: connectedCallback,
		          disconnectedCallback: disconnectedCallback,
		          attributeChangedCallback: attributeChangedCallback,
		          observedAttributes: observedAttributes
		        };
		
		        // 16:
		        this._definitions.set(localName, definition);
		        this._constructors.set(constructor, localName);
		
		        // 17, 18, 19:
		        this._upgradeDoc();
		
		        // 20:
		        /** @type {Deferred} **/
		        var deferred = this._whenDefinedMap.get(localName);
		        if (deferred) {
		          deferred.resolve(undefined);
		          this._whenDefinedMap.delete(localName);
		        }
		      }
		
		      /**
		       * Returns the constructor defined for `name`, or `null`.
		       *
		       * @param {string} name
		       * @return {Function|undefined}
		       */
		
		    }, {
		      key: 'get',
		      value: function get(name) {
		        // https://html.spec.whatwg.org/multipage/scripting.html#custom-elements-api
		        var def = this._definitions.get(name);
		        return def ? def.constructor : undefined;
		      }
		
		      /**
		       * Returns a `Promise` that resolves when a custom element for `name` has
		       * been defined.
		       *
		       * @param {string} name
		       * @return {!Promise}
		       */
		
		    }, {
		      key: 'whenDefined',
		      value: function whenDefined(name) {
		        // https://html.spec.whatwg.org/multipage/scripting.html#dom-customelementsregistry-whendefined
		        var nameError = checkValidCustomElementName(name);
		        if (nameError) return Promise.reject(nameError);
		        if (this._definitions.has(name)) return Promise.resolve();
		
		        /** @type {Deferred} **/
		        var deferred = this._whenDefinedMap.get(name);
		        if (deferred) return deferred.promise;
		
		        var resolve = void 0;
		        var promise = new Promise(function (_resolve, _) {
		          resolve = _resolve;
		        });
		        deferred = { promise: promise, resolve: resolve };
		        this._whenDefinedMap.set(name, deferred);
		        return promise;
		      }
		
		      /**
		       * Causes all pending mutation records to be processed, and thus all
		       * customization, upgrades and custom element reactions to be called.
		       * `enableFlush` must be true for this to work. Only use during tests!
		       */
		
		    }, {
		      key: 'flush',
		      value: function flush() {
		        if (this.enableFlush) {
		          // console.warn("flush!!!");
		          this._handleMutations(this._mainDocumentObserver.takeRecords());
		          this._handleAttributeChange(this._attributeObserver.takeRecords());
		          this._observers.forEach(
		          /**
		           * @param {!MutationObserver} observer
		           * @this {CustomElementRegistry}
		           */
		          function (observer) {
		            this._handleMutations(observer.takeRecords());
		          }, this);
		        }
		      }
		
		      /**
		       * Upgrade all existing in document elements. This process is expensive so
		       * is optionally batched based on the state of HTMLImports. (Note,
		       * this batching might not be necessary if instead of walking the dom,
		       * a map of upgrade candidates was maintained.)
		       * @private
		       */
		
		    }, {
		      key: '_upgradeDoc',
		      value: function _upgradeDoc() {
		        var _this2 = this;
		
		        if (!this._upgradeScheduled) {
		          this._upgradeScheduled = true;
		          var onReady = function onReady() {
		            _this2._upgradeScheduled = false;
		            if (!_this2._mainDocumentObserver) {
		              _this2._mainDocumentObserver = _this2._observeRoot(document);
		            }
		            _this2._addNodes(document.childNodes);
		          };
		          if (window['HTMLImports']) {
		            window['HTMLImports']['whenReady'](onReady);
		          } else {
		            onReady();
		          }
		        }
		      }
		
		      /**
		       * @param {?HTMLElement} instance
		       * @private
		       */
		
		    }, {
		      key: '_setNewInstance',
		      value: function _setNewInstance(instance) {
		        this._newInstance = instance;
		      }
		
		      /**
		       * Observes a DOM root for mutations that trigger upgrades and reactions.
		       * @param {Node} root
		       * @private
		       */
		
		    }, {
		      key: '_observeRoot',
		      value: function _observeRoot(root) {
		        //console.log('_observeRoot', root, root.baseURI);
		        // console.assert(!root[_observerProp]);
		        if (root[_observerProp] != null) {
		          //console.warn(`Root ${root} is already observed`);
		          return root[_observerProp];
		        }
		        root[_observerProp] = new MutationObserver(
		        /** @type {function(Array<MutationRecord>, MutationObserver)} */
		        this._handleMutations.bind(this));
		        root[_observerProp].observe(root, { childList: true, subtree: true });
		        if (this.enableFlush) {
		          // this is memory leak, only use in tests
		          this._observers.add(root[_observerProp]);
		        }
		        return root[_observerProp];
		      }
		
		      /**
		       * @param {Node} root
		       * @private
		       */
		
		    }, {
		      key: '_unobserveRoot',
		      value: function _unobserveRoot(root) {
		        if (root[_observerProp] != null) {
		          root[_observerProp].disconnect();
		          if (this.enableFlush) {
		            this._observers.delete(root[_observerProp]);
		          }
		          root[_observerProp] = null;
		        }
		      }
		
		      /**
		       * @param {!Array<!MutationRecord>} mutations
		       * @private
		       */
		
		    }, {
		      key: '_handleMutations',
		      value: function _handleMutations(mutations) {
		        for (var i = 0; i < mutations.length; i++) {
		          /** @type {!MutationRecord} */
		          var mutation = mutations[i];
		          if (mutation.type === 'childList') {
		            // Note: we can't get an ordering between additions and removals, and
		            // so might diverge from spec reaction ordering
		            var addedNodes = /** @type {!NodeList<!Node>} */mutation.addedNodes;
		            var removedNodes = /** @type {!NodeList<!Node>} */mutation.removedNodes;
		            this._addNodes(addedNodes);
		            this._removeNodes(removedNodes);
		          }
		        }
		      }
		
		      /**
		       * @param {!(NodeList<!Node>|Array<!Node>)} nodeList
		       * @param {?Set<Node>=} visitedNodes
		       * @private
		       */
		
		    }, {
		      key: '_addNodes',
		      value: function _addNodes(nodeList, visitedNodes) {
		        visitedNodes = visitedNodes || new Set();
		
		        for (var i = 0; i < nodeList.length; i++) {
		          var root = nodeList[i];
		
		          if (!isElement(root)) {
		            continue;
		          }
		
		          // Since we're adding this node to an observed tree, we can unobserve
		          this._unobserveRoot(root);
		
		          var walker = createTreeWalker(root);
		          do {
		            var node = /** @type {!HTMLElement} */walker.currentNode;
		            this._addElement(node, visitedNodes);
		          } while (walker.nextNode());
		        }
		      }
		
		      /**
		       * @param {!HTMLElement} element
		       * @param {!Set<Node>=} visitedNodes
		       */
		
		    }, {
		      key: '_addElement',
		      value: function _addElement(element, visitedNodes) {
		        if (visitedNodes.has(element)) return;
		        visitedNodes.add(element);
		
		        /** @type {?CustomElementDefinition} */
		        var definition = this._definitions.get(element.localName);
		        if (definition) {
		          if (!element[_upgradedProp]) {
		            this._upgradeElement(element, definition, true);
		          }
		          if (element[_upgradedProp] && !element[_attachedProp] && isConnected(element)) {
		            element[_attachedProp] = true;
		            if (definition.connectedCallback) {
		              definition.connectedCallback.call(element);
		            }
		          }
		        }
		        if (element.shadowRoot) {
		          // TODO(justinfagnani): do we need to check that the shadowRoot
		          // is observed?
		          this._addNodes(element.shadowRoot.childNodes, visitedNodes);
		        }
		        if (isHtmlImport(element)) {
		          this._addImport( /** @type {!HTMLLinkElement} */element, visitedNodes);
		        }
		      }
		
		      /**
		       * @param {!HTMLLinkElement} link
		       * @param {!Set<Node>=} visitedNodes
		       */
		
		    }, {
		      key: '_addImport',
		      value: function _addImport(link, visitedNodes) {
		        var _this3 = this;
		
		        // During a tree walk to add or upgrade nodes, we may encounter multiple
		        // HTML imports that reference the same document, and may encounter
		        // imports in various states of loading.
		
		        // First, we only want to process the first import for a document in a
		        // walk, so we check visitedNodes for the document, not the link.
		        //
		        // Second, for documents that haven't loaded yet, we only want to add one
		        // listener, regardless of the number of links or walks, so we track
		        // pending loads in _pendingHtmlImportUrls.
		
		        // Check to see if the import is loaded
		        /** @type {?Document} */
		        var _import = link.import;
		        if (_import) {
		          // The import is loaded, but only process the first link element
		          if (visitedNodes.has(_import)) return;
		          visitedNodes.add(_import);
		
		          // The import is loaded observe it
		          if (!_import[_observerProp]) this._observeRoot(_import);
		
		          // walk the document
		          this._addNodes(_import.childNodes, visitedNodes);
		        } else {
		          var _ret = function () {
		            // The import is not loaded, so wait for it
		            /** @type {string} */
		            var importUrl = link.href;
		            if (_this3._pendingHtmlImportUrls.has(importUrl)) return {
		                v: void 0
		              };
		            _this3._pendingHtmlImportUrls.add(importUrl);
		
		            /**
		             * @const
		             * @type {CustomElementRegistry}
		             */
		            var _this = _this3;
		            var onLoad = function onLoad() {
		              link.removeEventListener('load', /** @type {function(Event)} */onLoad);
		              if (!link.import[_observerProp]) _this._observeRoot(link.import);
		              // We don't pass visitedNodes because this is async and not part of
		              // the current tree walk.
		              _this._addNodes(link.import.childNodes);
		            };
		            link.addEventListener('load', onLoad);
		          }();
		
		          if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
		        }
		      }
		
		      /**
		       * @param {NodeList} nodeList
		       * @private
		       */
		
		    }, {
		      key: '_removeNodes',
		      value: function _removeNodes(nodeList) {
		        for (var i = 0; i < nodeList.length; i++) {
		          var root = nodeList[i];
		
		          if (!isElement(root)) {
		            continue;
		          }
		
		          // Since we're detatching this element from an observed root, we need to
		          // reobserve it.
		          // TODO(justinfagnani): can we do this in a microtask so we don't thrash
		          // on creating and destroying MutationObservers on batch DOM mutations?
		          this._observeRoot(root);
		
		          var walker = createTreeWalker(root);
		          do {
		            var node = walker.currentNode;
		            if (node[_upgradedProp] && node[_attachedProp]) {
		              node[_attachedProp] = false;
		              var definition = this._definitions.get(node.localName);
		              if (definition && definition.disconnectedCallback) {
		                definition.disconnectedCallback.call(node);
		              }
		            }
		          } while (walker.nextNode());
		        }
		      }
		
		      /**
		       * Upgrades or customizes a custom element.
		       *
		       * @param {HTMLElement} element
		       * @param {CustomElementDefinition} definition
		       * @param {boolean} callConstructor
		       * @private
		       */
		
		    }, {
		      key: '_upgradeElement',
		      value: function _upgradeElement(element, definition, callConstructor) {
		        var prototype = definition.constructor.prototype;
		        element.__proto__ = prototype;
		        if (callConstructor) {
		          this._setNewInstance(element);
		          new definition.constructor();
		          element[_upgradedProp] = true;
		          console.assert(this._newInstance == null);
		        }
		
		        var observedAttributes = definition.observedAttributes;
		        var attributeChangedCallback = definition.attributeChangedCallback;
		        if (attributeChangedCallback && observedAttributes.length > 0) {
		          this._attributeObserver.observe(element, {
		            attributes: true,
		            attributeOldValue: true,
		            attributeFilter: observedAttributes
		          });
		
		          // Trigger attributeChangedCallback for existing attributes.
		          // https://html.spec.whatwg.org/multipage/scripting.html#upgrades
		          for (var i = 0; i < observedAttributes.length; i++) {
		            var name = observedAttributes[i];
		            if (element.hasAttribute(name)) {
		              var value = element.getAttribute(name);
		              attributeChangedCallback.call(element, name, null, value, null);
		            }
		          }
		        }
		      }
		
		      /**
		       * @param {!Array<!MutationRecord>} mutations
		       * @private
		       */
		
		    }, {
		      key: '_handleAttributeChange',
		      value: function _handleAttributeChange(mutations) {
		        for (var i = 0; i < mutations.length; i++) {
		          var mutation = mutations[i];
		          if (mutation.type === 'attributes') {
		            var target = /** @type {HTMLElement} */mutation.target;
		            // We should be gaurenteed to have a definition because this mutation
		            // observer is only observing custom elements observedAttributes
		            var definition = this._definitions.get(target.localName);
		            var name = /** @type {!string} */mutation.attributeName;
		            var oldValue = mutation.oldValue;
		            var newValue = target.getAttribute(name);
		            // Skip changes that were handled synchronously by setAttribute
		            if (newValue !== oldValue) {
		              var namespace = mutation.attributeNamespace;
		              definition.attributeChangedCallback.call(target, name, oldValue, newValue, namespace);
		            }
		          }
		        }
		      }
		    }]);
		
		    return CustomElementRegistry;
		  }();
		
		  // Closure Compiler Exports
		
		
		  window['CustomElementRegistry'] = CustomElementRegistry;
		  CustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;
		  CustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;
		  CustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;
		  CustomElementRegistry.prototype['flush'] = CustomElementRegistry.prototype.flush;
		  CustomElementRegistry.prototype['polyfilled'] = true;
		  // TODO(justinfagnani): remove these in production code
		  CustomElementRegistry.prototype['_observeRoot'] = CustomElementRegistry.prototype._observeRoot;
		  CustomElementRegistry.prototype['_addImport'] = CustomElementRegistry.prototype._addImport;
		
		  // patch window.HTMLElement
		
		  /** @const */
		  var origHTMLElement = window.HTMLElement;
		  CustomElementRegistry.prototype['nativeHTMLElement'] = origHTMLElement;
		  /**
		   * @type {function(new: HTMLElement)}
		   */
		  var newHTMLElement = function HTMLElement() {
		    var customElements = _customElements();
		
		    // If there's an being upgraded, return that
		    if (customElements._newInstance) {
		      var i = customElements._newInstance;
		      customElements._newInstance = null;
		      return i;
		    }
		    if (this.constructor) {
		      // Find the tagname of the constructor and create a new element with it
		      var tagName = customElements._constructors.get(this.constructor);
		      return _createElement(document, tagName, undefined, false);
		    }
		    throw new Error('Unknown constructor. Did you call customElements.define()?');
		  };
		  window.HTMLElement = newHTMLElement;
		  // By setting the patched HTMLElement's prototype property to the native
		  // HTMLElement's prototype we make sure that:
		  //     document.createElement('a') instanceof HTMLElement
		  // works because instanceof uses HTMLElement.prototype, which is on the
		  // ptototype chain of built-in elements.
		  window.HTMLElement.prototype = origHTMLElement.prototype;
		
		  // patch doc.createElement
		  // TODO(justinfagnani): why is the cast neccessary?
		  // Can we fix the Closure DOM externs?
		  var _nativeCreateElement =
		  /** @type {function(this:Document, string, (Object|undefined)=): !HTMLElement}}*/
		  document.createElement;
		
		  /**
		   * Creates a new element and upgrades it if it's a custom element.
		   * @param {!Document} doc
		   * @param {!string} tagName
		   * @param {Object|undefined} options
		   * @param {boolean} callConstructor whether or not to call the elements
		   *   constructor after upgrading. If an element is created by calling its
		   *   constructor, then `callConstructor` should be false to prevent double
		   *   initialization.
		   */
		  function _createElement(doc, tagName, options, callConstructor) {
		    var customElements = _customElements();
		    var element = options ? _nativeCreateElement.call(doc, tagName, options) : _nativeCreateElement.call(doc, tagName);
		    var definition = customElements._definitions.get(tagName.toLowerCase());
		    if (definition) {
		      customElements._upgradeElement(element, definition, callConstructor);
		    }
		    customElements._observeRoot(element);
		    return element;
		  };
		  document.createElement = function (tagName, options) {
		    return _createElement(document, tagName, options, true);
		  };
		
		  // patch document.createElementNS
		
		  var HTMLNS = 'http://www.w3.org/1999/xhtml';
		
		  /** @type {function(this:Document,string,string):Element} */
		  var _nativeCreateElementNS = document.createElementNS;
		  document.createElementNS =
		  /** @type {function(this:Document,(string|null),string):!Element} */
		  function (namespaceURI, qualifiedName) {
		    if (namespaceURI === HTMLNS) {
		      return document.createElement(qualifiedName);
		    } else {
		      return _nativeCreateElementNS.call(document, namespaceURI, qualifiedName);
		    }
		  };
		
		  // patch Element.attachShadow
		
		  /** @type {function({closed: boolean})} */
		  var _nativeAttachShadow = Element.prototype['attachShadow'];
		  if (_nativeAttachShadow) {
		    Object.defineProperty(Element.prototype, 'attachShadow', {
		      value: function value(options) {
		        /** @type {!Node} */
		        var root = _nativeAttachShadow.call(this, options);
		        /** @type {CustomElementRegistry} */
		        var customElements = _customElements();
		        customElements._observeRoot(root);
		        return root;
		      }
		    });
		  }
		
		  // patch document.importNode
		
		  var _nativeImportNode = document.importNode;
		  document.importNode = function (node, deep) {
		    var clone = /** @type{!Node} */_nativeImportNode.call(document, node, deep);
		    var customElements = _customElements();
		    var nodes = isElement(clone) ? [clone] : clone.childNodes;
		    /** @type {CustomElementRegistry} */_customElements()._addNodes(nodes);
		    return clone;
		  };
		
		  // patch Element.setAttribute & removeAttribute
		
		  var _nativeSetAttribute = Element.prototype.setAttribute;
		  Element.prototype['setAttribute'] = function (name, value) {
		    changeAttribute(this, name, value, _nativeSetAttribute);
		  };
		  var _nativeRemoveAttribute = Element.prototype.removeAttribute;
		  Element.prototype['removeAttribute'] = function (name) {
		    changeAttribute(this, name, null, _nativeRemoveAttribute);
		  };
		
		  function changeAttribute(element, name, value, operation) {
		    name = name.toLowerCase();
		    var oldValue = element.getAttribute(name);
		    operation.call(element, name, value);
		
		    // Bail if this wasn't a fully upgraded custom element
		    if (element[_upgradedProp] == true) {
		      var definition = _customElements()._definitions.get(element.localName);
		      var observedAttributes = definition.observedAttributes;
		      var attributeChangedCallback = definition.attributeChangedCallback;
		      if (attributeChangedCallback && observedAttributes.indexOf(name) >= 0) {
		        var newValue = element.getAttribute(name);
		        if (newValue !== oldValue) {
		          attributeChangedCallback.call(element, name, oldValue, newValue, null);
		        }
		      }
		    }
		  }
		
		  Object.defineProperty(window, 'customElements', {
		    value: new CustomElementRegistry(),
		    configurable: true,
		    enumerable: true
		  });
		
		  // TODO(justinfagnani): Remove. Temporary for backward-compatibility
		  window['CustomElements'] = {
		    takeRecords: function takeRecords() {
		      if (_customElements().flush) _customElements().flush();
		    }
		  };
		})();
	
	/***/ },
	/* 36 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		/**
		 * Patches elements that interacts with ShadyDOM
		 * such that tree traversal and mutation apis act like they would under
		 * ShadowDOM.
		 *
		 * This import enables seemless interaction with ShadyDOM powered
		 * custom elements, enabling better interoperation with 3rd party code,
		 * libraries, and frameworks that use DOM tree manipulation apis.
		 */
		
		'use strict';
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		var _flush = __webpack_require__(38);
		
		var _observeChanges = __webpack_require__(39);
		
		var _nativeMethods = __webpack_require__(40);
		
		var nativeMethods = _interopRequireWildcard(_nativeMethods);
		
		var _nativeTree = __webpack_require__(41);
		
		var nativeTree = _interopRequireWildcard(_nativeTree);
		
		var _patchBuiltins = __webpack_require__(43);
		
		var _patchEvents = __webpack_require__(48);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		if (utils.settings.inUse) {
		
		  window.ShadyDOM = {
		    // TODO(sorvell): remove when Polymer does not depend on this.
		    inUse: utils.settings.inUse,
		    // TODO(sorvell): remove when Polymer does not depend on this.
		    patch: function patch(node) {
		      return node;
		    },
		    isShadyRoot: utils.isShadyRoot,
		    enqueue: _flush.enqueue,
		    flush: _flush.flush,
		    settings: utils.settings,
		    filterMutations: _observeChanges.filterMutations,
		    observeChildren: _observeChanges.observeChildren,
		    unobserveChildren: _observeChanges.unobserveChildren,
		    nativeMethods: nativeMethods,
		    nativeTree: nativeTree
		  };
		
		  // Apply patches to events...
		  (0, _patchEvents.patchEvents)();
		  // Apply patches to builtins (e.g. Element.prototype) where applicable.
		  (0, _patchBuiltins.patchBuiltins)();
		}
	
	/***/ },
	/* 37 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.isShadyRoot = isShadyRoot;
		exports.ownerShadyRootForNode = ownerShadyRootForNode;
		exports.matchesSelector = matchesSelector;
		exports.extend = extend;
		exports.extendAll = extendAll;
		exports.mixin = mixin;
		exports.patchPrototype = patchPrototype;
		var settings = exports.settings = window.ShadyDOM || {};
		
		settings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);
		
		var desc = Object.getOwnPropertyDescriptor(Node.prototype, 'firstChild');
		
		settings.hasDescriptors = Boolean(desc && desc.configurable && desc.get);
		settings.inUse = settings.force || !settings.hasNativeShadowDOM;
		
		function isShadyRoot(obj) {
		  return Boolean(obj.__localName === 'ShadyRoot');
		}
		
		function ownerShadyRootForNode(node) {
		  var root = node.getRootNode();
		  if (isShadyRoot(root)) {
		    return root;
		  }
		}
		
		var p = Element.prototype;
		var matches = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;
		
		function matchesSelector(element, selector) {
		  return matches.call(element, selector);
		}
		
		function copyOwnProperty(name, source, target) {
		  var pd = Object.getOwnPropertyDescriptor(source, name);
		  if (pd) {
		    Object.defineProperty(target, name, pd);
		  }
		}
		
		function extend(target, source) {
		  if (target && source) {
		    var n$ = Object.getOwnPropertyNames(source);
		    for (var i = 0, n; i < n$.length && (n = n$[i]); i++) {
		      copyOwnProperty(n, source, target);
		    }
		  }
		  return target || source;
		}
		
		function extendAll(target) {
		  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		    sources[_key - 1] = arguments[_key];
		  }
		
		  for (var i = 0; i < sources.length; i++) {
		    extend(target, sources[i]);
		  }
		  return target;
		}
		
		function mixin(target, source) {
		  for (var i in source) {
		    target[i] = source[i];
		  }
		  return target;
		}
		
		function patchPrototype(obj, mixin) {
		  var proto = Object.getPrototypeOf(obj);
		  if (!proto.hasOwnProperty('__patchProto')) {
		    var patchProto = Object.create(proto);
		    patchProto.__sourceProto = proto;
		    extend(patchProto, mixin);
		    proto.__patchProto = patchProto;
		  }
		  // old browsers don't have setPrototypeOf
		  obj.__proto__ = proto.__patchProto;
		}
		
		// TODO(sorvell): actually rely on a real Promise polyfill...
		var promish = exports.promish = void 0;
		if (window.Promise) {
		  exports.promish = promish = Promise.resolve();
		} else {
		  (function () {
		    var twiddle = document.createTextNode('');
		    var content = 0;
		    exports.promish = promish = {
		      then: function then(cb) {
		        // To preserve timing with Promise microtasks
		        // we create a new observer for every callback.
		        var observer = new MutationObserver(function () {
		          observer.disconnect();
		          cb();
		        });
		        observer.observe(twiddle, { characterData: true });
		        twiddle.textContent = content++;
		      }
		    };
		  })();
		}
	
	/***/ },
	/* 38 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.enqueue = enqueue;
		exports.flush = flush;
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		// render enqueuer/flusher
		var customElements = window.customElements;
		var flushList = [];
		var scheduled = void 0;
		var flushCount = 0;
		var flushMax = 100;
		function enqueue(callback) {
		  if (!scheduled) {
		    scheduled = true;
		    utils.promish.then(flush);
		  }
		  flushList.push(callback);
		}
		
		function flush() {
		  scheduled = false;
		  flushCount++;
		  while (flushList.length) {
		    flushList.shift()();
		  }
		  if (customElements && customElements.flush) {
		    customElements.flush();
		  }
		  // continue flushing after elements are upgraded...
		  var isFlushedMaxed = flushCount > flushMax;
		  if (flushList.length && !isFlushedMaxed) {
		    flush();
		  }
		  flushCount = 0;
		  if (isFlushedMaxed) {
		    throw new Error('Loop detected in ShadyDOM distribution, aborting.');
		  }
		}
		
		flush.list = flushList;
	
	/***/ },
	/* 39 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.unobserveChildren = exports.observeChildren = undefined;
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		exports.filterMutations = filterMutations;
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var AsyncObserver = function () {
		  function AsyncObserver() {
		    _classCallCheck(this, AsyncObserver);
		
		    this._scheduled = false;
		    this.addedNodes = [];
		    this.removedNodes = [];
		    this.callbacks = new Set();
		  }
		
		  _createClass(AsyncObserver, [{
		    key: 'schedule',
		    value: function schedule() {
		      var _this = this;
		
		      if (!this._scheduled) {
		        this._scheduled = true;
		        utils.promish.then(function () {
		          _this.flush();
		        });
		      }
		    }
		  }, {
		    key: 'flush',
		    value: function flush() {
		      var _this2 = this;
		
		      if (this._scheduled) {
		        (function () {
		          _this2._scheduled = false;
		          var mutations = _this2.takeRecords();
		          if (mutations.length) {
		            _this2.callbacks.forEach(function (cb) {
		              cb(mutations);
		            });
		          }
		        })();
		      }
		    }
		  }, {
		    key: 'takeRecords',
		    value: function takeRecords() {
		      if (this.addedNodes.length || this.removedNodes.length) {
		        var mutations = [{
		          addedNodes: this.addedNodes,
		          removedNodes: this.removedNodes
		        }];
		        this.addedNodes = [];
		        this.removedNodes = [];
		        return mutations;
		      }
		      return [];
		    }
		  }]);
		
		  return AsyncObserver;
		}();
		
		// TODO(sorvell): consider instead polyfilling MutationObserver
		// directly so that users do not have to fork their code.
		// Supporting the entire api may be challenging: e.g. filtering out
		// removed nodes in the wrong scope and seeing non-distributing
		// subtree child mutations.
		
		
		var observeChildren = exports.observeChildren = function observeChildren(node, callback) {
		  node.__shady = node.__shady || {};
		  if (!node.__shady.observer) {
		    node.__shady.observer = new AsyncObserver();
		  }
		  node.__shady.observer.callbacks.add(callback);
		  var observer = node.__shady.observer;
		  return {
		    _callback: callback,
		    _observer: observer,
		    _node: node,
		    takeRecords: function takeRecords() {
		      return observer.takeRecords();
		    }
		  };
		};
		
		var unobserveChildren = exports.unobserveChildren = function unobserveChildren(handle) {
		  var observer = handle && handle._observer;
		  if (observer) {
		    observer.callbacks.delete(handle._callback);
		    if (!observer.callbacks.size) {
		      handle._node.__shady.observer = null;
		    }
		  }
		};
		
		function filterMutations(mutations, target) {
		  var targetRootNode = target.getRootNode();
		  return mutations.map(function (mutation) {
		    var mutationInScope = targetRootNode === mutation.target.getRootNode();
		    if (mutationInScope && mutation.addedNodes) {
		      var nodes = Array.from(mutation.addedNodes).filter(function (n) {
		        return targetRootNode === n.getRootNode();
		      });
		      if (nodes.length) {
		        mutation = Object.create(mutation);
		        Object.defineProperty(mutation, 'addedNodes', {
		          value: nodes,
		          configurable: true
		        });
		        return mutation;
		      }
		    } else if (mutationInScope) {
		      return mutation;
		    }
		  }).filter(function (m) {
		    return m;
		  });
		}
	
	/***/ },
	/* 40 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var nativeAppendChild = Element.prototype.appendChild;
		var appendChild = exports.appendChild = nativeAppendChild;
		
		var nativeInsertBefore = Element.prototype.insertBefore;
		var insertBefore = exports.insertBefore = nativeInsertBefore;
		
		var nativeRemoveChild = Element.prototype.removeChild;
		var removeChild = exports.removeChild = nativeRemoveChild;
		
		var nativeSetAttribute = Element.prototype.setAttribute;
		var setAttribute = exports.setAttribute = nativeSetAttribute;
		
		var nativeRemoveAttribute = Element.prototype.removeAttribute;
		var removeAttribute = exports.removeAttribute = nativeRemoveAttribute;
		
		var nativeCloneNode = Element.prototype.cloneNode;
		var cloneNode = exports.cloneNode = nativeCloneNode;
		
		var nativeImportNode = Document.prototype.importNode;
		var importNode = exports.importNode = nativeImportNode;
		
		var nativeAddEventListener = Element.prototype.addEventListener;
		var addEventListener = exports.addEventListener = nativeAddEventListener;
		
		var nativeRemoveEventListener = Element.prototype.removeEventListener;
		var removeEventListener = exports.removeEventListener = nativeRemoveEventListener;
	
	/***/ },
	/* 41 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.parentNode = parentNode;
		exports.firstChild = firstChild;
		exports.lastChild = lastChild;
		exports.previousSibling = previousSibling;
		exports.nextSibling = nextSibling;
		exports.childNodes = childNodes;
		exports.parentElement = parentElement;
		exports.firstElementChild = firstElementChild;
		exports.lastElementChild = lastElementChild;
		exports.previousElementSibling = previousElementSibling;
		exports.nextElementSibling = nextElementSibling;
		exports.children = children;
		exports.innerHTML = innerHTML;
		exports.textContent = textContent;
		
		var _innerHTML = __webpack_require__(42);
		
		var nodeWalker = document.createTreeWalker(document, NodeFilter.SHOW_ALL, null, false);
		
		var elementWalker = document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT, null, false);
		
		function parentNode(node) {
		  nodeWalker.currentNode = node;
		  return nodeWalker.parentNode();
		}
		
		function firstChild(node) {
		  nodeWalker.currentNode = node;
		  return nodeWalker.firstChild();
		}
		
		function lastChild(node) {
		  nodeWalker.currentNode = node;
		  return nodeWalker.lastChild();
		}
		
		function previousSibling(node) {
		  nodeWalker.currentNode = node;
		  return nodeWalker.previousSibling();
		}
		
		function nextSibling(node) {
		  nodeWalker.currentNode = node;
		  return nodeWalker.nextSibling();
		}
		
		function childNodes(node) {
		  var nodes = [];
		  nodeWalker.currentNode = node;
		  var n = nodeWalker.firstChild();
		  while (n) {
		    nodes.push(n);
		    n = nodeWalker.nextSibling();
		  }
		  return nodes;
		}
		
		function parentElement(node) {
		  elementWalker.currentNode = node;
		  return elementWalker.parentNode();
		}
		
		function firstElementChild(node) {
		  elementWalker.currentNode = node;
		  return elementWalker.firstChild();
		}
		
		function lastElementChild(node) {
		  elementWalker.currentNode = node;
		  return elementWalker.lastChild();
		}
		
		function previousElementSibling(node) {
		  elementWalker.currentNode = node;
		  return elementWalker.previousSibling();
		}
		
		function nextElementSibling(node) {
		  elementWalker.currentNode = node;
		  return elementWalker.nextSibling();
		}
		
		function children(node) {
		  var nodes = [];
		  elementWalker.currentNode = node;
		  var n = elementWalker.firstChild();
		  while (n) {
		    nodes.push(n);
		    n = elementWalker.nextSibling();
		  }
		  return nodes;
		}
		
		function innerHTML(node) {
		  return (0, _innerHTML.getInnerHTML)(node, function (n) {
		    return childNodes(n);
		  });
		}
		
		function textContent(node) {
		  if (node.nodeType !== Node.ELEMENT_NODE) {
		    return node.nodeValue;
		  }
		  var textWalker = document.createTreeWalker(node, NodeFilter.SHOW_TEXT, null, false);
		  var content = '',
		      n = void 0;
		  while (n = textWalker.nextNode()) {
		    // TODO(sorvell): can't use textContent since we patch it on Node.prototype!
		    // However, should probably patch it only on element.
		    content += n.nodeValue;
		  }
		  return content;
		}
	
	/***/ },
	/* 42 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		// Cribbed from ShadowDOM polyfill
		// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28
		/////////////////////////////////////////////////////////////////////////////
		// innerHTML and outerHTML
		
		// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getOuterHTML = getOuterHTML;
		exports.getInnerHTML = getInnerHTML;
		var escapeAttrRegExp = /[&\u00A0"]/g;
		var escapeDataRegExp = /[&\u00A0<>]/g;
		
		function escapeReplace(c) {
		  switch (c) {
		    case '&':
		      return '&amp;';
		    case '<':
		      return '&lt;';
		    case '>':
		      return '&gt;';
		    case '"':
		      return '&quot;';
		    case '\xA0':
		      return '&nbsp;';
		  }
		}
		
		function escapeAttr(s) {
		  return s.replace(escapeAttrRegExp, escapeReplace);
		}
		
		function escapeData(s) {
		  return s.replace(escapeDataRegExp, escapeReplace);
		}
		
		function makeSet(arr) {
		  var set = {};
		  for (var i = 0; i < arr.length; i++) {
		    set[arr[i]] = true;
		  }
		  return set;
		}
		
		// http://www.whatwg.org/specs/web-apps/current-work/#void-elements
		var voidElements = makeSet(['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr']);
		
		var plaintextParents = makeSet(['style', 'script', 'xmp', 'iframe', 'noembed', 'noframes', 'plaintext', 'noscript']);
		
		function getOuterHTML(node, parentNode, composed) {
		  switch (node.nodeType) {
		    case Node.ELEMENT_NODE:
		      {
		        var tagName = node.localName;
		        var s = '<' + tagName;
		        var attrs = node.attributes;
		        for (var i = 0, attr; attr = attrs[i]; i++) {
		          s += ' ' + attr.name + '="' + escapeAttr(attr.value) + '"';
		        }
		        s += '>';
		        if (voidElements[tagName]) {
		          return s;
		        }
		        return s + getInnerHTML(node, composed) + '</' + tagName + '>';
		      }
		    case Node.TEXT_NODE:
		      {
		        var data = node.data;
		        if (parentNode && plaintextParents[parentNode.localName]) {
		          return data;
		        }
		        return escapeData(data);
		      }
		    case Node.COMMENT_NODE:
		      {
		        return '<!--' + node.data + '-->';
		      }
		    default:
		      {
		        window.console.error(node);
		        throw new Error('not implemented');
		      }
		  }
		}
		
		function getInnerHTML(node, composed) {
		  if (node.localName === 'template') {
		    node = node.content;
		  }
		  var s = '';
		  var c$ = composed ? composed(node) : node.childNodes;
		  for (var i = 0, l = c$.length, child; i < l && (child = c$[i]); i++) {
		    s += getOuterHTML(child, node, composed);
		  }
		  return s;
		}
	
	/***/ },
	/* 43 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.patchBuiltins = patchBuiltins;
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		var _logicalMutation = __webpack_require__(44);
		
		var mutation = _interopRequireWildcard(_logicalMutation);
		
		var _patchAccessors = __webpack_require__(47);
		
		var _logicalProperties = __webpack_require__(45);
		
		var _patchEvents = __webpack_require__(48);
		
		var _attachShadow2 = __webpack_require__(49);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function getAssignedSlot(node) {
		  mutation.renderRootNode(node);
		  return (0, _logicalProperties.getProperty)(node, 'assignedSlot') || null;
		}
		
		var nodeMixin = {
		
		  addEventListener: _patchEvents.addEventListener,
		
		  removeEventListener: _patchEvents.removeEventListener,
		
		  appendChild: function appendChild(node) {
		    return mutation.insertBefore(this, node);
		  },
		  insertBefore: function insertBefore(node, ref_node) {
		    return mutation.insertBefore(this, node, ref_node);
		  },
		  removeChild: function removeChild(node) {
		    return mutation.removeChild(this, node);
		  },
		  replaceChild: function replaceChild(node, ref_node) {
		    this.insertBefore(node, ref_node);
		    this.removeChild(ref_node);
		    return node;
		  },
		  cloneNode: function cloneNode(deep) {
		    return mutation.cloneNode(this, deep);
		  },
		  getRootNode: function getRootNode(options) {
		    return mutation.getRootNode(this, options);
		  },
		
		
		  get isConnected() {
		    return document.documentElement.contains(this);
		  }
		
		};
		
		// NOTE: For some reason `Text` redefines `assignedSlot`
		var textMixin = {
		  get assignedSlot() {
		    return getAssignedSlot(this);
		  }
		};
		
		var fragmentMixin = {
		
		  // TODO(sorvell): consider doing native QSA and filtering results.
		  querySelector: function querySelector(selector) {
		    // match selector and halt on first result.
		    var result = mutation.query(this, function (n) {
		      return utils.matchesSelector(n, selector);
		    }, function (n) {
		      return Boolean(n);
		    })[0];
		    return result || null;
		  },
		  querySelectorAll: function querySelectorAll(selector) {
		    return mutation.query(this, function (n) {
		      return utils.matchesSelector(n, selector);
		    });
		  }
		};
		
		var slotMixin = {
		  assignedNodes: function assignedNodes(options) {
		    if (this.localName === 'slot') {
		      mutation.renderRootNode(this);
		      return this.__shady ? (options && options.flatten ? this.__shady.distributedNodes : this.__shady.assignedNodes) || [] : [];
		    }
		  }
		};
		
		var elementMixin = utils.extendAll({
		  setAttribute: function setAttribute(name, value) {
		    mutation.setAttribute(this, name, value);
		  },
		  removeAttribute: function removeAttribute(name) {
		    mutation.removeAttribute(this, name);
		  },
		  attachShadow: function attachShadow(options) {
		    return (0, _attachShadow2.attachShadow)(this, options);
		  },
		
		
		  get slot() {
		    return this.getAttribute('slot');
		  },
		
		  set slot(value) {
		    this.setAttribute('slot', value);
		  },
		
		  get assignedSlot() {
		    return getAssignedSlot(this);
		  }
		
		}, fragmentMixin, slotMixin);
		
		Object.defineProperties(elementMixin, _patchAccessors.ShadowRootAccessor);
		
		var documentMixin = utils.extendAll({}, fragmentMixin);
		
		Object.defineProperties(documentMixin, {
		  _activeElement: _patchAccessors.ActiveElementAccessor.activeElement
		});
		
		function patchBuiltin(proto, obj) {
		  var n$ = Object.getOwnPropertyNames(obj);
		  for (var i = 0; i < n$.length; i++) {
		    var n = n$[i];
		    var d = Object.getOwnPropertyDescriptor(obj, n);
		    // NOTE: we prefer writing directly here because some browsers
		    // have descriptors that are writable but not configurable (e.g.
		    // `appendChild` on older browsers)
		    if (d.value) {
		      proto[n] = d.value;
		    } else {
		      Object.defineProperty(proto, n, d);
		    }
		  }
		}
		
		// Apply patches to builtins (e.g. Element.prototype). Some of these patches
		// can be done unconditionally (mostly methods like
		// `Element.prototype.appendChild`) and some can only be done when the browser
		// has proper descriptors on the builtin prototype
		// (e.g. `Element.prototype.firstChild`)`. When descriptors are not available,
		// elements are individually patched when needed (see e.g.
		// `patchInside/OutsideElementAccessors` in `patch-accessors.js`).
		function patchBuiltins() {
		  // These patches can always be done, for all supported browsers.
		  patchBuiltin(window.Node.prototype, nodeMixin);
		  patchBuiltin(window.Text.prototype, textMixin);
		  patchBuiltin(window.DocumentFragment.prototype, fragmentMixin);
		  patchBuiltin(window.Element.prototype, elementMixin);
		  patchBuiltin(window.Document.prototype, documentMixin);
		  // patch this only on the instance because (1) main document is only
		  // one we care about; (2) better compatibility with other polyfills
		  // that may also patch the instance (e.g. CE)
		  var previousImportNode = document.importNode;
		  document.importNode = function (node, deep) {
		    return mutation.importNode(node, deep, previousImportNode);
		  };
		  if (window.HTMLSlotElement) {
		    patchBuiltin(window.HTMLSlotElement.prototype, slotMixin);
		  }
		  // These patches can *only* be done
		  // on browsers that have proper property descriptors on builtin prototypes.
		  // This includes: IE11, Edge, Chrome >= 4?; Safari >= 10, Firefox
		  // On older browsers (Chrome <= 4?, Safari 9), a per element patching
		  // strategy is used for patching accessors.
		  if (utils.settings.hasDescriptors) {
		    (0, _patchAccessors.patchAccessors)(window.Node.prototype);
		    (0, _patchAccessors.patchAccessors)(window.Text.prototype);
		    (0, _patchAccessors.patchAccessors)(window.DocumentFragment.prototype);
		    (0, _patchAccessors.patchAccessors)(window.Element.prototype);
		    var nativeHTMLElement = window.customElements && customElements.nativeHTMLElement || HTMLElement;
		    (0, _patchAccessors.patchAccessors)(nativeHTMLElement.prototype);
		    (0, _patchAccessors.patchAccessors)(window.Document.prototype);
		    if (window.HTMLSlotElement) {
		      (0, _patchAccessors.patchAccessors)(window.HTMLSlotElement.prototype);
		    }
		  }
		}
	
	/***/ },
	/* 44 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getRootNode = getRootNode;
		exports.query = query;
		exports.renderRootNode = renderRootNode;
		exports.setAttribute = setAttribute;
		exports.removeAttribute = removeAttribute;
		exports.insertBefore = insertBefore;
		exports.removeChild = removeChild;
		exports.cloneNode = cloneNode;
		exports.importNode = importNode;
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		var _logicalProperties = __webpack_require__(45);
		
		var _logicalTree = __webpack_require__(46);
		
		var logicalTree = _interopRequireWildcard(_logicalTree);
		
		var _nativeMethods = __webpack_require__(40);
		
		var nativeMethods = _interopRequireWildcard(_nativeMethods);
		
		var _nativeTree = __webpack_require__(41);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		// Try to add node. Record logical info, track insertion points, perform
		// distribution iff needed. Return true if the add is handled.
		function addNode(container, node, ref_node) {
		  var ownerRoot = utils.ownerShadyRootForNode(container);
		  var ipAdded = void 0;
		  if (ownerRoot) {
		    // optimization: special insertion point tracking
		    // TODO(sorvell): verify that the renderPending check here should not be needed.
		    if (node.__noInsertionPoint && !ownerRoot._changePending) {
		      ownerRoot._skipUpdateInsertionPoints = true;
		    }
		    // note: we always need to see if an insertion point is added
		    // since this saves logical tree info; however, invalidation state
		    // needs
		    ipAdded = _maybeAddInsertionPoint(node, container, ownerRoot);
		    // invalidate insertion points IFF not already invalid!
		    if (ipAdded) {
		      ownerRoot._skipUpdateInsertionPoints = false;
		    }
		  }
		  if ((0, _logicalProperties.hasProperty)(container, 'firstChild')) {
		    logicalTree.recordInsertBefore(node, container, ref_node);
		  }
		  // if not distributing and not adding to host, do a fast path addition
		  // TODO(sorvell): revisit flow since `ipAdded` needed here if
		  // node is a fragment that has a patched QSA.
		  var handled = _maybeDistribute(node, container, ownerRoot, ipAdded) || container.shadyRoot;
		  return handled;
		}
		
		// Try to remove node: update logical info and perform distribution iff
		// needed. Return true if the removal has been handled.
		// note that it's possible for both the node's host and its parent
		// to require distribution... both cases are handled here.
		function removeNode(node) {
		  // important that we want to do this only if the node has a logical parent
		  var logicalParent = (0, _logicalProperties.hasProperty)(node, 'parentNode') && (0, _logicalProperties.getProperty)(node, 'parentNode');
		  var distributed = void 0;
		  var ownerRoot = utils.ownerShadyRootForNode(node);
		  if (logicalParent || ownerRoot) {
		    // distribute node's parent iff needed
		    distributed = maybeDistributeParent(node);
		    if (logicalParent) {
		      logicalTree.recordRemoveChild(node, logicalParent);
		    }
		    // remove node from root and distribute it iff needed
		    var removedDistributed = ownerRoot && _removeDistributedChildren(ownerRoot, node);
		    var addedInsertionPoint = logicalParent && ownerRoot && logicalParent.localName === ownerRoot.getInsertionPointTag();
		    if (removedDistributed || addedInsertionPoint) {
		      ownerRoot._skipUpdateInsertionPoints = false;
		      updateRootViaContentChange(ownerRoot);
		    }
		  }
		  _removeOwnerShadyRoot(node);
		  return distributed;
		}
		
		function _scheduleObserver(node, addedNode, removedNode) {
		  var observer = node.__shady && node.__shady.observer;
		  if (observer) {
		    if (addedNode) {
		      observer.addedNodes.push(addedNode);
		    }
		    if (removedNode) {
		      observer.removedNodes.push(removedNode);
		    }
		    observer.schedule();
		  }
		}
		
		function removeNodeFromParent(node, parent) {
		  if (parent) {
		    _scheduleObserver(parent, null, node);
		    return removeNode(node);
		  } else {
		    _removeOwnerShadyRoot(node);
		  }
		}
		
		function _hasCachedOwnerRoot(node) {
		  return Boolean(node.__ownerShadyRoot !== undefined);
		}
		
		function getRootNode(node) {
		  if (!node || !node.nodeType) {
		    return;
		  }
		  var root = node.__ownerShadyRoot;
		  if (root === undefined) {
		    if (utils.isShadyRoot(node)) {
		      root = node;
		    } else {
		      var parent = node.parentNode;
		      root = parent ? getRootNode(parent) : node;
		    }
		    // memo-ize result for performance but only memo-ize
		    // result if node is in the document. This avoids a problem where a root
		    // can be cached while an element is inside a fragment.
		    // If this happens and we cache the result, the value can become stale
		    // because for perf we avoid processing the subtree of added fragments.
		    if (document.documentElement.contains(node)) {
		      node.__ownerShadyRoot = root;
		    }
		  }
		  return root;
		}
		
		function _maybeDistribute(node, container, ownerRoot, ipAdded) {
		  // TODO(sorvell): technically we should check non-fragment nodes for
		  // <content> children but since this case is assumed to be exceedingly
		  // rare, we avoid the cost and will address with some specific api
		  // when the need arises.  For now, the user must call
		  // distributeContent(true), which updates insertion points manually
		  // and forces distribution.
		  var insertionPointTag = ownerRoot && ownerRoot.getInsertionPointTag() || '';
		  var fragContent = node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && !node.__noInsertionPoint && insertionPointTag && node.querySelector(insertionPointTag);
		  var wrappedContent = fragContent && fragContent.parentNode.nodeType !== Node.DOCUMENT_FRAGMENT_NODE;
		  var hasContent = fragContent || node.localName === insertionPointTag;
		  // There are 3 possible cases where a distribution may need to occur:
		  // 1. <content> being inserted (the host of the shady root where
		  //    content is inserted needs distribution)
		  // 2. children being inserted into parent with a shady root (parent
		  //    needs distribution)
		  // 3. container is an insertionPoint
		  if (hasContent || container.localName === insertionPointTag || ipAdded) {
		    if (ownerRoot) {
		      // note, insertion point list update is handled after node
		      // mutations are complete
		      updateRootViaContentChange(ownerRoot);
		    }
		  }
		  var needsDist = _nodeNeedsDistribution(container);
		  if (needsDist) {
		    updateRootViaContentChange(container.shadyRoot);
		  }
		  // Return true when distribution will fully handle the composition
		  // Note that if a content was being inserted that was wrapped by a node,
		  // and the parent does not need distribution, return false to allow
		  // the nodes to be added directly, after which children may be
		  // distributed and composed into the wrapping node(s)
		  return needsDist || hasContent && !wrappedContent;
		}
		
		/* note: parent argument is required since node may have an out
		of date parent at this point; returns true if a <content> is being added */
		function _maybeAddInsertionPoint(node, parent, root) {
		  var added = void 0;
		  var insertionPointTag = root.getInsertionPointTag();
		  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE && !node.__noInsertionPoint) {
		    var c$ = node.querySelectorAll(insertionPointTag);
		    for (var i = 0, n, np, na; i < c$.length && (n = c$[i]); i++) {
		      np = n.parentNode;
		      // don't allow node's parent to be fragment itself
		      if (np === node) {
		        np = parent;
		      }
		      na = _maybeAddInsertionPoint(n, np, root);
		      added = added || na;
		    }
		  } else if (node.localName === insertionPointTag) {
		    logicalTree.recordChildNodes(parent);
		    logicalTree.recordChildNodes(node);
		    added = true;
		  }
		  return added;
		}
		
		function _nodeNeedsDistribution(node) {
		  return node && node.shadyRoot && node.shadyRoot.hasInsertionPoint();
		}
		
		function _removeDistributedChildren(root, container) {
		  var hostNeedsDist = void 0;
		  var ip$ = root._insertionPoints;
		  for (var i = 0; i < ip$.length; i++) {
		    var insertionPoint = ip$[i];
		    if (_contains(container, insertionPoint)) {
		      var dc$ = insertionPoint.assignedNodes({ flatten: true });
		      for (var j = 0; j < dc$.length; j++) {
		        hostNeedsDist = true;
		        var node = dc$[j];
		        var parent = (0, _nativeTree.parentNode)(node);
		        if (parent) {
		          nativeMethods.removeChild.call(parent, node);
		        }
		      }
		    }
		  }
		  return hostNeedsDist;
		}
		
		function _contains(container, node) {
		  while (node) {
		    if (node == container) {
		      return true;
		    }
		    node = node.parentNode;
		  }
		}
		
		function _removeOwnerShadyRoot(node) {
		  // optimization: only reset the tree if node is actually in a root
		  if (_hasCachedOwnerRoot(node)) {
		    var c$ = node.childNodes;
		    for (var i = 0, l = c$.length, n; i < l && (n = c$[i]); i++) {
		      _removeOwnerShadyRoot(n);
		    }
		  }
		  node.__ownerShadyRoot = undefined;
		}
		
		// TODO(sorvell): This will fail if distribution that affects this
		// question is pending; this is expected to be exceedingly rare, but if
		// the issue comes up, we can force a flush in this case.
		function firstComposedNode(insertionPoint) {
		  var n$ = insertionPoint.assignedNodes({ flatten: true });
		  var root = getRootNode(insertionPoint);
		  for (var i = 0, l = n$.length, n; i < l && (n = n$[i]); i++) {
		    // means that we're composed to this spot.
		    if (root.isFinalDestination(insertionPoint, n)) {
		      return n;
		    }
		  }
		}
		
		function maybeDistributeParent(node) {
		  var parent = node.parentNode;
		  if (_nodeNeedsDistribution(parent)) {
		    updateRootViaContentChange(parent.shadyRoot);
		    return true;
		  }
		}
		
		function updateRootViaContentChange(root) {
		  // mark root as mutation based on a mutation
		  root._changePending = true;
		  root.update();
		}
		
		function distributeAttributeChange(node, name) {
		  if (name === 'slot') {
		    maybeDistributeParent(node);
		  } else if (node.localName === 'slot' && name === 'name') {
		    var root = utils.ownerShadyRootForNode(node);
		    if (root) {
		      root.update();
		    }
		  }
		}
		
		// NOTE: `query` is used primarily for ShadyDOM's querySelector impl,
		// but it's also generally useful to recurse through the element tree
		// and is used by Polymer's styling system.
		function query(node, matcher, halter) {
		  var list = [];
		  _queryElements(node.childNodes, matcher, halter, list);
		  return list;
		}
		
		function _queryElements(elements, matcher, halter, list) {
		  for (var i = 0, l = elements.length, c; i < l && (c = elements[i]); i++) {
		    if (c.nodeType === Node.ELEMENT_NODE && _queryElement(c, matcher, halter, list)) {
		      return true;
		    }
		  }
		}
		
		function _queryElement(node, matcher, halter, list) {
		  var result = matcher(node);
		  if (result) {
		    list.push(node);
		  }
		  if (halter && halter(result)) {
		    return result;
		  }
		  _queryElements(node.childNodes, matcher, halter, list);
		}
		
		function renderRootNode(element) {
		  var root = element.getRootNode();
		  if (utils.isShadyRoot(root)) {
		    root.render();
		  }
		}
		
		function setAttribute(node, attr, value) {
		  // avoid scoping elements in non-main document to avoid template documents
		  if (window.ShadyCSS && attr === 'class' && node.ownerDocument === document) {
		    window.ShadyCSS.setElementClass(node, value);
		  } else {
		    nativeMethods.setAttribute.call(node, attr, value);
		    distributeAttributeChange(node, attr);
		  }
		}
		
		function removeAttribute(node, attr) {
		  nativeMethods.removeAttribute.call(node, attr);
		  distributeAttributeChange(node, attr);
		}
		
		// cases in which we may not be able to just do standard native call
		// 1. container has a shadyRoot (needsDistribution IFF the shadyRoot
		// has an insertion point)
		// 2. container is a shadyRoot (don't distribute, instead set
		// container to container.host.
		// 3. node is <content> (host of container needs distribution)
		function insertBefore(parent, node, ref_node) {
		  if (ref_node) {
		    var p = (0, _logicalProperties.getProperty)(ref_node, 'parentNode');
		    if (p !== undefined && p !== parent) {
		      throw Error('The ref_node to be inserted before is not a child ' + 'of this node');
		    }
		  }
		  // remove node from its current position iff it's in a tree.
		  if (node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
		    var _parent = (0, _logicalProperties.getProperty)(node, 'parentNode');
		    removeNodeFromParent(node, _parent);
		  }
		  if (!addNode(parent, node, ref_node)) {
		    if (ref_node) {
		      // if ref_node is an insertion point replace with first distributed node
		      var root = utils.ownerShadyRootForNode(ref_node);
		      if (root) {
		        ref_node = ref_node.localName === root.getInsertionPointTag() ? firstComposedNode(ref_node) : ref_node;
		      }
		    }
		    // if adding to a shadyRoot, add to host instead
		    var container = utils.isShadyRoot(parent) ? parent.host : parent;
		    if (ref_node) {
		      nativeMethods.insertBefore.call(container, node, ref_node);
		    } else {
		      nativeMethods.appendChild.call(container, node);
		    }
		  }
		  _scheduleObserver(parent, node);
		  return node;
		}
		
		/**
		  Removes the given `node` from the element's `lightChildren`.
		  This method also performs dom composition.
		*/
		function removeChild(parent, node) {
		  if (node.parentNode !== parent) {
		    throw Error('The node to be removed is not a child of this node: ' + node);
		  }
		  if (!removeNode(node)) {
		    // if removing from a shadyRoot, remove form host instead
		    var container = utils.isShadyRoot(parent) ? parent.host : parent;
		    // not guaranteed to physically be in container; e.g.
		    // undistributed nodes.
		    var nativeParent = (0, _nativeTree.parentNode)(node);
		    if (container === nativeParent) {
		      nativeMethods.removeChild.call(container, node);
		    }
		  }
		  _scheduleObserver(parent, null, node);
		  return node;
		}
		
		function cloneNode(node, deep) {
		  if (node.localName == 'template') {
		    return nativeMethods.cloneNode.call(node, deep);
		  } else {
		    var n = nativeMethods.cloneNode.call(node, false);
		    if (deep) {
		      var c$ = node.childNodes;
		      for (var i = 0, nc; i < c$.length; i++) {
		        nc = c$[i].cloneNode(true);
		        n.appendChild(nc);
		      }
		    }
		    return n;
		  }
		}
		
		// note: Though not technically correct, we fast path `importNode`
		// when called on a node not owned by the main document.
		// This allows, for example, elements that cannot
		// contain custom elements and are therefore not likely to contain shadowRoots
		// to cloned natively. This is a fairly significant performance win.
		function importNode(node, deep, nativeImportNode) {
		  if (!nativeImportNode) {
		    nativeImportNode = nativeMethods.importNode;
		  }
		  if (node.ownerDocument !== document) {
		    return nativeImportNode.call(document, node, deep);
		  }
		  var n = nativeImportNode.call(document, node, false);
		  if (deep) {
		    var c$ = node.childNodes;
		    for (var i = 0, nc; i < c$.length; i++) {
		      nc = importNode(c$[i], true, nativeImportNode);
		      n.appendChild(nc);
		    }
		  }
		  return n;
		}
	
	/***/ },
	/* 45 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getProperty = getProperty;
		exports.hasProperty = hasProperty;
		function getProperty(node, prop) {
		  return node.__shady && node.__shady[prop];
		}
		
		function hasProperty(node, prop) {
		  return getProperty(node, prop) !== undefined;
		}
	
	/***/ },
	/* 46 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.recordChildNodes = undefined;
		exports.recordInsertBefore = recordInsertBefore;
		exports.recordRemoveChild = recordRemoveChild;
		
		var _logicalProperties = __webpack_require__(45);
		
		var _patchAccessors = __webpack_require__(47);
		
		var _nativeTree = __webpack_require__(41);
		
		function recordInsertBefore(node, container, ref_node) {
		  (0, _patchAccessors.patchInsideElementAccessors)(container);
		  container.__shady = container.__shady || {};
		  if ((0, _logicalProperties.hasProperty)(container, 'firstChild')) {
		    container.__shady.childNodes = null;
		  }
		  // handle document fragments
		  if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
		    var c$ = node.childNodes;
		    for (var i = 0; i < c$.length; i++) {
		      linkNode(c$[i], container, ref_node);
		    }
		    // cleanup logical dom in doc fragment.
		    node.__shady = node.__shady || {};
		    var resetTo = (0, _logicalProperties.hasProperty)(node, 'firstChild') ? null : undefined;
		    node.__shady.firstChild = node.__shady.lastChild = resetTo;
		    node.__shady.childNodes = resetTo;
		  } else {
		    linkNode(node, container, ref_node);
		  }
		}
		
		function linkNode(node, container, ref_node) {
		  (0, _patchAccessors.patchOutsideElementAccessors)(node);
		  ref_node = ref_node || null;
		  node.__shady = node.__shady || {};
		  container.__shady = container.__shady || {};
		  if (ref_node) {
		    ref_node.__shady = ref_node.__shady || {};
		  }
		  // update ref_node.previousSibling <-> node
		  node.__shady.previousSibling = ref_node ? ref_node.__shady.previousSibling : container.lastChild;
		  var ps = node.__shady.previousSibling;
		  if (ps && ps.__shady) {
		    ps.__shady.nextSibling = node;
		  }
		  // update node <-> ref_node
		  var ns = node.__shady.nextSibling = ref_node;
		  if (ns && ns.__shady) {
		    ns.__shady.previousSibling = node;
		  }
		  // update node <-> container
		  node.__shady.parentNode = container;
		  if (ref_node) {
		    if (ref_node === container.__shady.firstChild) {
		      container.__shady.firstChild = node;
		    }
		  } else {
		    container.__shady.lastChild = node;
		    if (!container.__shady.firstChild) {
		      container.__shady.firstChild = node;
		    }
		  }
		  // remove caching of childNodes
		  container.__shady.childNodes = null;
		}
		
		function recordRemoveChild(node, container) {
		  node.__shady = node.__shady || {};
		  container.__shady = container.__shady || {};
		  if (node === container.__shady.firstChild) {
		    container.__shady.firstChild = node.__shady.nextSibling;
		  }
		  if (node === container.__shady.lastChild) {
		    container.__shady.lastChild = node.__shady.previousSibling;
		  }
		  var p = node.__shady.previousSibling;
		  var n = node.__shady.nextSibling;
		  if (p) {
		    p.__shady = p.__shady || {};
		    p.__shady.nextSibling = n;
		  }
		  if (n) {
		    n.__shady = n.__shady || {};
		    n.__shady.previousSibling = p;
		  }
		  // When an element is removed, logical data is no longer tracked.
		  // Explicitly set `undefined` here to indicate this. This is disginguished
		  // from `null` which is set if info is null.
		  node.__shady.parentNode = node.__shady.previousSibling = node.__shady.nextSibling = undefined;
		  if ((0, _logicalProperties.hasProperty)(container, 'childNodes')) {
		    // remove caching of childNodes
		    container.__shady.childNodes = null;
		  }
		}
		
		var recordChildNodes = exports.recordChildNodes = function recordChildNodes(node) {
		  if (!(0, _logicalProperties.hasProperty)(node, 'firstChild')) {
		    node.__shady = node.__shady || {};
		    node.__shady.firstChild = (0, _nativeTree.firstChild)(node);
		    node.__shady.lastChild = (0, _nativeTree.lastChild)(node);
		    (0, _patchAccessors.patchInsideElementAccessors)(node);
		    var c$ = node.__shady.childNodes = (0, _nativeTree.childNodes)(node);
		    for (var i = 0, n; i < c$.length && (n = c$[i]); i++) {
		      n.__shady = n.__shady || {};
		      n.__shady.parentNode = node;
		      n.__shady.nextSibling = c$[i + 1] || null;
		      n.__shady.previousSibling = c$[i - 1] || null;
		      (0, _patchAccessors.patchOutsideElementAccessors)(n);
		    }
		  }
		};
	
	/***/ },
	/* 47 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.patchInsideElementAccessors = exports.patchOutsideElementAccessors = exports.ActiveElementAccessor = exports.ShadowRootAccessor = undefined;
		exports.patchAccessors = patchAccessors;
		exports.patchShadowRootAccessors = patchShadowRootAccessors;
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		var _innerHTML = __webpack_require__(42);
		
		var _logicalProperties = __webpack_require__(45);
		
		var _nativeTree = __webpack_require__(41);
		
		var nativeTree = _interopRequireWildcard(_nativeTree);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function generateSimpleDescriptor(prop) {
		  return {
		    get: function get() {
		      var l = (0, _logicalProperties.getProperty)(this, prop);
		      return l !== undefined ? l : nativeTree[prop](this);
		    },
		
		    configurable: true
		  };
		}
		
		var domParser = new DOMParser();
		
		function insertDOMFrom(target, from) {
		  var c$ = Array.from(from.childNodes);
		  for (var i = 0; i < c$.length; i++) {
		    target.appendChild(c$[i]);
		  }
		}
		
		function clearNode(node) {
		  while (node.firstChild) {
		    node.removeChild(node.firstChild);
		  }
		}
		
		var nativeActiveElementDescriptor = Object.getOwnPropertyDescriptor(Document.prototype, 'activeElement');
		function getDocumentActiveElement() {
		  if (nativeActiveElementDescriptor && nativeActiveElementDescriptor.get) {
		    return nativeActiveElementDescriptor.get.call(document);
		  } else if (!utils.settings.hasDescriptors) {
		    return document.activeElement;
		  }
		}
		
		function activeElementForNode(node) {
		  var active = getDocumentActiveElement();
		  if (!active) {
		    return null;
		  }
		  var isShadyRoot = !!utils.isShadyRoot(node);
		  if (node !== document) {
		    // If this node isn't a document or shady root, then it doesn't have
		    // an active element.
		    if (!isShadyRoot) {
		      return null;
		    }
		    // If this shady root's host is the active element or the active
		    // element is not a descendant of the host (in the composed tree),
		    // then it doesn't have an active element.
		    if (node.host === active || !node.host.contains(active)) {
		      return null;
		    }
		  }
		  // This node is either the document or a shady root of which the active
		  // element is a (composed) descendant of its host; iterate upwards to
		  // find the active element's most shallow host within it.
		  var activeRoot = utils.ownerShadyRootForNode(active);
		  while (activeRoot && activeRoot !== node) {
		    active = activeRoot.host;
		    activeRoot = utils.ownerShadyRootForNode(active);
		  }
		  if (node === document) {
		    // This node is the document, so activeRoot should be null.
		    return activeRoot ? null : active;
		  } else {
		    // This node is a non-document shady root, and it should be
		    // activeRoot.
		    return activeRoot === node ? active : null;
		  }
		}
		
		var OutsideAccessors = {
		  // node...
		  parentElement: generateSimpleDescriptor('parentElement'),
		
		  parentNode: generateSimpleDescriptor('parentNode'),
		
		  nextSibling: generateSimpleDescriptor('nextSibling'),
		
		  previousSibling: generateSimpleDescriptor('previousSibling'),
		
		  className: {
		    get: function get() {
		      return this.getAttribute('class');
		    },
		    set: function set(value) {
		      this.setAttribute('class', value);
		    },
		
		    configurable: true
		  },
		
		  // fragment, element, document
		  nextElementSibling: {
		    get: function get() {
		      if ((0, _logicalProperties.hasProperty)(this, 'nextSibling')) {
		        var n = this.nextSibling;
		        while (n && n.nodeType !== Node.ELEMENT_NODE) {
		          n = n.nextSibling;
		        }
		        return n;
		      } else {
		        return nativeTree.nextElementSibling(this);
		      }
		    },
		
		    configurable: true
		  },
		
		  previousElementSibling: {
		    get: function get() {
		      if ((0, _logicalProperties.hasProperty)(this, 'previousSibling')) {
		        var n = this.previousSibling;
		        while (n && n.nodeType !== Node.ELEMENT_NODE) {
		          n = n.previousSibling;
		        }
		        return n;
		      } else {
		        return nativeTree.previousElementSibling(this);
		      }
		    },
		
		    configurable: true
		  }
		
		};
		
		var InsideAccessors = {
		
		  childNodes: {
		    get: function get() {
		      if ((0, _logicalProperties.hasProperty)(this, 'firstChild')) {
		        if (!this.__shady.childNodes) {
		          this.__shady.childNodes = [];
		          for (var n = this.firstChild; n; n = n.nextSibling) {
		            this.__shady.childNodes.push(n);
		          }
		        }
		        return this.__shady.childNodes;
		      } else {
		        return nativeTree.childNodes(this);
		      }
		    },
		
		    configurable: true
		  },
		
		  firstChild: generateSimpleDescriptor('firstChild'),
		
		  lastChild: generateSimpleDescriptor('lastChild'),
		
		  textContent: {
		    get: function get() {
		      if ((0, _logicalProperties.hasProperty)(this, 'firstChild')) {
		        var tc = [];
		        for (var i = 0, cn = this.childNodes, c; c = cn[i]; i++) {
		          if (c.nodeType !== Node.COMMENT_NODE) {
		            tc.push(c.textContent);
		          }
		        }
		        return tc.join('');
		      } else {
		        return nativeTree.textContent(this);
		      }
		    },
		    set: function set(text) {
		      if (this.nodeType !== Node.ELEMENT_NODE) {
		        // TODO(sorvell): can't do this if patch nodeValue.
		        this.nodeValue = text;
		      } else {
		        clearNode(this);
		        if (text) {
		          this.appendChild(document.createTextNode(text));
		        }
		      }
		    },
		
		    configurable: true
		  },
		
		  // fragment, element, document
		  firstElementChild: {
		    get: function get() {
		      if ((0, _logicalProperties.hasProperty)(this, 'firstChild')) {
		        var n = this.firstChild;
		        while (n && n.nodeType !== Node.ELEMENT_NODE) {
		          n = n.nextSibling;
		        }
		        return n;
		      } else {
		        return nativeTree.firstElementChild(this);
		      }
		    },
		
		    configurable: true
		  },
		
		  lastElementChild: {
		    get: function get() {
		      if ((0, _logicalProperties.hasProperty)(this, 'lastChild')) {
		        var n = this.lastChild;
		        while (n && n.nodeType !== Node.ELEMENT_NODE) {
		          n = n.previousSibling;
		        }
		        return n;
		      } else {
		        return nativeTree.lastElementChild(this);
		      }
		    },
		
		    configurable: true
		  },
		
		  children: {
		    get: function get() {
		      if ((0, _logicalProperties.hasProperty)(this, 'firstChild')) {
		        return Array.prototype.filter.call(this.childNodes, function (n) {
		          return n.nodeType === Node.ELEMENT_NODE;
		        });
		      } else {
		        return nativeTree.children(this);
		      }
		    },
		
		    configurable: true
		  },
		
		  // element (HTMLElement on IE11)
		  innerHTML: {
		    get: function get() {
		      var content = this.localName === 'template' ? this.content : this;
		      if ((0, _logicalProperties.hasProperty)(this, 'firstChild')) {
		        return (0, _innerHTML.getInnerHTML)(content);
		      } else {
		        return nativeTree.innerHTML(content);
		      }
		    },
		    set: function set(text) {
		      var content = this.localName === 'template' ? this.content : this;
		      clearNode(content);
		      var doc = domParser.parseFromString(text, 'text/html');
		      if (doc.head) {
		        insertDOMFrom(content, doc.head);
		      }
		      if (doc.body) {
		        insertDOMFrom(content, doc.body);
		      }
		    },
		
		    configurable: true
		  }
		
		};
		
		// Note: Can be patched on element prototype on all browsers.
		// Must be patched on instance on browsers that support native Shadow DOM
		// but do not have builtin accessors (old Chrome).
		var ShadowRootAccessor = exports.ShadowRootAccessor = {
		  shadowRoot: {
		    get: function get() {
		      return this.shadyRoot;
		    },
		    set: function set(value) {
		      this.shadyRoot = value;
		    },
		
		    configurable: true
		  }
		};
		
		// Note: Can be patched on document prototype on browsers with builtin accessors.
		// Must be patched separately on simulated ShadowRoot.
		// Must be patched as `_activeElement` on browsers without builtin accessors.
		var ActiveElementAccessor = exports.ActiveElementAccessor = {
		
		  activeElement: {
		    get: function get() {
		      return activeElementForNode(this);
		    },
		    set: function set() {},
		
		    configurable: true
		  }
		
		};
		
		// patch a group of descriptors on an object only if it exists or if the `force`
		// argument is true.
		function patchAccessorGroup(obj, descriptors, force) {
		  for (var p in descriptors) {
		    var objDesc = Object.getOwnPropertyDescriptor(obj, p);
		    if (objDesc && objDesc.configurable || !objDesc && force) {
		      Object.defineProperty(obj, p, descriptors[p]);
		    } else if (force) {
		      console.warn('Could not define', p, 'on', obj);
		    }
		  }
		}
		
		// patch dom accessors on proto where they exist
		function patchAccessors(proto) {
		  patchAccessorGroup(proto, OutsideAccessors);
		  patchAccessorGroup(proto, InsideAccessors);
		  patchAccessorGroup(proto, ActiveElementAccessor);
		}
		
		// ensure element descriptors (IE/Edge don't have em)
		function patchShadowRootAccessors(proto) {
		  patchAccessorGroup(proto, InsideAccessors, true);
		  patchAccessorGroup(proto, ActiveElementAccessor, true);
		}
		
		// ensure an element has patched "outside" accessors; no-op when not needed
		var patchOutsideElementAccessors = exports.patchOutsideElementAccessors = utils.settings.hasDescriptors ? function () {} : function (element) {
		  if (!(element.__shady && element.__shady.__outsideAccessors)) {
		    element.__shady = element.__shady || {};
		    element.__shady.__outsideAccessors = true;
		    patchAccessorGroup(element, OutsideAccessors, true);
		  }
		};
		
		// ensure an element has patched "inside" accessors; no-op when not needed
		var patchInsideElementAccessors = exports.patchInsideElementAccessors = utils.settings.hasDescriptors ? function () {} : function (element) {
		  if (!(element.__shady && element.__shady.__insideAccessors)) {
		    element.__shady = element.__shady || {};
		    element.__shady.__insideAccessors = true;
		    patchAccessorGroup(element, InsideAccessors, true);
		    patchAccessorGroup(element, ShadowRootAccessor, true);
		  }
		};
	
	/***/ },
	/* 48 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		exports.addEventListener = addEventListener;
		exports.removeEventListener = removeEventListener;
		exports.patchEvents = patchEvents;
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		var _nativeMethods = __webpack_require__(40);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937
		var alwaysComposed = {
		  blur: true,
		  focus: true,
		  focusin: true,
		  focusout: true,
		  click: true,
		  dblclick: true,
		  mousedown: true,
		  mouseenter: true,
		  mouseleave: true,
		  mousemove: true,
		  mouseout: true,
		  mouseover: true,
		  mouseup: true,
		  wheel: true,
		  beforeinput: true,
		  input: true,
		  keydown: true,
		  keyup: true,
		  compositionstart: true,
		  compositionupdate: true,
		  compositionend: true,
		  touchstart: true,
		  touchend: true,
		  touchmove: true,
		  touchcancel: true,
		  pointerover: true,
		  pointerenter: true,
		  pointerdown: true,
		  pointermove: true,
		  pointerup: true,
		  pointercancel: true,
		  pointerout: true,
		  pointerleave: true,
		  gotpointercapture: true,
		  lostpointercapture: true,
		  dragstart: true,
		  drag: true,
		  dragenter: true,
		  dragleave: true,
		  dragover: true,
		  drop: true,
		  dragend: true,
		  DOMActivate: true,
		  DOMFocusIn: true,
		  DOMFocusOut: true,
		  keypress: true
		};
		
		function pathComposer(startNode, composed) {
		  var composedPath = [];
		  var current = startNode;
		  var startRoot = startNode === window ? window : startNode.getRootNode();
		  while (current) {
		    composedPath.push(current);
		    if (current.assignedSlot) {
		      current = current.assignedSlot;
		    } else if (current.nodeType === Node.DOCUMENT_FRAGMENT_NODE && current.host && (composed || current !== startRoot)) {
		      current = current.host;
		    } else {
		      current = current.parentNode;
		    }
		  }
		  // event composedPath includes window when startNode's ownerRoot is document
		  if (composedPath[composedPath.length - 1] === document) {
		    composedPath.push(window);
		  }
		  return composedPath;
		}
		
		function retarget(refNode, path) {
		  if (!utils.isShadyRoot) {
		    return refNode;
		  }
		  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's
		  // shadow-including inclusive ancestor, return ANCESTOR.
		  var refNodePath = pathComposer(refNode, true);
		  var p$ = path;
		  for (var i = 0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {
		    ancestor = p$[i];
		    root = ancestor === window ? window : ancestor.getRootNode();
		    if (root !== lastRoot) {
		      rootIdx = refNodePath.indexOf(root);
		      lastRoot = root;
		    }
		    if (!utils.isShadyRoot(root) || rootIdx > -1) {
		      return ancestor;
		    }
		  }
		}
		
		var eventMixin = {
		
		  get composed() {
		    if (this.isTrusted && this.__composed === undefined) {
		      this.__composed = alwaysComposed[this.type];
		    }
		    return this.__composed || false;
		  },
		
		  composedPath: function composedPath() {
		    if (!this.__composedPath) {
		      this.__composedPath = pathComposer(this.__target, this.composed);
		    }
		    return this.__composedPath;
		  },
		
		
		  get target() {
		    return retarget(this.currentTarget, this.composedPath());
		  },
		
		  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting
		  get relatedTarget() {
		    if (!this.__relatedTarget) {
		      return null;
		    }
		    if (!this.__relatedTargetComposedPath) {
		      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);
		    }
		    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget
		    return retarget(this.currentTarget, this.__relatedTargetComposedPath);
		  },
		  stopPropagation: function stopPropagation() {
		    Event.prototype.stopPropagation.call(this);
		    this.__propagationStopped = true;
		  },
		  stopImmediatePropagation: function stopImmediatePropagation() {
		    Event.prototype.stopImmediatePropagation.call(this);
		    this.__immediatePropagationStopped = true;
		    this.__propagationStopped = true;
		  }
		};
		
		function mixinComposedFlag(Base) {
		  // NOTE: avoiding use of `class` here so that transpiled output does not
		  // try to do `Base.call` with a dom construtor.
		  var klazz = function klazz(type, options) {
		    var event = new Base(type, options);
		    event.__composed = options && Boolean(options.composed);
		    return event;
		  };
		  // put constructor properties on subclass
		  utils.mixin(klazz, Base);
		  klazz.prototype = Base.prototype;
		  return klazz;
		}
		
		var nonBubblingEventsToRetarget = {
		  focus: true,
		  blur: true
		};
		
		function fireHandlers(event, node, phase) {
		  var hs = node.__handlers && node.__handlers[event.type] && node.__handlers[event.type][phase];
		  if (hs) {
		    for (var i = 0, fn; fn = hs[i]; i++) {
		      fn.call(node, event);
		      if (event.__immediatePropagationStopped) {
		        return;
		      }
		    }
		  }
		}
		
		function retargetNonBubblingEvent(e) {
		  var path = e.composedPath();
		  var node = void 0;
		  // override `currentTarget` to let patched `target` calculate correctly
		  Object.defineProperty(e, 'currentTarget', {
		    get: function get() {
		      return node;
		    },
		    configurable: true
		  });
		  for (var i = path.length - 1; i >= 0; i--) {
		    node = path[i];
		    // capture phase fires all capture handlers
		    fireHandlers(e, node, 'capture');
		    if (e.__propagationStopped) {
		      return;
		    }
		  }
		
		  // set the event phase to `AT_TARGET` as in spec
		  Object.defineProperty(e, 'eventPhase', { value: Event.AT_TARGET });
		
		  // the event only needs to be fired when owner roots change when iterating the event path
		  // keep track of the last seen owner root
		  var lastFiredRoot = void 0;
		  for (var _i = 0; _i < path.length; _i++) {
		    node = path[_i];
		    if (_i === 0 || node.shadowRoot && node.shadowRoot === lastFiredRoot) {
		      fireHandlers(e, node, 'bubble');
		      // don't bother with window, it doesn't have `getRootNode` and will be last in the path anyway
		      if (node !== window) {
		        lastFiredRoot = node.getRootNode();
		      }
		      if (e.__propagationStopped) {
		        return;
		      }
		    }
		  }
		}
		
		function addEventListener(type, fn, optionsOrCapture) {
		  if (!fn) {
		    return;
		  }
		
		  // The callback `fn` might be used for multiple nodes/events. Since we generate
		  // a wrapper function, we need to keep track of it when we remove the listener.
		  // It's more efficient to store the node/type/options information as Array in
		  // `fn` itself rather than the node (we assume that the same callback is used
		  // for few nodes at most, whereas a node will likely have many event listeners).
		  // NOTE(valdrin) invoking external functions is costly, inline has better perf.
		  var capture = void 0,
		      once = void 0,
		      passive = void 0;
		  if ((typeof optionsOrCapture === 'undefined' ? 'undefined' : _typeof(optionsOrCapture)) === 'object') {
		    capture = Boolean(optionsOrCapture.capture);
		    once = Boolean(optionsOrCapture.once);
		    passive = Boolean(optionsOrCapture.passive);
		  } else {
		    capture = Boolean(optionsOrCapture);
		    once = false;
		    passive = false;
		  }
		  if (fn.__eventWrappers) {
		    // Stop if the wrapper function has already been created.
		    for (var i = 0; i < fn.__eventWrappers.length; i++) {
		      if (fn.__eventWrappers[i].node === this && fn.__eventWrappers[i].type === type && fn.__eventWrappers[i].capture === capture && fn.__eventWrappers[i].once === once && fn.__eventWrappers[i].passive === passive) {
		        return;
		      }
		    }
		  } else {
		    fn.__eventWrappers = [];
		  }
		
		  var wrapperFn = function wrapperFn(e) {
		    // Support `once` option.
		    if (once) {
		      this.removeEventListener(type, fn, optionsOrCapture);
		    }
		    if (!e.__target) {
		      e.__target = e.target;
		      e.__relatedTarget = e.relatedTarget;
		      utils.patchPrototype(e, eventMixin);
		    }
		    // There are two critera that should stop events from firing on this node
		    // 1. the event is not composed and the current node is not in the same root as the target
		    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node
		    if (e.composed || e.composedPath().indexOf(this) > -1) {
		      if (e.eventPhase === Event.BUBBLING_PHASE) {
		        if (e.target === e.relatedTarget) {
		          e.stopImmediatePropagation();
		          return;
		        }
		      }
		      return fn(e);
		    }
		  };
		  // Store the wrapper information.
		  fn.__eventWrappers.push({
		    node: this,
		    type: type,
		    capture: capture,
		    once: once,
		    passive: passive,
		    wrapperFn: wrapperFn
		  });
		
		  if (nonBubblingEventsToRetarget[type]) {
		    this.__handlers = this.__handlers || {};
		    this.__handlers[type] = this.__handlers[type] || { capture: [], bubble: [] };
		    this.__handlers[type][capture ? 'capture' : 'bubble'].push(wrapperFn);
		  } else {
		    _nativeMethods.addEventListener.call(this, type, wrapperFn, optionsOrCapture);
		  }
		}
		
		function removeEventListener(type, fn, optionsOrCapture) {
		  if (!fn) {
		    return;
		  }
		
		  // NOTE(valdrin) invoking external functions is costly, inline has better perf.
		  var capture = void 0,
		      once = void 0,
		      passive = void 0;
		  if ((typeof optionsOrCapture === 'undefined' ? 'undefined' : _typeof(optionsOrCapture)) === 'object') {
		    capture = Boolean(optionsOrCapture.capture);
		    once = Boolean(optionsOrCapture.once);
		    passive = Boolean(optionsOrCapture.passive);
		  } else {
		    capture = Boolean(optionsOrCapture);
		    once = false;
		    passive = false;
		  }
		  // Search the wrapped function.
		  var wrapperFn = undefined;
		  if (fn.__eventWrappers) {
		    for (var i = 0; i < fn.__eventWrappers.length; i++) {
		      if (fn.__eventWrappers[i].node === this && fn.__eventWrappers[i].type === type && fn.__eventWrappers[i].capture === capture && fn.__eventWrappers[i].once === once && fn.__eventWrappers[i].passive === passive) {
		        wrapperFn = fn.__eventWrappers.splice(i, 1)[0].wrapperFn;
		        // Cleanup.
		        if (!fn.__eventWrappers.length) {
		          fn.__eventWrappers = undefined;
		        }
		        break;
		      }
		    }
		  }
		
		  _nativeMethods.removeEventListener.call(this, type, wrapperFn || fn, optionsOrCapture);
		  if (wrapperFn && nonBubblingEventsToRetarget[type] && this.__handlers && this.__handlers[type]) {
		    var arr = this.__handlers[type][capture ? 'capture' : 'bubble'];
		    var idx = arr.indexOf(wrapperFn);
		    if (idx > -1) {
		      arr.splice(idx, 1);
		    }
		  }
		}
		
		function activateFocusEventOverrides() {
		  for (var ev in nonBubblingEventsToRetarget) {
		    window.addEventListener(ev, function (e) {
		      if (!e.__target) {
		        e.__target = e.target;
		        e.__relatedTarget = e.relatedTarget;
		        utils.patchPrototype(e, eventMixin);
		        retargetNonBubblingEvent(e);
		        e.stopImmediatePropagation();
		      }
		    }, true);
		  }
		}
		
		var PatchedEvent = mixinComposedFlag(window.Event);
		var PatchedCustomEvent = mixinComposedFlag(window.CustomEvent);
		var PatchedMouseEvent = mixinComposedFlag(window.MouseEvent);
		
		function patchEvents() {
		  window.Event = PatchedEvent;
		  window.CustomEvent = PatchedCustomEvent;
		  window.MouseEvent = PatchedMouseEvent;
		  activateFocusEventOverrides();
		}
	
	/***/ },
	/* 49 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.attachShadow = attachShadow;
		
		var _arraySplice = __webpack_require__(50);
		
		var _utils = __webpack_require__(37);
		
		var utils = _interopRequireWildcard(_utils);
		
		var _flush = __webpack_require__(38);
		
		var _logicalTree = __webpack_require__(46);
		
		var _nativeMethods = __webpack_require__(40);
		
		var _nativeTree = __webpack_require__(41);
		
		var _patchAccessors = __webpack_require__(47);
		
		var _distributor = __webpack_require__(51);
		
		var _distributor2 = _interopRequireDefault(_distributor);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		/**
		  Implements a pared down version of ShadowDOM's scoping, which is easy to
		  polyfill across browsers.
		*/
		function attachShadow(host, options) {
		  if (!host) {
		    throw 'Must provide a host.';
		  }
		  if (!options) {
		    throw 'Not enough arguments.';
		  }
		  // NOTE: this strange construction is necessary because
		  // DocumentFragment cannot be subclassed on older browsers.
		  var shadowRoot = document.createDocumentFragment();
		  shadowRoot.__proto__ = ShadyRootPrototype;
		  shadowRoot._init(host);
		  return shadowRoot;
		}
		
		var ShadyRootPrototype = Object.create(DocumentFragment.prototype);
		utils.extendAll(ShadyRootPrototype, {
		  _init: function _init(host) {
		    // NOTE: set a fake local name so this element can be
		    // distinguished from a DocumentFragment when patching.
		    // FF doesn't allow this to be `localName`
		    this.__localName = 'ShadyRoot';
		    // logical dom setup
		    (0, _logicalTree.recordChildNodes)(host);
		    (0, _logicalTree.recordChildNodes)(this);
		    // root <=> host
		    host.shadowRoot = this;
		    this.host = host;
		    // state flags
		    this._renderPending = false;
		    this._hasRendered = false;
		    this._changePending = false;
		    this._distributor = new _distributor2.default(this);
		    this.update();
		  },
		
		
		  // async render
		  update: function update() {
		    var _this = this;
		
		    if (!this._renderPending) {
		      this._renderPending = true;
		      (0, _flush.enqueue)(function () {
		        return _this.render();
		      });
		    }
		  },
		
		
		  // returns the oldest renderPending ancestor root.
		  _getRenderRoot: function _getRenderRoot() {
		    var renderRoot = this;
		    var root = this;
		    while (root) {
		      if (root._renderPending) {
		        renderRoot = root;
		      }
		      root = root._rendererForHost();
		    }
		    return renderRoot;
		  },
		
		
		  // Returns the shadyRoot `this.host` if `this.host`
		  // has children that require distribution.
		  _rendererForHost: function _rendererForHost() {
		    var root = this.host.getRootNode();
		    if (utils.isShadyRoot(root)) {
		      var c$ = this.host.childNodes;
		      for (var i = 0, c; i < c$.length; i++) {
		        c = c$[i];
		        if (this._distributor.isInsertionPoint(c)) {
		          return root;
		        }
		      }
		    }
		  },
		  render: function render() {
		    if (this._renderPending) {
		      this._getRenderRoot()._render();
		    }
		  },
		  _render: function _render() {
		    this._renderPending = false;
		    this._changePending = false;
		    if (!this._skipUpdateInsertionPoints) {
		      this.updateInsertionPoints();
		    } else if (!this._hasRendered) {
		      this._insertionPoints = [];
		    }
		    this._skipUpdateInsertionPoints = false;
		    // TODO(sorvell): can add a first render optimization here
		    // to use if there are no insertion points
		    // 1. clear host node of composed children
		    // 2. appendChild the shadowRoot itself or (more robust) its logical children
		    // NOTE: this didn't seem worth it in perf testing
		    // but not ready to delete this info.
		    // logical
		    this.distribute();
		    // physical
		    this.compose();
		    this._hasRendered = true;
		  },
		  forceRender: function forceRender() {
		    this._renderPending = true;
		    this.render();
		  },
		  distribute: function distribute() {
		    var dirtyRoots = this._distributor.distribute();
		    for (var i = 0; i < dirtyRoots.length; i++) {
		      dirtyRoots[i]._render();
		    }
		  },
		  updateInsertionPoints: function updateInsertionPoints() {
		    var i$ = this.__insertionPoints;
		    // if any insertion points have been removed, clear their distribution info
		    if (i$) {
		      for (var i = 0, c; i < i$.length; i++) {
		        c = i$[i];
		        if (c.getRootNode() !== this) {
		          this._distributor.clearAssignedSlots(c);
		        }
		      }
		    }
		    i$ = this._insertionPoints = this._distributor.getInsertionPoints();
		    // ensure insertionPoints's and their parents have logical dom info.
		    // save logical tree info
		    // a. for shadyRoot
		    // b. for insertion points (fallback)
		    // c. for parents of insertion points
		    for (var _i = 0, _c; _i < i$.length; _i++) {
		      _c = i$[_i];
		      _c.__shady = _c.__shady || {};
		      (0, _logicalTree.recordChildNodes)(_c);
		      (0, _logicalTree.recordChildNodes)(_c.parentNode);
		    }
		  },
		
		
		  get _insertionPoints() {
		    if (!this.__insertionPoints) {
		      this.updateInsertionPoints();
		    }
		    return this.__insertionPoints || (this.__insertionPoints = []);
		  },
		
		  set _insertionPoints(insertionPoints) {
		    this.__insertionPoints = insertionPoints;
		  },
		
		  hasInsertionPoint: function hasInsertionPoint() {
		    return this._distributor.hasInsertionPoint();
		  },
		  compose: function compose() {
		    // compose self
		    // note: it's important to mark this clean before distribution
		    // so that attachment that provokes additional distribution (e.g.
		    // adding something to your parentNode) works
		    this._composeTree();
		    // TODO(sorvell): See fast paths here in Polymer v1
		    // (these seem unnecessary)
		  },
		
		
		  // Reify dom such that it is at its correct rendering position
		  // based on logical distribution.
		  _composeTree: function _composeTree() {
		    this._updateChildNodes(this.host, this._composeNode(this.host));
		    var p$ = this._insertionPoints || [];
		    for (var i = 0, l = p$.length, p, parent; i < l && (p = p$[i]); i++) {
		      parent = p.parentNode;
		      if (parent !== this.host && parent !== this) {
		        this._updateChildNodes(parent, this._composeNode(parent));
		      }
		    }
		  },
		
		
		  // Returns the list of nodes which should be rendered inside `node`.
		  _composeNode: function _composeNode(node) {
		    var children = [];
		    var c$ = (node.shadyRoot || node).childNodes;
		    for (var i = 0; i < c$.length; i++) {
		      var child = c$[i];
		      if (this._distributor.isInsertionPoint(child)) {
		        var distributedNodes = child.__shady.distributedNodes || (child.__shady.distributedNodes = []);
		        for (var j = 0; j < distributedNodes.length; j++) {
		          var distributedNode = distributedNodes[j];
		          if (this.isFinalDestination(child, distributedNode)) {
		            children.push(distributedNode);
		          }
		        }
		      } else {
		        children.push(child);
		      }
		    }
		    return children;
		  },
		  isFinalDestination: function isFinalDestination(insertionPoint, node) {
		    return this._distributor.isFinalDestination(insertionPoint, node);
		  },
		
		
		  // Ensures that the rendered node list inside `container` is `children`.
		  _updateChildNodes: function _updateChildNodes(container, children) {
		    var composed = (0, _nativeTree.childNodes)(container);
		    var splices = (0, _arraySplice.calculateSplices)(children, composed);
		    // process removals
		    for (var i = 0, d = 0, s; i < splices.length && (s = splices[i]); i++) {
		      for (var j = 0, n; j < s.removed.length && (n = s.removed[j]); j++) {
		        // check if the node is still where we expect it is before trying
		        // to remove it; this can happen if we move a node and
		        // then schedule its previous host for distribution resulting in
		        // the node being removed here.
		        if ((0, _nativeTree.parentNode)(n) === container) {
		          _nativeMethods.removeChild.call(container, n);
		        }
		        composed.splice(s.index + d, 1);
		      }
		      d -= s.addedCount;
		    }
		    // process adds
		    for (var _i2 = 0, _s, next; _i2 < splices.length && (_s = splices[_i2]); _i2++) {
		      //eslint-disable-line no-redeclare
		      next = composed[_s.index];
		      for (var _j = _s.index, _n; _j < _s.index + _s.addedCount; _j++) {
		        _n = children[_j];
		        _nativeMethods.insertBefore.call(container, _n, next);
		        // TODO(sorvell): is this splice strictly needed?
		        composed.splice(_j, 0, _n);
		      }
		    }
		  },
		  getInsertionPointTag: function getInsertionPointTag() {
		    return this._distributor.insertionPointTag;
		  }
		});
		
		(0, _patchAccessors.patchShadowRootAccessors)(ShadyRootPrototype);
	
	/***/ },
	/* 50 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		function newSplice(index, removed, addedCount) {
		  return {
		    index: index,
		    removed: removed,
		    addedCount: addedCount
		  };
		}
		
		var EDIT_LEAVE = 0;
		var EDIT_UPDATE = 1;
		var EDIT_ADD = 2;
		var EDIT_DELETE = 3;
		
		var ArraySplice = {
		
		  // Note: This function is *based* on the computation of the Levenshtein
		  // "edit" distance. The one change is that "updates" are treated as two
		  // edits - not one. With Array splices, an update is really a delete
		  // followed by an add. By retaining this, we optimize for "keeping" the
		  // maximum array items in the original array. For example:
		  //
		  //   'xxxx123' -> '123yyyy'
		  //
		  // With 1-edit updates, the shortest path would be just to update all seven
		  // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This
		  // leaves the substring '123' intact.
		  calcEditDistances: function calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd) {
		    // "Deletion" columns
		    var rowCount = oldEnd - oldStart + 1;
		    var columnCount = currentEnd - currentStart + 1;
		    var distances = new Array(rowCount);
		
		    // "Addition" rows. Initialize null column.
		    for (var i = 0; i < rowCount; i++) {
		      distances[i] = new Array(columnCount);
		      distances[i][0] = i;
		    }
		
		    // Initialize null row
		    for (var j = 0; j < columnCount; j++) {
		      distances[0][j] = j;
		    }for (var _i = 1; _i < rowCount; _i++) {
		      for (var _j = 1; _j < columnCount; _j++) {
		        if (this.equals(current[currentStart + _j - 1], old[oldStart + _i - 1])) distances[_i][_j] = distances[_i - 1][_j - 1];else {
		          var north = distances[_i - 1][_j] + 1;
		          var west = distances[_i][_j - 1] + 1;
		          distances[_i][_j] = north < west ? north : west;
		        }
		      }
		    }
		
		    return distances;
		  },
		
		
		  // This starts at the final weight, and walks "backward" by finding
		  // the minimum previous weight recursively until the origin of the weight
		  // matrix.
		  spliceOperationsFromEditDistances: function spliceOperationsFromEditDistances(distances) {
		    var i = distances.length - 1;
		    var j = distances[0].length - 1;
		    var current = distances[i][j];
		    var edits = [];
		    while (i > 0 || j > 0) {
		      if (i == 0) {
		        edits.push(EDIT_ADD);
		        j--;
		        continue;
		      }
		      if (j == 0) {
		        edits.push(EDIT_DELETE);
		        i--;
		        continue;
		      }
		      var northWest = distances[i - 1][j - 1];
		      var west = distances[i - 1][j];
		      var north = distances[i][j - 1];
		
		      var min = void 0;
		      if (west < north) min = west < northWest ? west : northWest;else min = north < northWest ? north : northWest;
		
		      if (min == northWest) {
		        if (northWest == current) {
		          edits.push(EDIT_LEAVE);
		        } else {
		          edits.push(EDIT_UPDATE);
		          current = northWest;
		        }
		        i--;
		        j--;
		      } else if (min == west) {
		        edits.push(EDIT_DELETE);
		        i--;
		        current = west;
		      } else {
		        edits.push(EDIT_ADD);
		        j--;
		        current = north;
		      }
		    }
		
		    edits.reverse();
		    return edits;
		  },
		
		
		  /**
		   * Splice Projection functions:
		   *
		   * A splice map is a representation of how a previous array of items
		   * was transformed into a new array of items. Conceptually it is a list of
		   * tuples of
		   *
		   *   <index, removed, addedCount>
		   *
		   * which are kept in ascending index order of. The tuple represents that at
		   * the |index|, |removed| sequence of items were removed, and counting forward
		   * from |index|, |addedCount| items were added.
		   */
		
		  /**
		   * Lacking individual splice mutation information, the minimal set of
		   * splices can be synthesized given the previous state and final state of an
		   * array. The basic approach is to calculate the edit distance matrix and
		   * choose the shortest path through it.
		   *
		   * Complexity: O(l * p)
		   *   l: The length of the current array
		   *   p: The length of the old array
		   */
		  calcSplices: function calcSplices(current, currentStart, currentEnd, old, oldStart, oldEnd) {
		    var prefixCount = 0;
		    var suffixCount = 0;
		    var splice = void 0;
		
		    var minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);
		    if (currentStart == 0 && oldStart == 0) prefixCount = this.sharedPrefix(current, old, minLength);
		
		    if (currentEnd == current.length && oldEnd == old.length) suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);
		
		    currentStart += prefixCount;
		    oldStart += prefixCount;
		    currentEnd -= suffixCount;
		    oldEnd -= suffixCount;
		
		    if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0) return [];
		
		    if (currentStart == currentEnd) {
		      splice = newSplice(currentStart, [], 0);
		      while (oldStart < oldEnd) {
		        splice.removed.push(old[oldStart++]);
		      }return [splice];
		    } else if (oldStart == oldEnd) return [newSplice(currentStart, [], currentEnd - currentStart)];
		
		    var ops = this.spliceOperationsFromEditDistances(this.calcEditDistances(current, currentStart, currentEnd, old, oldStart, oldEnd));
		
		    splice = undefined;
		    var splices = [];
		    var index = currentStart;
		    var oldIndex = oldStart;
		    for (var i = 0; i < ops.length; i++) {
		      switch (ops[i]) {
		        case EDIT_LEAVE:
		          if (splice) {
		            splices.push(splice);
		            splice = undefined;
		          }
		
		          index++;
		          oldIndex++;
		          break;
		        case EDIT_UPDATE:
		          if (!splice) splice = newSplice(index, [], 0);
		
		          splice.addedCount++;
		          index++;
		
		          splice.removed.push(old[oldIndex]);
		          oldIndex++;
		          break;
		        case EDIT_ADD:
		          if (!splice) splice = newSplice(index, [], 0);
		
		          splice.addedCount++;
		          index++;
		          break;
		        case EDIT_DELETE:
		          if (!splice) splice = newSplice(index, [], 0);
		
		          splice.removed.push(old[oldIndex]);
		          oldIndex++;
		          break;
		      }
		    }
		
		    if (splice) {
		      splices.push(splice);
		    }
		    return splices;
		  },
		  sharedPrefix: function sharedPrefix(current, old, searchLength) {
		    for (var i = 0; i < searchLength; i++) {
		      if (!this.equals(current[i], old[i])) return i;
		    }return searchLength;
		  },
		  sharedSuffix: function sharedSuffix(current, old, searchLength) {
		    var index1 = current.length;
		    var index2 = old.length;
		    var count = 0;
		    while (count < searchLength && this.equals(current[--index1], old[--index2])) {
		      count++;
		    }return count;
		  },
		  calculateSplices: function calculateSplices(current, previous) {
		    return this.calcSplices(current, 0, current.length, previous, 0, previous.length);
		  },
		  equals: function equals(currentValue, previousValue) {
		    return currentValue === previousValue;
		  }
		};
		
		var calculateSplices = exports.calculateSplices = function calculateSplices(current, previous) {
		  return ArraySplice.calculateSplices(current, previous);
		};
	
	/***/ },
	/* 51 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _nativeMethods = __webpack_require__(40);
		
		var _nativeTree = __webpack_require__(41);
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		// NOTE: normalize event contruction where necessary (IE11)
		var NormalizedEvent = typeof Event === 'function' ? Event : function (inType, params) {
		  params = params || {};
		  var e = document.createEvent('Event');
		  e.initEvent(inType, Boolean(params.bubbles), Boolean(params.cancelable));
		  return e;
		};
		
		var _class = function () {
		  function _class(root) {
		    _classCallCheck(this, _class);
		
		    this.root = root;
		    this.insertionPointTag = 'slot';
		  }
		
		  _createClass(_class, [{
		    key: 'getInsertionPoints',
		    value: function getInsertionPoints() {
		      return this.root.querySelectorAll(this.insertionPointTag);
		    }
		  }, {
		    key: 'hasInsertionPoint',
		    value: function hasInsertionPoint() {
		      return Boolean(this.root._insertionPoints && this.root._insertionPoints.length);
		    }
		  }, {
		    key: 'isInsertionPoint',
		    value: function isInsertionPoint(node) {
		      return node.localName && node.localName == this.insertionPointTag;
		    }
		  }, {
		    key: 'distribute',
		    value: function distribute() {
		      if (this.hasInsertionPoint()) {
		        return this.distributePool(this.root, this.collectPool());
		      }
		      return [];
		    }
		
		    // Gather the pool of nodes that should be distributed. We will combine
		    // these with the "content root" to arrive at the composed tree.
		
		  }, {
		    key: 'collectPool',
		    value: function collectPool() {
		      var host = this.root.host;
		      var pool = [],
		          i = 0;
		      for (var n = host.firstChild; n; n = n.nextSibling) {
		        pool[i++] = n;
		      }
		      return pool;
		    }
		
		    // perform "logical" distribution; note, no actual dom is moved here,
		    // instead elements are distributed into storage
		    // array where applicable.
		
		  }, {
		    key: 'distributePool',
		    value: function distributePool(node, pool) {
		      var dirtyRoots = [];
		      var p$ = this.root._insertionPoints;
		      for (var i = 0, l = p$.length, p; i < l && (p = p$[i]); i++) {
		        this.distributeInsertionPoint(p, pool);
		        // provoke redistribution on insertion point parents
		        // must do this on all candidate hosts since distribution in this
		        // scope invalidates their distribution.
		        // only get logical parent.
		        var parent = p.parentNode;
		        if (parent && parent.shadyRoot && this.hasInsertionPoint(parent.shadyRoot)) {
		          dirtyRoots.push(parent.shadyRoot);
		        }
		      }
		      for (var _i = 0; _i < pool.length; _i++) {
		        var _p = pool[_i];
		        if (_p) {
		          _p.__shady = _p.__shady || {};
		          _p.__shady.assignedSlot = undefined;
		          // remove undistributed elements from physical dom.
		          var _parent = (0, _nativeTree.parentNode)(_p);
		          if (_parent) {
		            _nativeMethods.removeChild.call(_parent, _p);
		          }
		        }
		      }
		      return dirtyRoots;
		    }
		  }, {
		    key: 'distributeInsertionPoint',
		    value: function distributeInsertionPoint(insertionPoint, pool) {
		      var prevAssignedNodes = insertionPoint.__shady.assignedNodes;
		      if (prevAssignedNodes) {
		        this.clearAssignedSlots(insertionPoint, true);
		      }
		      insertionPoint.__shady.assignedNodes = [];
		      var needsSlotChange = false;
		      // distribute nodes from the pool that this selector matches
		      var anyDistributed = false;
		      for (var i = 0, l = pool.length, node; i < l; i++) {
		        node = pool[i];
		        // skip nodes that were already used
		        if (!node) {
		          continue;
		        }
		        // distribute this node if it matches
		        if (this.matchesInsertionPoint(node, insertionPoint)) {
		          if (node.__shady._prevAssignedSlot != insertionPoint) {
		            needsSlotChange = true;
		          }
		          this.distributeNodeInto(node, insertionPoint);
		          // remove this node from the pool
		          pool[i] = undefined;
		          // since at least one node matched, we won't need fallback content
		          anyDistributed = true;
		        }
		      }
		      // Fallback content if nothing was distributed here
		      if (!anyDistributed) {
		        var children = insertionPoint.childNodes;
		        for (var j = 0, _node; j < children.length; j++) {
		          _node = children[j];
		          if (_node.__shady._prevAssignedSlot != insertionPoint) {
		            needsSlotChange = true;
		          }
		          this.distributeNodeInto(_node, insertionPoint);
		        }
		      }
		      // we're already dirty if a node was newly added to the slot
		      // and we're also dirty if the assigned count decreased.
		      if (prevAssignedNodes) {
		        // TODO(sorvell): the tracking of previously assigned slots
		        // could instead by done with a Set and then we could
		        // avoid needing to iterate here to clear the info.
		        for (var _i2 = 0; _i2 < prevAssignedNodes.length; _i2++) {
		          prevAssignedNodes[_i2].__shady._prevAssignedSlot = null;
		        }
		        if (insertionPoint.__shady.assignedNodes.length < prevAssignedNodes.length) {
		          needsSlotChange = true;
		        }
		      }
		      this.setDistributedNodesOnInsertionPoint(insertionPoint);
		      if (needsSlotChange) {
		        this._fireSlotChange(insertionPoint);
		      }
		    }
		  }, {
		    key: 'clearAssignedSlots',
		    value: function clearAssignedSlots(slot, savePrevious) {
		      var n$ = slot.__shady.assignedNodes;
		      if (n$) {
		        for (var i = 0; i < n$.length; i++) {
		          var n = n$[i];
		          if (savePrevious) {
		            n.__shady._prevAssignedSlot = n.__shady.assignedSlot;
		          }
		          // only clear if it was previously set to this slot;
		          // this helps ensure that if the node has otherwise been distributed
		          // ignore it.
		          if (n.__shady.assignedSlot === slot) {
		            n.__shady.assignedSlot = null;
		          }
		        }
		      }
		    }
		  }, {
		    key: 'matchesInsertionPoint',
		    value: function matchesInsertionPoint(node, insertionPoint) {
		      var slotName = insertionPoint.getAttribute('name');
		      slotName = slotName ? slotName.trim() : '';
		      var slot = node.getAttribute && node.getAttribute('slot');
		      slot = slot ? slot.trim() : '';
		      return slot == slotName;
		    }
		  }, {
		    key: 'distributeNodeInto',
		    value: function distributeNodeInto(child, insertionPoint) {
		      insertionPoint.__shady.assignedNodes.push(child);
		      child.__shady.assignedSlot = insertionPoint;
		    }
		  }, {
		    key: 'setDistributedNodesOnInsertionPoint',
		    value: function setDistributedNodesOnInsertionPoint(insertionPoint) {
		      var n$ = insertionPoint.__shady.assignedNodes;
		      insertionPoint.__shady.distributedNodes = [];
		      for (var i = 0, n; i < n$.length && (n = n$[i]); i++) {
		        if (this.isInsertionPoint(n)) {
		          var d$ = n.__shady.distributedNodes;
		          if (d$) {
		            for (var j = 0; j < d$.length; j++) {
		              insertionPoint.__shady.distributedNodes.push(d$[j]);
		            }
		          }
		        } else {
		          insertionPoint.__shady.distributedNodes.push(n$[i]);
		        }
		      }
		    }
		  }, {
		    key: '_fireSlotChange',
		    value: function _fireSlotChange(insertionPoint) {
		      // NOTE: cannot bubble correctly here so not setting bubbles: true
		      // Safari tech preview does not bubble but chrome does
		      // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)
		      insertionPoint.dispatchEvent(new NormalizedEvent('slotchange'));
		      if (insertionPoint.__shady.assignedSlot) {
		        this._fireSlotChange(insertionPoint.__shady.assignedSlot);
		      }
		    }
		  }, {
		    key: 'isFinalDestination',
		    value: function isFinalDestination(insertionPoint) {
		      return !insertionPoint.__shady.assignedSlot;
		    }
		  }]);
	
		  return _class;
		}();
	
		exports.default = _class;
	
	/***/ },
	/* 52 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		'use strict';
		
		/*
		Small module to load ShadyCSS and CustomStyle together
		*/
		
		__webpack_require__(53);
		
		__webpack_require__(65);
	
	/***/ },
	/* 53 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		// TODO(dfreedm): consider spliting into separate global
		
		
		var _cssParse = __webpack_require__(54);
		
		var _styleSettings = __webpack_require__(55);
		
		var _styleTransformer = __webpack_require__(56);
		
		var _styleTransformer2 = _interopRequireDefault(_styleTransformer);
		
		var _styleUtil = __webpack_require__(57);
		
		var StyleUtil = _interopRequireWildcard(_styleUtil);
		
		var _styleProperties = __webpack_require__(58);
		
		var _styleProperties2 = _interopRequireDefault(_styleProperties);
		
		var _templateMap = __webpack_require__(60);
		
		var _templateMap2 = _interopRequireDefault(_templateMap);
		
		var _stylePlaceholder = __webpack_require__(61);
		
		var _stylePlaceholder2 = _interopRequireDefault(_stylePlaceholder);
		
		var _styleInfo = __webpack_require__(59);
		
		var _styleInfo2 = _interopRequireDefault(_styleInfo);
		
		var _styleCache = __webpack_require__(62);
		
		var _styleCache2 = _interopRequireDefault(_styleCache);
		
		var _applyShim = __webpack_require__(63);
		
		var _applyShim2 = _interopRequireDefault(_applyShim);
		
		var _documentWatcher = __webpack_require__(64);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var styleCache = new _styleCache2.default();
		
		var ShadyCSS = function () {
		  function ShadyCSS() {
		    _classCallCheck(this, ShadyCSS);
		
		    this._scopeCounter = {};
		    this._documentOwner = document.documentElement;
		    this._documentOwnerStyleInfo = _styleInfo2.default.set(document.documentElement, new _styleInfo2.default({ rules: [] }));
		    this._elementsHaveApplied = false;
		  }
		
		  _createClass(ShadyCSS, [{
		    key: 'flush',
		    value: function flush() {
		      (0, _documentWatcher.flush)();
		    }
		  }, {
		    key: '_generateScopeSelector',
		    value: function _generateScopeSelector(name) {
		      var id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;
		      return name + '-' + id;
		    }
		  }, {
		    key: 'getStyleAst',
		    value: function getStyleAst(style) {
		      return StyleUtil.rulesForStyle(style);
		    }
		  }, {
		    key: 'styleAstToString',
		    value: function styleAstToString(ast) {
		      return StyleUtil.toCssText(ast);
		    }
		  }, {
		    key: '_gatherStyles',
		    value: function _gatherStyles(template) {
		      var styles = template.content.querySelectorAll('style');
		      var cssText = [];
		      for (var i = 0; i < styles.length; i++) {
		        var s = styles[i];
		        cssText.push(s.textContent);
		        s.parentNode.removeChild(s);
		      }
		      return cssText.join('').trim();
		    }
		  }, {
		    key: '_getCssBuild',
		    value: function _getCssBuild(template) {
		      var style = template.content.querySelector('style');
		      if (!style) {
		        return '';
		      }
		      return style.getAttribute('css-build') || '';
		    }
		  }, {
		    key: 'prepareTemplate',
		    value: function prepareTemplate(template, elementName, typeExtension) {
		      if (template._prepared) {
		        return;
		      }
		      template._prepared = true;
		      template.name = elementName;
		      template.extends = typeExtension;
		      _templateMap2.default[elementName] = template;
		      var cssBuild = this._getCssBuild(template);
		      var cssText = this._gatherStyles(template);
		      var info = {
		        is: elementName,
		        extends: typeExtension,
		        __cssBuild: cssBuild
		      };
		      if (!this.nativeShadow) {
		        _styleTransformer2.default.dom(template.content, elementName);
		      }
		      // check if the styling has mixin definitions or uses
		      var hasMixins = _applyShim2.default.detectMixin(cssText);
		      var ast = (0, _cssParse.parse)(cssText);
		      // only run the applyshim transforms if there is a mixin involved
		      if (hasMixins && this.nativeCss && !this.nativeCssApply) {
		        _applyShim2.default.transformRules(ast, elementName);
		      }
		      template._styleAst = ast;
		
		      var ownPropertyNames = [];
		      if (!this.nativeCss) {
		        ownPropertyNames = _styleProperties2.default.decorateStyles(template._styleAst, info);
		      }
		      if (!ownPropertyNames.length || this.nativeCss) {
		        var root = this.nativeShadow ? template.content : null;
		        var placeholder = _stylePlaceholder2.default[elementName];
		        var style = this._generateStaticStyle(info, template._styleAst, root, placeholder);
		        template._style = style;
		      }
		      template._ownPropertyNames = ownPropertyNames;
		    }
		  }, {
		    key: '_generateStaticStyle',
		    value: function _generateStaticStyle(info, rules, shadowroot, placeholder) {
		      var cssText = _styleTransformer2.default.elementStyles(info, rules);
		      if (cssText.length) {
		        return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);
		      }
		    }
		  }, {
		    key: '_prepareHost',
		    value: function _prepareHost(host) {
		      var is = host.getAttribute('is') || host.localName;
		      var typeExtension = void 0;
		      if (is !== host.localName) {
		        typeExtension = host.localName;
		      }
		      var placeholder = _stylePlaceholder2.default[is];
		      var template = _templateMap2.default[is];
		      var ast = void 0;
		      var ownStylePropertyNames = void 0;
		      var cssBuild = void 0;
		      if (template) {
		        ast = template._styleAst;
		        ownStylePropertyNames = template._ownPropertyNames;
		        cssBuild = template._cssBuild;
		      }
		      return _styleInfo2.default.set(host, new _styleInfo2.default(ast, placeholder, ownStylePropertyNames, is, typeExtension, cssBuild));
		    }
		  }, {
		    key: 'applyStyle',
		    value: function applyStyle(host, overrideProps) {
		      var is = host.getAttribute('is') || host.localName;
		      var styleInfo = _styleInfo2.default.get(host);
		      var hasApplied = Boolean(styleInfo);
		      if (!styleInfo) {
		        styleInfo = this._prepareHost(host);
		      }
		      // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called
		      if (!this._isRootOwner(host)) {
		        this._elementsHaveApplied = true;
		      }
		      if (window.CustomStyle) {
		        var CS = window.CustomStyle;
		        if (CS._documentDirty) {
		          CS.findStyles();
		          if (!this.nativeCss) {
		            this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);
		          } else if (!this.nativeCssApply) {
		            CS._revalidateApplyShim();
		          }
		          CS.applyStyles();
		          // if no elements have booted yet, we can just update the document and be done
		          if (!this._elementsHaveApplied) {
		            return;
		          }
		          // if no native css custom properties, we must recalculate the whole tree
		          if (!this.nativeCss) {
		            this.updateStyles();
		            /*
		            When updateStyles() runs, this element may not have a shadowroot yet.
		            If not, we need to make sure that this element runs `applyStyle` on itself at least once to generate a style
		            */
		            if (hasApplied) {
		              return;
		            }
		          }
		        }
		      }
		      if (overrideProps) {
		        styleInfo.overrideStyleProperties = styleInfo.overrideStyleProperties || {};
		        Object.assign(styleInfo.overrideStyleProperties, overrideProps);
		      }
		      if (this.nativeCss) {
		        if (styleInfo.overrideStyleProperties) {
		          this._updateNativeProperties(host, styleInfo.overrideStyleProperties);
		        }
		        var template = _templateMap2.default[is];
		        // bail early if there is no shadowroot for this element
		        if (!template && !this._isRootOwner(host)) {
		          return;
		        }
		        if (template && template._applyShimInvalid && template._style) {
		          // update template
		          if (!template._validating) {
		            _applyShim2.default.transformRules(template._styleAst, is);
		            template._style.textContent = _styleTransformer2.default.elementStyles(host, styleInfo.styleRules);
		            _styleInfo2.default.startValidating(is);
		          }
		          // update instance if native shadowdom
		          if (this.nativeShadow) {
		            var root = host.shadowRoot;
		            if (root) {
		              var style = root.querySelector('style');
		              style.textContent = _styleTransformer2.default.elementStyles(host, styleInfo.styleRules);
		            }
		          }
		          styleInfo.styleRules = template._styleAst;
		        }
		      } else {
		        this._updateProperties(host, styleInfo);
		        if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {
		          this._applyStyleProperties(host, styleInfo);
		        }
		      }
		      if (hasApplied) {
		        var _root = this._isRootOwner(host) ? host : host.shadowRoot;
		        // note: some elements may not have a root!
		        if (_root) {
		          this._applyToDescendants(_root);
		        }
		      }
		    }
		  }, {
		    key: '_applyToDescendants',
		    value: function _applyToDescendants(root) {
		      var c$ = root.children;
		      for (var i = 0, c; i < c$.length; i++) {
		        c = c$[i];
		        if (c.shadowRoot) {
		          this.applyStyle(c);
		        }
		        this._applyToDescendants(c);
		      }
		    }
		  }, {
		    key: '_styleOwnerForNode',
		    value: function _styleOwnerForNode(node) {
		      var root = node.getRootNode();
		      var host = root.host;
		      if (host) {
		        if (_styleInfo2.default.get(host)) {
		          return host;
		        } else {
		          return this._styleOwnerForNode(host);
		        }
		      }
		      return this._documentOwner;
		    }
		  }, {
		    key: '_isRootOwner',
		    value: function _isRootOwner(node) {
		      return node === this._documentOwner;
		    }
		  }, {
		    key: '_applyStyleProperties',
		    value: function _applyStyleProperties(host, styleInfo) {
		      var is = host.getAttribute('is') || host.localName;
		      var cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);
		      var cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;
		      var cachedStyle = cacheEntry ? cacheEntry.styleElement : null;
		      var oldScopeSelector = styleInfo.scopeSelector;
		      // only generate new scope if cached style is not found
		      styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);
		      var style = _styleProperties2.default.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);
		      if (!this.nativeShadow) {
		        _styleProperties2.default.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);
		      }
		      if (!cacheEntry) {
		        styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);
		      }
		      return style;
		    }
		  }, {
		    key: '_updateProperties',
		    value: function _updateProperties(host, styleInfo) {
		      var owner = this._styleOwnerForNode(host);
		      var ownerStyleInfo = _styleInfo2.default.get(owner);
		      var ownerProperties = ownerStyleInfo.styleProperties;
		      var props = Object.create(ownerProperties || null);
		      var hostAndRootProps = _styleProperties2.default.hostAndRootPropertiesForScope(host, styleInfo.styleRules);
		      var propertyData = _styleProperties2.default.propertyDataFromStyles(ownerStyleInfo.styleRules, host);
		      var propertiesMatchingHost = propertyData.properties;
		      Object.assign(props, hostAndRootProps.hostProps, propertiesMatchingHost, hostAndRootProps.rootProps);
		      this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);
		      _styleProperties2.default.reify(props);
		      styleInfo.styleProperties = props;
		    }
		  }, {
		    key: '_mixinOverrideStyles',
		    value: function _mixinOverrideStyles(props, overrides) {
		      for (var p in overrides) {
		        var v = overrides[p];
		        // skip override props if they are not truthy or 0
		        // in order to fall back to inherited values
		        if (v || v === 0) {
		          props[p] = v;
		        }
		      }
		    }
		  }, {
		    key: '_updateNativeProperties',
		    value: function _updateNativeProperties(element, properties) {
		      // remove previous properties
		      for (var p in properties) {
		        // NOTE: for bc with shim, don't apply null values.
		        if (p === null) {
		          element.style.removeProperty(p);
		        } else {
		          element.style.setProperty(p, properties[p]);
		        }
		      }
		    }
		  }, {
		    key: 'updateStyles',
		    value: function updateStyles(properties) {
		      this.applyStyle(this._documentOwner, properties);
		    }
		    /* Custom Style operations */
		
		  }, {
		    key: '_transformCustomStyleForDocument',
		    value: function _transformCustomStyleForDocument(style) {
		      var _this = this;
		
		      var ast = StyleUtil.rulesForStyle(style);
		      StyleUtil.forEachRule(ast, function (rule) {
		        if (_styleSettings.nativeShadow) {
		          _styleTransformer2.default.normalizeRootSelector(rule);
		        } else {
		          _styleTransformer2.default.documentRule(rule);
		        }
		        if (_this.nativeCss && !_this.nativeCssApply) {
		          _applyShim2.default.transformRule(rule);
		        }
		      });
		      if (this.nativeCss) {
		        style.textContent = StyleUtil.toCssText(ast);
		      } else {
		        this._documentOwnerStyleInfo.styleRules.rules.push(ast);
		      }
		    }
		  }, {
		    key: '_revalidateApplyShim',
		    value: function _revalidateApplyShim(style) {
		      if (this.nativeCss && !this.nativeCssApply) {
		        var ast = StyleUtil.rulesForStyle(style);
		        _applyShim2.default.transformRules(ast);
		        style.textContent = StyleUtil.toCssText(ast);
		      }
		    }
		  }, {
		    key: '_applyCustomStyleToDocument',
		    value: function _applyCustomStyleToDocument(style) {
		      if (!this.nativeCss) {
		        _styleProperties2.default.applyCustomStyle(style, this._documentOwnerStyleInfo.styleProperties);
		      }
		    }
		  }, {
		    key: 'getComputedStyleValue',
		    value: function getComputedStyleValue(element, property) {
		      var value = void 0;
		      if (!this.nativeCss) {
		        // element is either a style host, or an ancestor of a style host
		        var styleInfo = _styleInfo2.default.get(element) || _styleInfo2.default.get(this._styleOwnerForNode(element));
		        value = styleInfo.styleProperties[property];
		      }
		      // fall back to the property value from the computed styling
		      value = value || window.getComputedStyle(element).getPropertyValue(property);
		      // trim whitespace that can come after the `:` in css
		      // example: padding: 2px -> " 2px"
		      return value.trim();
		    }
		    // given an element and a classString, replaces
		    // the element's class with the provided classString and adds
		    // any necessary ShadyCSS static and property based scoping selectors
		
		  }, {
		    key: 'setElementClass',
		    value: function setElementClass(element, classString) {
		      var root = element.getRootNode();
		      var classes = classString ? classString.split(/\s/) : [];
		      var scopeName = root.host && root.host.localName;
		      // If no scope, try to discover scope name from existing class.
		      // This can occur if, for example, a template stamped element that
		      // has been scoped is manipulated when not in a root.
		      if (!scopeName) {
		        var classAttr = element.getAttribute('class');
		        if (classAttr) {
		          var k$ = classAttr.split(/\s/);
		          for (var i = 0; i < k$.length; i++) {
		            if (k$[i] === _styleTransformer2.default.SCOPE_NAME) {
		              scopeName = k$[i + 1];
		              break;
		            }
		          }
		        }
		      }
		      if (scopeName) {
		        classes.push(_styleTransformer2.default.SCOPE_NAME, scopeName);
		      }
		      if (!this.nativeCss) {
		        var styleInfo = _styleInfo2.default.get(element);
		        if (styleInfo && styleInfo.scopeSelector) {
		          classes.push(_styleProperties2.default.XSCOPE_NAME, styleInfo.scopeSelector);
		        }
		      }
		      StyleUtil.setElementClassRaw(element, classes.join(' '));
		    }
		  }, {
		    key: '_styleInfoForNode',
		    value: function _styleInfoForNode(node) {
		      return _styleInfo2.default.get(node);
		    }
		  }, {
		    key: 'nativeShadow',
		    get: function get() {
		      return _styleSettings.nativeShadow;
		    }
		  }, {
		    key: 'nativeCss',
		    get: function get() {
		      return _styleSettings.nativeCssVariables;
		    }
		  }, {
		    key: 'nativeCssApply',
		    get: function get() {
		      return _styleSettings.nativeCssApply;
		    }
		  }]);
		
		  return ShadyCSS;
		}();
		
		window['ShadyCSS'] = new ShadyCSS();
	
	/***/ },
	/* 54 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		/*
		Extremely simple css parser. Intended to be not more than what we need
		and definitely not necessarily correct =).
		*/
		
		'use strict';
		
		// given a string of css, return a simple rule tree
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.parse = parse;
		exports.stringify = stringify;
		exports.removeCustomPropAssignment = removeCustomPropAssignment;
		function parse(text) {
		  text = clean(text);
		  return parseCss(lex(text), text);
		}
		
		// remove stuff we don't care about that may hinder parsing
		function clean(cssText) {
		  return cssText.replace(RX.comments, '').replace(RX.port, '');
		}
		
		// super simple {...} lexer that returns a node tree
		function lex(text) {
		  var root = {
		    start: 0,
		    end: text.length
		  };
		  var n = root;
		  for (var i = 0, l = text.length; i < l; i++) {
		    if (text[i] === OPEN_BRACE) {
		      if (!n.rules) {
		        n.rules = [];
		      }
		      var p = n;
		      var previous = p.rules[p.rules.length - 1];
		      n = {
		        start: i + 1,
		        parent: p,
		        previous: previous
		      };
		      p.rules.push(n);
		    } else if (text[i] === CLOSE_BRACE) {
		      n.end = i + 1;
		      n = n.parent || root;
		    }
		  }
		  return root;
		}
		
		// add selectors/cssText to node tree
		function parseCss(node, text) {
		  var t = text.substring(node.start, node.end - 1);
		  node.parsedCssText = node.cssText = t.trim();
		  if (node.parent) {
		    var ss = node.previous ? node.previous.end : node.parent.start;
		    t = text.substring(ss, node.start - 1);
		    t = _expandUnicodeEscapes(t);
		    t = t.replace(RX.multipleSpaces, ' ');
		    // TODO(sorvell): ad hoc; make selector include only after last ;
		    // helps with mixin syntax
		    t = t.substring(t.lastIndexOf(';') + 1);
		    var s = node.parsedSelector = node.selector = t.trim();
		    node.atRule = s.indexOf(AT_START) === 0;
		    // note, support a subset of rule types...
		    if (node.atRule) {
		      if (s.indexOf(MEDIA_START) === 0) {
		        node.type = types.MEDIA_RULE;
		      } else if (s.match(RX.keyframesRule)) {
		        node.type = types.KEYFRAMES_RULE;
		        node.keyframesName = node.selector.split(RX.multipleSpaces).pop();
		      }
		    } else {
		      if (s.indexOf(VAR_START) === 0) {
		        node.type = types.MIXIN_RULE;
		      } else {
		        node.type = types.STYLE_RULE;
		      }
		    }
		  }
		  var r$ = node.rules;
		  if (r$) {
		    for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
		      parseCss(r, text);
		    }
		  }
		  return node;
		}
		
		// conversion of sort unicode escapes with spaces like `\33 ` (and longer) into
		// expanded form that doesn't require trailing space `\000033`
		function _expandUnicodeEscapes(s) {
		  return s.replace(/\\([0-9a-f]{1,6})\s/gi, function () {
		    var code = arguments[1],
		        repeat = 6 - code.length;
		    while (repeat--) {
		      code = '0' + code;
		    }
		    return '\\' + code;
		  });
		}
		
		// stringify parsed css.
		function stringify(node, preserveProperties, text) {
		  text = text || '';
		  // calc rule cssText
		  var cssText = '';
		  if (node.cssText || node.rules) {
		    var r$ = node.rules;
		    if (r$ && !_hasMixinRules(r$)) {
		      for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
		        cssText = stringify(r, preserveProperties, cssText);
		      }
		    } else {
		      cssText = preserveProperties ? node.cssText : removeCustomProps(node.cssText);
		      cssText = cssText.trim();
		      if (cssText) {
		        cssText = '  ' + cssText + '\n';
		      }
		    }
		  }
		  // emit rule if there is cssText
		  if (cssText) {
		    if (node.selector) {
		      text += node.selector + ' ' + OPEN_BRACE + '\n';
		    }
		    text += cssText;
		    if (node.selector) {
		      text += CLOSE_BRACE + '\n\n';
		    }
		  }
		  return text;
		}
		
		function _hasMixinRules(rules) {
		  return rules[0].selector.indexOf(VAR_START) === 0;
		}
		
		function removeCustomProps(cssText) {
		  cssText = removeCustomPropAssignment(cssText);
		  return removeCustomPropApply(cssText);
		}
		
		function removeCustomPropAssignment(cssText) {
		  return cssText.replace(RX.customProp, '').replace(RX.mixinProp, '');
		}
		
		function removeCustomPropApply(cssText) {
		  return cssText.replace(RX.mixinApply, '').replace(RX.varApply, '');
		}
		
		var types = exports.types = {
		  STYLE_RULE: 1,
		  KEYFRAMES_RULE: 7,
		  MEDIA_RULE: 4,
		  MIXIN_RULE: 1000
		};
		
		var OPEN_BRACE = '{';
		var CLOSE_BRACE = '}';
		
		// helper regexp's
		var RX = {
		  comments: /\/\*[^*]*\*+([^/*][^*]*\*+)*\//gim,
		  port: /@import[^;]*;/gim,
		  customProp: /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\n]|$)/gim,
		  mixinProp: /(?:^[^;\-\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\n]|$)?/gim,
		  mixinApply: /@apply\s*\(?[^);]*\)?\s*(?:[;\n]|$)?/gim,
		  varApply: /[^;:]*?:[^;]*?var\([^;]*\)(?:[;\n]|$)?/gim,
		  keyframesRule: /^@[^\s]*keyframes/,
		  multipleSpaces: /\s+/g
		};
		
		var VAR_START = '--';
		var MEDIA_START = '@media';
		var AT_START = '@';
	
	/***/ },
	/* 55 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		var nativeShadow = exports.nativeShadow = !(window.ShadyDOM && window.ShadyDOM.inUse);
		// chrome 49 has semi-working css vars, check if box-shadow works
		// safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782
		var nativeCssVariables = exports.nativeCssVariables = !navigator.userAgent.match('AppleWebKit/601') && window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)');
		
		// experimental support for native @apply
		function detectNativeApply() {
		  var style = document.createElement('style');
		  style.textContent = '.foo { @apply --foo }';
		  document.head.appendChild(style);
		  var nativeCssApply = style.sheet.cssRules[0].cssText.indexOf('apply') >= 0;
		  document.head.removeChild(style);
		  return nativeCssApply;
		}
		
		var nativeCssApply = exports.nativeCssApply = false && detectNativeApply();
		
		function parseSettings(settings) {
		  if (settings) {
		    exports.nativeCssVariables = nativeCssVariables = nativeCssVariables && !settings.shimcssproperties;
		    exports.nativeShadow = nativeShadow = nativeShadow && !settings.shimshadow;
		  }
		}
		
		if (window.ShadyCSS) {
		  parseSettings(window.ShadyCSS);
		} else if (window.WebComponents) {
		  parseSettings(window.WebComponents.flags);
		}
	
	/***/ },
	/* 56 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _styleUtil = __webpack_require__(57);
		
		var StyleUtil = _interopRequireWildcard(_styleUtil);
		
		var _styleSettings = __webpack_require__(55);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/* Transforms ShadowDOM styling into ShadyDOM styling
		
		* scoping:
		
		  * elements in scope get scoping selector class="x-foo-scope"
		  * selectors re-written as follows:
		
		    div button -> div.x-foo-scope button.x-foo-scope
		
		* :host -> scopeName
		
		* :host(...) -> scopeName...
		
		* ::slotted(...) -> scopeName > ...
		
		* ...:dir(ltr|rtl) -> [dir="ltr|rtl"] ..., ...[dir="ltr|rtl"]
		
		* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir="rtl"] scopeName, scopeName[dir="rtl"]
		
		*/
		var SCOPE_NAME = 'style-scope';
		
		var StyleTransformer = function () {
		  function StyleTransformer() {
		    _classCallCheck(this, StyleTransformer);
		  }
		
		  _createClass(StyleTransformer, [{
		    key: 'dom',
		
		    // Given a node and scope name, add a scoping class to each node
		    // in the tree. This facilitates transforming css into scoped rules.
		    value: function dom(node, scope, shouldRemoveScope) {
		      // one time optimization to skip scoping...
		      if (node.__styleScoped) {
		        node.__styleScoped = null;
		      } else {
		        this._transformDom(node, scope || '', shouldRemoveScope);
		      }
		    }
		  }, {
		    key: '_transformDom',
		    value: function _transformDom(node, selector, shouldRemoveScope) {
		      if (node.nodeType === Node.ELEMENT_NODE) {
		        this.element(node, selector, shouldRemoveScope);
		      }
		      var c$ = node.localName === 'template' ? (node.content || node._content).childNodes : node.children || node.childNodes;
		      if (c$) {
		        for (var i = 0; i < c$.length; i++) {
		          this._transformDom(c$[i], selector, shouldRemoveScope);
		        }
		      }
		    }
		  }, {
		    key: 'element',
		    value: function element(_element, scope, shouldRemoveScope) {
		      // note: if using classes, we add both the general 'style-scope' class
		      // as well as the specific scope. This enables easy filtering of all
		      // `style-scope` elements
		      if (scope) {
		        // note: svg on IE does not have classList so fallback to class
		        if (_element.classList) {
		          if (shouldRemoveScope) {
		            _element.classList.remove(SCOPE_NAME);
		            _element.classList.remove(scope);
		          } else {
		            _element.classList.add(SCOPE_NAME);
		            _element.classList.add(scope);
		          }
		        } else if (_element.getAttribute) {
		          var c = _element.getAttribute(CLASS);
		          if (shouldRemoveScope) {
		            if (c) {
		              var newValue = c.replace(SCOPE_NAME, '').replace(scope, '');
		              StyleUtil.setElementClassRaw(_element, newValue);
		            }
		          } else {
		            var _newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;
		            StyleUtil.setElementClassRaw(_element, _newValue);
		          }
		        }
		      }
		    }
		  }, {
		    key: 'elementStyles',
		    value: function elementStyles(element, styleRules, callback) {
		      var cssBuildType = element.__cssBuild;
		      // no need to shim selectors if settings.useNativeShadow, also
		      // a shady css build will already have transformed selectors
		      // NOTE: This method may be called as part of static or property shimming.
		      // When there is a targeted build it will not be called for static shimming,
		      // but when the property shim is used it is called and should opt out of
		      // static shimming work when a proper build exists.
		      var cssText = _styleSettings.nativeShadow || cssBuildType === 'shady' ? StyleUtil.toCssText(styleRules, callback) : this.css(styleRules, element.is, element.extends, callback) + '\n\n';
		      return cssText.trim();
		    }
		
		    // Given a string of cssText and a scoping string (scope), returns
		    // a string of scoped css where each selector is transformed to include
		    // a class created from the scope. ShadowDOM selectors are also transformed
		    // (e.g. :host) to use the scoping selector.
		
		  }, {
		    key: 'css',
		    value: function css(rules, scope, ext, callback) {
		      var hostScope = this._calcHostScope(scope, ext);
		      scope = this._calcElementScope(scope);
		      var self = this;
		      return StyleUtil.toCssText(rules, function (rule) {
		        if (!rule.isScoped) {
		          self.rule(rule, scope, hostScope);
		          rule.isScoped = true;
		        }
		        if (callback) {
		          callback(rule, scope, hostScope);
		        }
		      });
		    }
		  }, {
		    key: '_calcElementScope',
		    value: function _calcElementScope(scope) {
		      if (scope) {
		        return CSS_CLASS_PREFIX + scope;
		      } else {
		        return '';
		      }
		    }
		  }, {
		    key: '_calcHostScope',
		    value: function _calcHostScope(scope, ext) {
		      return ext ? '[is=' + scope + ']' : scope;
		    }
		  }, {
		    key: 'rule',
		    value: function rule(_rule, scope, hostScope) {
		      this._transformRule(_rule, this._transformComplexSelector, scope, hostScope);
		    }
		
		    // transforms a css rule to a scoped rule.
		
		  }, {
		    key: '_transformRule',
		    value: function _transformRule(rule, transformer, scope, hostScope) {
		      // NOTE: save transformedSelector for subsequent matching of elements
		      // against selectors (e.g. when calculating style properties)
		      rule.selector = rule.transformedSelector = this._transformRuleCss(rule, transformer, scope, hostScope);
		    }
		  }, {
		    key: '_transformRuleCss',
		    value: function _transformRuleCss(rule, transformer, scope, hostScope) {
		      var p$ = rule.selector.split(COMPLEX_SELECTOR_SEP);
		      // we want to skip transformation of rules that appear in keyframes,
		      // because they are keyframe selectors, not element selectors.
		      if (!StyleUtil.isKeyframesSelector(rule)) {
		        for (var i = 0, l = p$.length, p; i < l && (p = p$[i]); i++) {
		          p$[i] = transformer.call(this, p, scope, hostScope);
		        }
		      }
		      return p$.join(COMPLEX_SELECTOR_SEP);
		    }
		  }, {
		    key: '_transformComplexSelector',
		    value: function _transformComplexSelector(selector, scope, hostScope) {
		      var _this = this;
		
		      var stop = false;
		      selector = selector.trim();
		      // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP
		      selector = selector.replace(NTH, function (m, type, inner) {
		        return ':' + type + '(' + inner.replace(/\s/g, '') + ')';
		      });
		      selector = selector.replace(SLOTTED_START, HOST + ' $1');
		      selector = selector.replace(SIMPLE_SELECTOR_SEP, function (m, c, s) {
		        if (!stop) {
		          var info = _this._transformCompoundSelector(s, c, scope, hostScope);
		          stop = stop || info.stop;
		          c = info.combinator;
		          s = info.value;
		        }
		        return c + s;
		      });
		      return selector;
		    }
		  }, {
		    key: '_transformCompoundSelector',
		    value: function _transformCompoundSelector(selector, combinator, scope, hostScope) {
		      // replace :host with host scoping class
		      var slottedIndex = selector.indexOf(SLOTTED);
		      if (selector.indexOf(HOST) >= 0) {
		        selector = this._transformHostSelector(selector, hostScope);
		        // replace other selectors with scoping class
		      } else if (slottedIndex !== 0) {
		        selector = scope ? this._transformSimpleSelector(selector, scope) : selector;
		      }
		      // mark ::slotted() scope jump to replace with descendant selector + arg
		      // also ignore left-side combinator
		      var slotted = false;
		      if (slottedIndex >= 0) {
		        combinator = '';
		        slotted = true;
		      }
		      // process scope jumping selectors up to the scope jump and then stop
		      var stop = void 0;
		      if (slotted) {
		        stop = true;
		        if (slotted) {
		          // .zonk ::slotted(.foo) -> .zonk.scope > .foo
		          selector = selector.replace(SLOTTED_PAREN, function (m, paren) {
		            return ' > ' + paren;
		          });
		        }
		      }
		      selector = selector.replace(DIR_PAREN, function (m, before, dir) {
		        return '[dir="' + dir + '"] ' + before + ', ' + before + '[dir="' + dir + '"]';
		      });
		      return { value: selector, combinator: combinator, stop: stop };
		    }
		  }, {
		    key: '_transformSimpleSelector',
		    value: function _transformSimpleSelector(selector, scope) {
		      var p$ = selector.split(PSEUDO_PREFIX);
		      p$[0] += scope;
		      return p$.join(PSEUDO_PREFIX);
		    }
		
		    // :host(...) -> scopeName...
		
		  }, {
		    key: '_transformHostSelector',
		    value: function _transformHostSelector(selector, hostScope) {
		      var m = selector.match(HOST_PAREN);
		      var paren = m && m[2].trim() || '';
		      if (paren) {
		        if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {
		          // paren starts with a type selector
		          var typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];
		          // if the type selector is our hostScope then avoid pre-pending it
		          if (typeSelector === hostScope) {
		            return paren;
		            // otherwise, this selector should not match in this scope so
		            // output a bogus selector.
		          } else {
		            return SELECTOR_NO_MATCH;
		          }
		        } else {
		          // make sure to do a replace here to catch selectors like:
		          // `:host(.foo)::before`
		          return selector.replace(HOST_PAREN, function (m, host, paren) {
		            return hostScope + paren;
		          });
		        }
		        // if no paren, do a straight :host replacement.
		        // TODO(sorvell): this should not strictly be necessary but
		        // it's needed to maintain support for `:host[foo]` type selectors
		        // which have been improperly used under Shady DOM. This should be
		        // deprecated.
		      } else {
		        return selector.replace(HOST, hostScope);
		      }
		    }
		  }, {
		    key: 'documentRule',
		    value: function documentRule(rule) {
		      // reset selector in case this is redone.
		      rule.selector = rule.parsedSelector;
		      this.normalizeRootSelector(rule);
		      this._transformRule(rule, this._transformDocumentSelector);
		    }
		  }, {
		    key: 'normalizeRootSelector',
		    value: function normalizeRootSelector(rule) {
		      if (rule.selector === ROOT) {
		        rule.selector = 'html';
		      }
		    }
		  }, {
		    key: '_transformDocumentSelector',
		    value: function _transformDocumentSelector(selector) {
		      return selector.match(SLOTTED) ? this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) : this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);
		    }
		  }, {
		    key: 'SCOPE_NAME',
		    get: function get() {
		      return SCOPE_NAME;
		    }
		  }]);
		
		  return StyleTransformer;
		}();
		
		var NTH = /:(nth[-\w]+)\(([^)]+)\)/;
		var SCOPE_DOC_SELECTOR = ':not(.' + SCOPE_NAME + ')';
		var COMPLEX_SELECTOR_SEP = ',';
		var SIMPLE_SELECTOR_SEP = /(^|[\s>+~]+)((?:\[.+?\]|[^\s>+~=\[])+)/g;
		var SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;
		var HOST = ':host';
		var ROOT = ':root';
		var SLOTTED = '::slotted';
		var SLOTTED_START = new RegExp('^(' + SLOTTED + ')');
		// NOTE: this supports 1 nested () pair for things like
		// :host(:not([selected]), more general support requires
		// parsing which seems like overkill
		var HOST_PAREN = /(:host)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/;
		// similar to HOST_PAREN
		var SLOTTED_PAREN = /(?:::slotted)(?:\(((?:\([^)(]*\)|[^)(]*)+?)\))/;
		var DIR_PAREN = /(.*):dir\((?:(ltr|rtl))\)/;
		var CSS_CLASS_PREFIX = '.';
		var PSEUDO_PREFIX = ':';
		var CLASS = 'class';
		var SELECTOR_NO_MATCH = 'should_not_match';
		
		exports.default = new StyleTransformer();
	
	/***/ },
	/* 57 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.rx = undefined;
		exports.toCssText = toCssText;
		exports.rulesForStyle = rulesForStyle;
		exports.isKeyframesSelector = isKeyframesSelector;
		exports.forEachRule = forEachRule;
		exports.applyCss = applyCss;
		exports.applyStyle = applyStyle;
		exports.createScopeStyle = createScopeStyle;
		exports.applyStylePlaceHolder = applyStylePlaceHolder;
		exports.isTargetedBuild = isTargetedBuild;
		exports.getCssBuildType = getCssBuildType;
		exports.processVariableAndFallback = processVariableAndFallback;
		exports.setElementClassRaw = setElementClassRaw;
		
		var _styleSettings = __webpack_require__(55);
		
		var _cssParse = __webpack_require__(54);
		
		function toCssText(rules, callback) {
		  if (typeof rules === 'string') {
		    rules = (0, _cssParse.parse)(rules);
		  }
		  if (callback) {
		    forEachRule(rules, callback);
		  }
		  return (0, _cssParse.stringify)(rules, _styleSettings.nativeCssVariables);
		}
		
		function rulesForStyle(style) {
		  if (!style.__cssRules && style.textContent) {
		    style.__cssRules = (0, _cssParse.parse)(style.textContent);
		  }
		  return style.__cssRules;
		}
		
		// Tests if a rule is a keyframes selector, which looks almost exactly
		// like a normal selector but is not (it has nothing to do with scoping
		// for example).
		function isKeyframesSelector(rule) {
		  return rule.parent && rule.parent.type === _cssParse.types.KEYFRAMES_RULE;
		}
		
		function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {
		  if (!node) {
		    return;
		  }
		  var skipRules = false;
		  if (onlyActiveRules) {
		    if (node.type === _cssParse.types.MEDIA_RULE) {
		      var matchMedia = node.selector.match(rx.MEDIA_MATCH);
		      if (matchMedia) {
		        // if rule is a non matching @media rule, skip subrules
		        if (!window.matchMedia(matchMedia[1]).matches) {
		          skipRules = true;
		        }
		      }
		    }
		  }
		  if (node.type === _cssParse.types.STYLE_RULE) {
		    styleRuleCallback(node);
		  } else if (keyframesRuleCallback && node.type === _cssParse.types.KEYFRAMES_RULE) {
		    keyframesRuleCallback(node);
		  } else if (node.type === _cssParse.types.MIXIN_RULE) {
		    skipRules = true;
		  }
		  var r$ = node.rules;
		  if (r$ && !skipRules) {
		    for (var i = 0, l = r$.length, r; i < l && (r = r$[i]); i++) {
		      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);
		    }
		  }
		}
		
		// add a string of cssText to the document.
		function applyCss(cssText, moniker, target, contextNode) {
		  var style = createScopeStyle(cssText, moniker);
		  return applyStyle(style, target, contextNode);
		}
		
		function applyStyle(style, target, contextNode) {
		  target = target || document.head;
		  var after = contextNode && contextNode.nextSibling || target.firstChild;
		  lastHeadApplyNode = style;
		  return target.insertBefore(style, after);
		}
		
		function createScopeStyle(cssText, moniker) {
		  var style = document.createElement('style');
		  if (moniker) {
		    style.setAttribute('scope', moniker);
		  }
		  style.textContent = cssText;
		  return style;
		}
		
		var lastHeadApplyNode = null;
		
		// insert a comment node as a styling position placeholder.
		function applyStylePlaceHolder(moniker) {
		  var placeHolder = document.createComment(' Shady DOM styles for ' + moniker + ' ');
		  var after = lastHeadApplyNode ? lastHeadApplyNode.nextSibling : null;
		  var scope = document.head;
		  scope.insertBefore(placeHolder, after || scope.firstChild);
		  lastHeadApplyNode = placeHolder;
		  return placeHolder;
		}
		
		function isTargetedBuild(buildType) {
		  return _styleSettings.nativeShadow ? buildType === 'shadow' : buildType === 'shady';
		}
		
		// cssBuildTypeForModule: function (module) {
		//   let dm = Polymer.DomModule.import(module);
		//   if (dm) {
		//     return getCssBuildType(dm);
		//   }
		// },
		//
		function getCssBuildType(element) {
		  return element.getAttribute('css-build');
		}
		
		// Walk from text[start] matching parens
		// returns position of the outer end paren
		function findMatchingParen(text, start) {
		  var level = 0;
		  for (var i = start, l = text.length; i < l; i++) {
		    if (text[i] === '(') {
		      level++;
		    } else if (text[i] === ')') {
		      if (--level === 0) {
		        return i;
		      }
		    }
		  }
		  return -1;
		}
		
		function processVariableAndFallback(str, callback) {
		  // find 'var('
		  var start = str.indexOf('var(');
		  if (start === -1) {
		    // no var?, everything is prefix
		    return callback(str, '', '', '');
		  }
		  //${prefix}var(${inner})${suffix}
		  var end = findMatchingParen(str, start + 3);
		  var inner = str.substring(start + 4, end);
		  var prefix = str.substring(0, start);
		  // suffix may have other variables
		  var suffix = processVariableAndFallback(str.substring(end + 1), callback);
		  var comma = inner.indexOf(',');
		  // value and fallback args should be trimmed to match in property lookup
		  if (comma === -1) {
		    // variable, no fallback
		    return callback(prefix, inner.trim(), '', suffix);
		  }
		  // var(${value},${fallback})
		  var value = inner.substring(0, comma).trim();
		  var fallback = inner.substring(comma + 1).trim();
		  return callback(prefix, value, fallback, suffix);
		}
		
		function setElementClassRaw(element, value) {
		  // use native setAttribute provided by ShadyDOM when setAttribute is patched
		  if (window.ShadyDOM) {
		    window.ShadyDOM.nativeMethods.setAttribute.call(element, 'class', value);
		  } else {
		    element.setAttribute('class', value);
		  }
		}
		
		var rx = exports.rx = {
		  VAR_ASSIGN: /(?:^|[;\s{]\s*)(--[\w-]*?)\s*:\s*(?:([^;{]*)|{([^}]*)})(?:(?=[;\s}])|$)/gi,
		  MIXIN_MATCH: /(?:^|\W+)@apply\s*\(?([^);\n]*)\)?/gi,
		  VAR_CONSUMED: /(--[\w-]+)\s*([:,;)]|$)/gi,
		  ANIMATION_MATCH: /(animation\s*:)|(animation-name\s*:)/,
		  MEDIA_MATCH: /@media[^(]*(\([^)]*\))/,
		  IS_VAR: /^--/,
		  BRACKETED: /\{[^}]*\}/g,
		  HOST_PREFIX: '(?:^|[^.#[:])',
		  HOST_SUFFIX: '($|[.:[\\s>+~])'
		};
	
	/***/ },
	/* 58 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _cssParse = __webpack_require__(54);
		
		var _styleSettings = __webpack_require__(55);
		
		var _styleTransformer = __webpack_require__(56);
		
		var _styleTransformer2 = _interopRequireDefault(_styleTransformer);
		
		var _styleUtil = __webpack_require__(57);
		
		var StyleUtil = _interopRequireWildcard(_styleUtil);
		
		var _styleInfo = __webpack_require__(59);
		
		var _styleInfo2 = _interopRequireDefault(_styleInfo);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		// TODO: dedupe with shady
		var p = window.Element.prototype;
		var matchesSelector = p.matches || p.matchesSelector || p.mozMatchesSelector || p.msMatchesSelector || p.oMatchesSelector || p.webkitMatchesSelector;
		
		var IS_IE = navigator.userAgent.match('Trident');
		
		var XSCOPE_NAME = 'x-scope';
		
		var StyleProperties = function () {
		  function StyleProperties() {
		    _classCallCheck(this, StyleProperties);
		  }
		
		  _createClass(StyleProperties, [{
		    key: 'decorateStyles',
		
		    // decorates styles with rule info and returns an array of used style
		    // property names
		    value: function decorateStyles(rules) {
		      var self = this,
		          props = {},
		          keyframes = [],
		          ruleIndex = 0;
		      StyleUtil.forEachRule(rules, function (rule) {
		        self.decorateRule(rule);
		        // mark in-order position of ast rule in styles block, used for cache key
		        rule.index = ruleIndex++;
		        self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);
		      }, function onKeyframesRule(rule) {
		        keyframes.push(rule);
		      });
		      // Cache all found keyframes rules for later reference:
		      rules._keyframes = keyframes;
		      // return this list of property names *consumes* in these styles.
		      var names = [];
		      for (var i in props) {
		        names.push(i);
		      }
		      return names;
		    }
		
		    // decorate a single rule with property info
		
		  }, {
		    key: 'decorateRule',
		    value: function decorateRule(rule) {
		      if (rule.propertyInfo) {
		        return rule.propertyInfo;
		      }
		      var info = {},
		          properties = {};
		      var hasProperties = this.collectProperties(rule, properties);
		      if (hasProperties) {
		        info.properties = properties;
		        // TODO(sorvell): workaround parser seeing mixins as additional rules
		        rule.rules = null;
		      }
		      info.cssText = this.collectCssText(rule);
		      rule.propertyInfo = info;
		      return info;
		    }
		
		    // collects the custom properties from a rule's cssText
		
		  }, {
		    key: 'collectProperties',
		    value: function collectProperties(rule, properties) {
		      var info = rule.propertyInfo;
		      if (info) {
		        if (info.properties) {
		          Object.assign(properties, info.properties);
		          return true;
		        }
		      } else {
		        var m = void 0,
		            rx = StyleUtil.rx.VAR_ASSIGN;
		        var cssText = rule.parsedCssText;
		        var value = void 0;
		        var any = void 0;
		        while (m = rx.exec(cssText)) {
		          // note: group 2 is var, 3 is mixin
		          value = (m[2] || m[3]).trim();
		          // value of 'inherit' or 'unset' is equivalent to not setting the property here
		          if (value !== 'inherit' || value !== 'unset') {
		            properties[m[1].trim()] = value;
		          }
		          any = true;
		        }
		        return any;
		      }
		    }
		
		    // returns cssText of properties that consume variables/mixins
		
		  }, {
		    key: 'collectCssText',
		    value: function collectCssText(rule) {
		      return this.collectConsumingCssText(rule.parsedCssText);
		    }
		
		    // NOTE: we support consumption inside mixin assignment
		    // but not production, so strip out {...}
		
		  }, {
		    key: 'collectConsumingCssText',
		    value: function collectConsumingCssText(cssText) {
		      return cssText.replace(StyleUtil.rx.BRACKETED, '').replace(StyleUtil.rx.VAR_ASSIGN, '');
		    }
		  }, {
		    key: 'collectPropertiesInCssText',
		    value: function collectPropertiesInCssText(cssText, props) {
		      var m = void 0;
		      while (m = StyleUtil.rx.VAR_CONSUMED.exec(cssText)) {
		        var name = m[1];
		        // This regex catches all variable names, and following non-whitespace char
		        // If next char is not ':', then variable is a consumer
		        if (m[2] !== ':') {
		          props[name] = true;
		        }
		      }
		    }
		
		    // turns custom properties into realized values.
		
		  }, {
		    key: 'reify',
		    value: function reify(props) {
		      // big perf optimization here: reify only *own* properties
		      // since this object has __proto__ of the element's scope properties
		      var names = Object.getOwnPropertyNames(props);
		      for (var i = 0, n; i < names.length; i++) {
		        n = names[i];
		        props[n] = this.valueForProperty(props[n], props);
		      }
		    }
		
		    // given a property value, returns the reified value
		    // a property value may be:
		    // (1) a literal value like: red or 5px;
		    // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or
		    // var(--a, var(--b));
		    // (3) a literal mixin value like { properties }. Each of these properties
		    // can have values that are: (a) literal, (b) variables, (c) @apply mixins.
		
		  }, {
		    key: 'valueForProperty',
		    value: function valueForProperty(property, props) {
		      var _this = this;
		
		      // case (1) default
		      // case (3) defines a mixin and we have to reify the internals
		      if (property) {
		        if (property.indexOf(';') >= 0) {
		          property = this.valueForProperties(property, props);
		        } else {
		          (function () {
		            // case (2) variable
		            var self = _this;
		            var fn = function fn(prefix, value, fallback, suffix) {
		              if (!value) {
		                return prefix + suffix;
		              }
		              var propertyValue = self.valueForProperty(props[value], props);
		              // if value is "initial", then the variable should be treated as unset
		              if (!propertyValue || propertyValue === 'initial') {
		                // fallback may be --a or var(--a) or literal
		                propertyValue = self.valueForProperty(props[fallback] || fallback, props) || fallback;
		              } else if (propertyValue === 'apply-shim-inherit') {
		                // CSS build will replace `inherit` with `apply-shim-inherit`
		                // for use with native css variables.
		                // Since we have full control, we can use `inherit` directly.
		                propertyValue = 'inherit';
		              }
		              return prefix + (propertyValue || '') + suffix;
		            };
		            property = StyleUtil.processVariableAndFallback(property, fn);
		          })();
		        }
		      }
		      return property && property.trim() || '';
		    }
		
		    // note: we do not yet support mixin within mixin
		
		  }, {
		    key: 'valueForProperties',
		    value: function valueForProperties(property, props) {
		      var parts = property.split(';');
		      for (var i = 0, _p, m; i < parts.length; i++) {
		        if (_p = parts[i]) {
		          StyleUtil.rx.MIXIN_MATCH.lastIndex = 0;
		          m = StyleUtil.rx.MIXIN_MATCH.exec(_p);
		          if (m) {
		            _p = this.valueForProperty(props[m[1]], props);
		          } else {
		            var colon = _p.indexOf(':');
		            if (colon !== -1) {
		              var pp = _p.substring(colon);
		              pp = pp.trim();
		              pp = this.valueForProperty(pp, props) || pp;
		              _p = _p.substring(0, colon) + pp;
		            }
		          }
		          parts[i] = _p && _p.lastIndexOf(';') === _p.length - 1 ?
		          // strip trailing ;
		          _p.slice(0, -1) : _p || '';
		        }
		      }
		      return parts.join(';');
		    }
		  }, {
		    key: 'applyProperties',
		    value: function applyProperties(rule, props) {
		      var output = '';
		      // dynamically added sheets may not be decorated so ensure they are.
		      if (!rule.propertyInfo) {
		        this.decorateRule(rule);
		      }
		      if (rule.propertyInfo.cssText) {
		        output = this.valueForProperties(rule.propertyInfo.cssText, props);
		      }
		      rule.cssText = output;
		    }
		
		    // Apply keyframe transformations to the cssText of a given rule. The
		    // keyframeTransforms object is a map of keyframe names to transformer
		    // functions which take in cssText and spit out transformed cssText.
		
		  }, {
		    key: 'applyKeyframeTransforms',
		    value: function applyKeyframeTransforms(rule, keyframeTransforms) {
		      var input = rule.cssText;
		      var output = rule.cssText;
		      if (rule.hasAnimations == null) {
		        // Cache whether or not the rule has any animations to begin with:
		        rule.hasAnimations = StyleUtil.rx.ANIMATION_MATCH.test(input);
		      }
		      // If there are no animations referenced, we can skip transforms:
		      if (rule.hasAnimations) {
		        var transform = void 0;
		        // If we haven't transformed this rule before, we iterate over all
		        // transforms:
		        if (rule.keyframeNamesToTransform == null) {
		          rule.keyframeNamesToTransform = [];
		          for (var keyframe in keyframeTransforms) {
		            transform = keyframeTransforms[keyframe];
		            output = transform(input);
		            // If the transform actually changed the CSS text, we cache the
		            // transform name for future use:
		            if (input !== output) {
		              input = output;
		              rule.keyframeNamesToTransform.push(keyframe);
		            }
		          }
		        } else {
		          // If we already have a list of keyframe names that apply to this
		          // rule, we apply only those keyframe name transforms:
		          for (var i = 0; i < rule.keyframeNamesToTransform.length; ++i) {
		            transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];
		            input = transform(input);
		          }
		          output = input;
		        }
		      }
		      rule.cssText = output;
		    }
		
		    // Test if the rules in these styles matches the given `element` and if so,
		    // collect any custom properties into `props`.
		
		  }, {
		    key: 'propertyDataFromStyles',
		    value: function propertyDataFromStyles(rules, element) {
		      var props = {},
		          self = this;
		      // generates a unique key for these matches
		      var o = [];
		      // note: active rules excludes non-matching @media rules
		      StyleUtil.forEachRule(rules, function (rule) {
		        // TODO(sorvell): we could trim the set of rules at declaration
		        // time to only include ones that have properties
		        if (!rule.propertyInfo) {
		          self.decorateRule(rule);
		        }
		        // match element against transformedSelector: selector may contain
		        // unwanted uniquification and parsedSelector does not directly match
		        // for :host selectors.
		        var selectorToMatch = rule.transformedSelector || rule.parsedSelector;
		        if (element && rule.propertyInfo.properties && selectorToMatch) {
		          if (matchesSelector.call(element, selectorToMatch)) {
		            self.collectProperties(rule, props);
		            // produce numeric key for these matches for lookup
		            addToBitMask(rule.index, o);
		          }
		        }
		      }, null, true);
		      return { properties: props, key: o };
		    }
		  }, {
		    key: 'whenHostOrRootRule',
		    value: function whenHostOrRootRule(scope, rule, cssBuild, callback) {
		      if (!rule.propertyInfo) {
		        this.decorateRule(rule);
		      }
		      if (!rule.propertyInfo.properties) {
		        return;
		      }
		      var hostScope = scope.is ? _styleTransformer2.default._calcHostScope(scope.is, scope.extends) : 'html';
		      var parsedSelector = rule.parsedSelector;
		      var isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';
		      var isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;
		      // build info is either in scope (when scope is an element) or in the style
		      // when scope is the default scope; note: this allows default scope to have
		      // mixed mode built and unbuilt styles.
		      if (cssBuild === 'shady') {
		        // :root -> x-foo > *.x-foo for elements and html for custom-style
		        isRoot = parsedSelector === hostScope + ' > *.' + hostScope || parsedSelector.indexOf('html') !== -1;
		        // :host -> x-foo for elements, but sub-rules have .x-foo in them
		        isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;
		      }
		      if (cssBuild === 'shadow') {
		        isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';
		        isHost = isHost && !isRoot;
		      }
		      if (!isRoot && !isHost) {
		        return;
		      }
		      var selectorToMatch = hostScope;
		      if (isHost) {
		        // need to transform :host under ShadowDOM because `:host` does not work with `matches`
		        if (_styleSettings.nativeShadow && !rule.transformedSelector) {
		          // transform :host into a matchable selector
		          rule.transformedSelector = _styleTransformer2.default._transformRuleCss(rule, _styleTransformer2.default._transformComplexSelector, _styleTransformer2.default._calcElementScope(scope.is), hostScope);
		        }
		        selectorToMatch = rule.transformedSelector || hostScope;
		      }
		      callback({
		        selector: selectorToMatch,
		        isHost: isHost,
		        isRoot: isRoot
		      });
		    }
		  }, {
		    key: 'hostAndRootPropertiesForScope',
		    value: function hostAndRootPropertiesForScope(scope, rules) {
		      var hostProps = {},
		          rootProps = {},
		          self = this;
		      // note: active rules excludes non-matching @media rules
		      var cssBuild = rules && rules.__cssBuild;
		      StyleUtil.forEachRule(rules, function (rule) {
		        // if scope is StyleDefaults, use _element for matchesSelector
		        self.whenHostOrRootRule(scope, rule, cssBuild, function (info) {
		          var element = scope._element || scope;
		          if (matchesSelector.call(element, info.selector)) {
		            if (info.isHost) {
		              self.collectProperties(rule, hostProps);
		            } else {
		              self.collectProperties(rule, rootProps);
		            }
		          }
		        });
		      }, null, true);
		      return { rootProps: rootProps, hostProps: hostProps };
		    }
		  }, {
		    key: 'transformStyles',
		    value: function transformStyles(element, properties, scopeSelector) {
		      var self = this;
		      var hostSelector = _styleTransformer2.default._calcHostScope(element.is, element.extends);
		      var rxHostSelector = element.extends ? '\\' + hostSelector.slice(0, -1) + '\\]' : hostSelector;
		      var hostRx = new RegExp(StyleUtil.rx.HOST_PREFIX + rxHostSelector + StyleUtil.rx.HOST_SUFFIX);
		      var rules = _styleInfo2.default.get(element).styleRules;
		      var keyframeTransforms = this._elementKeyframeTransforms(element, rules, scopeSelector);
		      return _styleTransformer2.default.elementStyles(element, rules, function (rule) {
		        self.applyProperties(rule, properties);
		        if (!_styleSettings.nativeShadow && !StyleUtil.isKeyframesSelector(rule) && rule.cssText) {
		          // NOTE: keyframe transforms only scope munge animation names, so it
		          // is not necessary to apply them in ShadowDOM.
		          self.applyKeyframeTransforms(rule, keyframeTransforms);
		          self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);
		        }
		      });
		    }
		  }, {
		    key: '_elementKeyframeTransforms',
		    value: function _elementKeyframeTransforms(element, rules, scopeSelector) {
		      var keyframesRules = rules._keyframes;
		      var keyframeTransforms = {};
		      if (!_styleSettings.nativeShadow && keyframesRules) {
		        // For non-ShadowDOM, we transform all known keyframes rules in
		        // advance for the current scope. This allows us to catch keyframes
		        // rules that appear anywhere in the stylesheet:
		        for (var i = 0, keyframesRule = keyframesRules[i]; i < keyframesRules.length; keyframesRule = keyframesRules[++i]) {
		          this._scopeKeyframes(keyframesRule, scopeSelector);
		          keyframeTransforms[keyframesRule.keyframesName] = this._keyframesRuleTransformer(keyframesRule);
		        }
		      }
		      return keyframeTransforms;
		    }
		
		    // Generate a factory for transforming a chunk of CSS text to handle a
		    // particular scoped keyframes rule.
		
		  }, {
		    key: '_keyframesRuleTransformer',
		    value: function _keyframesRuleTransformer(keyframesRule) {
		      return function (cssText) {
		        return cssText.replace(keyframesRule.keyframesNameRx, keyframesRule.transformedKeyframesName);
		      };
		    }
		
		    // Transforms `@keyframes` names to be unique for the current host.
		    // Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0
		
		  }, {
		    key: '_scopeKeyframes',
		    value: function _scopeKeyframes(rule, scopeId) {
		      rule.keyframesNameRx = new RegExp(rule.keyframesName, 'g');
		      rule.transformedKeyframesName = rule.keyframesName + '-' + scopeId;
		      rule.transformedSelector = rule.transformedSelector || rule.selector;
		      rule.selector = rule.transformedSelector.replace(rule.keyframesName, rule.transformedKeyframesName);
		    }
		
		    // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):
		    // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo
		    // host selector: x-foo.wide -> .x-foo-42.wide
		    // note: we use only the scope class (.x-foo-42) and not the hostSelector
		    // (x-foo) to scope :host rules; this helps make property host rules
		    // have low specificity. They are overrideable by class selectors but,
		    // unfortunately, not by type selectors (e.g. overriding via
		    // `.special` is ok, but not by `x-foo`).
		
		  }, {
		    key: '_scopeSelector',
		    value: function _scopeSelector(rule, hostRx, hostSelector, scopeId) {
		      rule.transformedSelector = rule.transformedSelector || rule.selector;
		      var selector = rule.transformedSelector;
		      var scope = '.' + scopeId;
		      var parts = selector.split(',');
		      for (var i = 0, l = parts.length, _p2; i < l && (_p2 = parts[i]); i++) {
		        parts[i] = _p2.match(hostRx) ? _p2.replace(hostSelector, scope) : scope + ' ' + _p2;
		      }
		      rule.selector = parts.join(',');
		    }
		  }, {
		    key: 'applyElementScopeSelector',
		    value: function applyElementScopeSelector(element, selector, old) {
		      var c = element.getAttribute('class') || '';
		      var v = c;
		      if (old) {
		        v = c.replace(new RegExp('\\s*' + XSCOPE_NAME + '\\s*' + old + '\\s*', 'g'), ' ');
		      }
		      v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;
		      if (c !== v) {
		        StyleUtil.setElementClassRaw(element, v);
		      }
		    }
		  }, {
		    key: 'applyElementStyle',
		    value: function applyElementStyle(element, properties, selector, style) {
		      // calculate cssText to apply
		      var cssText = style ? style.textContent || '' : this.transformStyles(element, properties, selector);
		      // if shady and we have a cached style that is not style, decrement
		      var styleInfo = _styleInfo2.default.get(element);
		      var s = styleInfo.customStyle;
		      if (s && !_styleSettings.nativeShadow && s !== style) {
		        s._useCount--;
		        if (s._useCount <= 0 && s.parentNode) {
		          s.parentNode.removeChild(s);
		        }
		      }
		      // apply styling always under native or if we generated style
		      // or the cached style is not in document(!)
		      if (_styleSettings.nativeShadow) {
		        // update existing style only under native
		        if (styleInfo.customStyle) {
		          styleInfo.customStyle.textContent = cssText;
		          style = styleInfo.customStyle;
		          // otherwise, if we have css to apply, do so
		        } else if (cssText) {
		          // apply css after the scope style of the element to help with
		          // style precedence rules.
		          style = StyleUtil.applyCss(cssText, selector, element.shadowRoot, styleInfo.placeholder);
		        }
		      } else {
		        // shady and no cache hit
		        if (!style) {
		          // apply css after the scope style of the element to help with
		          // style precedence rules.
		          if (cssText) {
		            style = StyleUtil.applyCss(cssText, selector, null, styleInfo.placeholder);
		          }
		          // shady and cache hit but not in document
		        } else if (!style.parentNode) {
		          StyleUtil.applyStyle(style, null, styleInfo.placeholder);
		        }
		      }
		      // ensure this style is our custom style and increment its use count.
		      if (style) {
		        style._useCount = style._useCount || 0;
		        // increment use count if we changed styles
		        if (styleInfo.customStyle != style) {
		          style._useCount++;
		        }
		        styleInfo.customStyle = style;
		      }
		      // @media rules may be stale in IE 10 and 11
		      if (IS_IE) {
		        style.textContent = style.textContent;
		      }
		      return style;
		    }
		  }, {
		    key: 'applyCustomStyle',
		    value: function applyCustomStyle(style, properties) {
		      var rules = StyleUtil.rulesForStyle(style);
		      var self = this;
		      style.textContent = StyleUtil.toCssText(rules, function (rule) {
		        var css = rule.cssText = rule.parsedCssText;
		        if (rule.propertyInfo && rule.propertyInfo.cssText) {
		          // remove property assignments
		          // so next function isn't confused
		          // NOTE: we have 3 categories of css:
		          // (1) normal properties,
		          // (2) custom property assignments (--foo: red;),
		          // (3) custom property usage: border: var(--foo); @apply(--foo);
		          // In elements, 1 and 3 are separated for efficiency; here they
		          // are not and this makes this case unique.
		          css = (0, _cssParse.removeCustomPropAssignment)(css);
		          // replace with reified properties, scenario is same as mixin
		          rule.cssText = self.valueForProperties(css, properties);
		        }
		      });
		    }
		  }, {
		    key: 'XSCOPE_NAME',
		    get: function get() {
		      return XSCOPE_NAME;
		    }
		  }]);
		
		  return StyleProperties;
		}();
		
		function addToBitMask(n, bits) {
		  var o = parseInt(n / 32);
		  var v = 1 << n % 32;
		  bits[o] = (bits[o] || 0) | v;
		}
		
		exports.default = new StyleProperties();
	
	/***/ },
	/* 59 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _templateMap = __webpack_require__(60);
		
		var _templateMap2 = _interopRequireDefault(_templateMap);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var promise = Promise.resolve();
		
		var StyleInfo = function () {
		  _createClass(StyleInfo, null, [{
		    key: 'get',
		    value: function get(node) {
		      return node.__styleInfo;
		    }
		  }, {
		    key: 'set',
		    value: function set(node, styleInfo) {
		      node.__styleInfo = styleInfo;
		      return styleInfo;
		    }
		  }, {
		    key: 'invalidate',
		    value: function invalidate(elementName) {
		      if (_templateMap2.default[elementName]) {
		        _templateMap2.default[elementName]._applyShimInvalid = true;
		      }
		    }
		    /*
		    the template is marked as `validating` for one microtask so that all instances
		    found in the tree crawl of `applyStyle` will update themselves,
		    but the template will only be updated once.
		    */
		
		  }, {
		    key: 'startValidating',
		    value: function startValidating(elementName) {
		      var template = _templateMap2.default[elementName];
		      if (!template._validating) {
		        template._validating = true;
		        promise.then(function () {
		          template._applyShimInvalid = false;
		          template._validating = false;
		        });
		      }
		    }
		  }]);
		
		  function StyleInfo(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {
		    _classCallCheck(this, StyleInfo);
		
		    this.styleRules = ast || null;
		    this.placeholder = placeholder || null;
		    this.ownStylePropertyNames = ownStylePropertyNames || [];
		    this.overrideStyleProperties = null;
		    this.elementName = elementName || '';
		    this.cssBuild = cssBuild || '';
		    this.typeExtension = typeExtension || '';
		    this.styleProperties = null;
		    this.scopeSelector = null;
		    this.customStyle = null;
		  }
		
		  return StyleInfo;
		}();
		
		exports.default = StyleInfo;
	
	/***/ },
	/* 60 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = {};
	
	/***/ },
	/* 61 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _styleUtil = __webpack_require__(57);
		
		var _styleSettings = __webpack_require__(55);
		
		var placeholderMap = {};
		
		var ce = window.customElements;
		if (ce && !_styleSettings.nativeShadow) {
		  (function () {
		    var origDefine = ce.define;
		    ce.define = function (name, clazz, options) {
		      placeholderMap[name] = (0, _styleUtil.applyStylePlaceHolder)(name);
		      return origDefine.call(ce, name, clazz, options);
		    };
		  })();
		}
		
		exports.default = placeholderMap;
	
	/***/ },
	/* 62 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var StyleCache = function () {
		  function StyleCache() {
		    var typeMax = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;
		
		    _classCallCheck(this, StyleCache);
		
		    // map element name -> [{properties, styleElement, scopeSelector}]
		    this.cache = {};
		    this.typeMax = typeMax;
		  }
		
		  _createClass(StyleCache, [{
		    key: '_validate',
		    value: function _validate(cacheEntry, properties, ownPropertyNames) {
		      for (var idx = 0; idx < ownPropertyNames.length; idx++) {
		        var pn = ownPropertyNames[idx];
		        if (cacheEntry.properties[pn] !== properties[pn]) {
		          return false;
		        }
		      }
		      return true;
		    }
		  }, {
		    key: 'store',
		    value: function store(tagname, properties, styleElement, scopeSelector) {
		      var list = this.cache[tagname] || [];
		      list.push({ properties: properties, styleElement: styleElement, scopeSelector: scopeSelector });
		      if (list.length > this.typeMax) {
		        list.shift();
		      }
		      this.cache[tagname] = list;
		    }
		  }, {
		    key: 'fetch',
		    value: function fetch(tagname, properties, ownPropertyNames) {
		      var list = this.cache[tagname];
		      if (!list) {
		        return;
		      }
		      // reverse list for most-recent lookups
		      for (var idx = list.length - 1; idx >= 0; idx--) {
		        var entry = list[idx];
		        if (this._validate(entry, properties, ownPropertyNames)) {
		          return entry;
		        }
		      }
		    }
		  }]);
		
		  return StyleCache;
		}();
		
		exports.default = StyleCache;
	
	/***/ },
	/* 63 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		/**
		 * The apply shim simulates the behavior of `@apply` proposed at
		 * https://tabatkins.github.io/specs/css-apply-rule/.
		 * The approach is to convert a property like this:
		 *
		 *    --foo: {color: red; background: blue;}
		 *
		 * to this:
		 *
		 *    --foo_-_color: red;
		 *    --foo_-_background: blue;
		 *
		 * Then where `@apply --foo` is used, that is converted to:
		 *
		 *    color: var(--foo_-_color);
		 *    background: var(--foo_-_background);
		 *
		 * This approach generally works but there are some issues and limitations.
		 * Consider, for example, that somewhere *between* where `--foo` is set and used,
		 * another element sets it to:
		 *
		 *    --foo: { border: 2px solid red; }
		 *
		 * We must now ensure that the color and background from the previous setting
		 * do not apply. This is accomplished by changing the property set to this:
		 *
		 *    --foo_-_border: 2px solid red;
		 *    --foo_-_color: initial;
		 *    --foo_-_background: initial;
		 *
		 * This works but introduces one new issue.
		 * Consider this setup at the point where the `@apply` is used:
		 *
		 *    background: orange;
		 *    @apply --foo;
		 *
		 * In this case the background will be unset (initial) rather than the desired
		 * `orange`. We address this by altering the property set to use a fallback
		 * value like this:
		 *
		 *    color: var(--foo_-_color);
		 *    background: var(--foo_-_background, orange);
		 *    border: var(--foo_-_border);
		 *
		 * Note that the default is retained in the property set and the `background` is
		 * the desired `orange`. This leads us to a limitation.
		 *
		 * Limitation 1:
		
		 * Only properties in the rule where the `@apply`
		 * is used are considered as default values.
		 * If another rule matches the element and sets `background` with
		 * less specificity than the rule in which `@apply` appears,
		 * the `background` will not be set.
		 *
		 * Limitation 2:
		 *
		 * When using Polymer's `updateStyles` api, new properties may not be set for
		 * `@apply` properties.
		
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _styleUtil = __webpack_require__(57);
		
		var _templateMap = __webpack_require__(60);
		
		var _templateMap2 = _interopRequireDefault(_templateMap);
		
		var _styleInfo = __webpack_require__(59);
		
		var _styleInfo2 = _interopRequireDefault(_styleInfo);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var MIXIN_MATCH = _styleUtil.rx.MIXIN_MATCH;
		var VAR_ASSIGN = _styleUtil.rx.VAR_ASSIGN;
		
		var APPLY_NAME_CLEAN = /;\s*/m;
		var INITIAL_INHERIT = /^\s*(initial)|(inherit)\s*$/;
		
		// separator used between mixin-name and mixin-property-name when producing properties
		// NOTE: plain '-' may cause collisions in user styles
		var MIXIN_VAR_SEP = '_-_';
		
		// map of mixin to property names
		// --foo: {border: 2px} -> {properties: {(--foo, ['border'])}, dependants: {'element-name': proto}}
		
		var MixinMap = function () {
		  function MixinMap() {
		    _classCallCheck(this, MixinMap);
		
		    this._map = {};
		  }
		
		  _createClass(MixinMap, [{
		    key: 'set',
		    value: function set(name, props) {
		      name = name.trim();
		      this._map[name] = {
		        properties: props,
		        dependants: {}
		      };
		    }
		  }, {
		    key: 'get',
		    value: function get(name) {
		      name = name.trim();
		      return this._map[name];
		    }
		  }]);
		
		  return MixinMap;
		}();
		
		var ApplyShim = function () {
		  function ApplyShim() {
		    var _this = this;
		
		    _classCallCheck(this, ApplyShim);
		
		    this._currentTemplate = null;
		    this._measureElement = null;
		    this._map = new MixinMap();
		    this._separator = MIXIN_VAR_SEP;
		    this._boundProduceCssProperties = function (matchText, propertyName, valueProperty, valueMixin) {
		      return _this._produceCssProperties(matchText, propertyName, valueProperty, valueMixin);
		    };
		  }
		  // return true if `cssText` contains a mixin definition or consumption
		
		
		  _createClass(ApplyShim, [{
		    key: 'detectMixin',
		    value: function detectMixin(cssText) {
		      var has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);
		      // reset state of the regexes
		      MIXIN_MATCH.lastIndex = 0;
		      VAR_ASSIGN.lastIndex = 0;
		      return has;
		    }
		  }, {
		    key: 'transformStyle',
		    value: function transformStyle(style, elementName) {
		      var ast = (0, _styleUtil.rulesForStyle)(style);
		      this.transformRules(ast, elementName);
		      return ast;
		    }
		  }, {
		    key: 'transformRules',
		    value: function transformRules(rules, elementName) {
		      var _this2 = this;
		
		      this._currentTemplate = _templateMap2.default[elementName];
		      (0, _styleUtil.forEachRule)(rules, function (r) {
		        _this2.transformRule(r);
		      });
		      this._currentTemplate = null;
		    }
		  }, {
		    key: 'transformRule',
		    value: function transformRule(rule) {
		      rule.cssText = this.transformCssText(rule.parsedCssText);
		      // :root was only used for variable assignment in property shim,
		      // but generates invalid selectors with real properties.
		      // replace with `:host > *`, which serves the same effect
		      if (rule.selector === ':root') {
		        rule.selector = ':host > *';
		      }
		    }
		  }, {
		    key: 'transformCssText',
		    value: function transformCssText(cssText) {
		      // produce variables
		      cssText = cssText.replace(VAR_ASSIGN, this._boundProduceCssProperties);
		      // consume mixins
		      return this._consumeCssProperties(cssText);
		    }
		  }, {
		    key: '_getInitialValueForProperty',
		    value: function _getInitialValueForProperty(property) {
		      if (!this._measureElement) {
		        this._measureElement = document.createElement('meta');
		        this._measureElement.style.all = 'initial';
		        document.head.appendChild(this._measureElement);
		      }
		      return window.getComputedStyle(this._measureElement).getPropertyValue(property);
		    }
		    // replace mixin consumption with variable consumption
		
		  }, {
		    key: '_consumeCssProperties',
		    value: function _consumeCssProperties(text) {
		      var m = void 0;
		      // loop over text until all mixins with defintions have been applied
		      while (m = MIXIN_MATCH.exec(text)) {
		        var matchText = m[0];
		        var mixinName = m[1];
		        var idx = m.index;
		        // collect properties before apply to be "defaults" if mixin might override them
		        // match includes a "prefix", so find the start and end positions of @apply
		        var applyPos = idx + matchText.indexOf('@apply');
		        var afterApplyPos = idx + matchText.length;
		        // find props defined before this @apply
		        var textBeforeApply = text.slice(0, applyPos);
		        var textAfterApply = text.slice(afterApplyPos);
		        var defaults = this._cssTextToMap(textBeforeApply);
		        var replacement = this._atApplyToCssProperties(mixinName, defaults);
		        // use regex match position to replace mixin, keep linear processing time
		        text = [textBeforeApply, replacement, textAfterApply].join('');
		        // move regex search to _after_ replacement
		        MIXIN_MATCH.lastIndex = idx + replacement.length;
		      }
		      return text;
		    }
		    // produce variable consumption at the site of mixin consumption
		    // @apply --foo; -> for all props (${propname}: var(--foo_-_${propname}, ${fallback[propname]}}))
		    // Example:
		    // border: var(--foo_-_border); padding: var(--foo_-_padding, 2px)
		
		  }, {
		    key: '_atApplyToCssProperties',
		    value: function _atApplyToCssProperties(mixinName, fallbacks) {
		      mixinName = mixinName.replace(APPLY_NAME_CLEAN, '');
		      var vars = [];
		      var mixinEntry = this._map.get(mixinName);
		      // if we depend on a mixin before it is created
		      // make a sentinel entry in the map to add this element as a dependency for when it is defined.
		      if (!mixinEntry) {
		        this._map.set(mixinName, {});
		        mixinEntry = this._map.get(mixinName);
		      }
		      if (mixinEntry) {
		        if (this._currentTemplate) {
		          mixinEntry.dependants[this._currentTemplate.name] = this._currentTemplate;
		        }
		        var p = void 0,
		            parts = void 0,
		            f = void 0;
		        for (p in mixinEntry.properties) {
		          f = fallbacks && fallbacks[p];
		          parts = [p, ': var(', mixinName, MIXIN_VAR_SEP, p];
		          if (f) {
		            parts.push(',', f);
		          }
		          parts.push(')');
		          vars.push(parts.join(''));
		        }
		      }
		      return vars.join('; ');
		    }
		  }, {
		    key: '_replaceInitialOrInherit',
		    value: function _replaceInitialOrInherit(property, value) {
		      var match = INITIAL_INHERIT.exec(value);
		      if (match) {
		        if (match[1]) {
		          // initial
		          // replace `initial` with the concrete initial value for this property
		          value = ApplyShim._getInitialValueForProperty(property);
		        } else {
		          // inherit
		          // with this purposfully illegal value, the variable will be invalid at
		          // compute time (https://www.w3.org/TR/css-variables/#invalid-at-computed-value-time)
		          // and for inheriting values, will behave similarly
		          // we cannot support the same behavior for non inheriting values like 'border'
		          value = 'apply-shim-inherit';
		        }
		      }
		      return value;
		    }
		
		    // "parse" a mixin definition into a map of properties and values
		    // cssTextToMap('border: 2px solid black') -> ('border', '2px solid black')
		
		  }, {
		    key: '_cssTextToMap',
		    value: function _cssTextToMap(text) {
		      var props = text.split(';');
		      var property = void 0,
		          value = void 0;
		      var out = {};
		      for (var i = 0, p, sp; i < props.length; i++) {
		        p = props[i];
		        if (p) {
		          sp = p.split(':');
		          // ignore lines that aren't definitions like @media
		          if (sp.length > 1) {
		            property = sp[0].trim();
		            // some properties may have ':' in the value, like data urls
		            value = this._replaceInitialOrInherit(property, sp.slice(1).join(':'));
		            out[property] = value;
		          }
		        }
		      }
		      return out;
		    }
		  }, {
		    key: '_invalidateMixinEntry',
		    value: function _invalidateMixinEntry(mixinEntry) {
		      for (var elementName in mixinEntry.dependants) {
		        if (!this._currentTemplate || elementName !== this._currentTemplate.name) {
		          _styleInfo2.default.invalidate(elementName);
		        }
		      }
		    }
		  }, {
		    key: '_produceCssProperties',
		    value: function _produceCssProperties(matchText, propertyName, valueProperty, valueMixin) {
		      var _this3 = this;
		
		      // handle case where property value is a mixin
		      if (valueProperty) {
		        // form: --mixin2: var(--mixin1), where --mixin1 is in the map
		        (0, _styleUtil.processVariableAndFallback)(valueProperty, function (prefix, value) {
		          if (value && _this3._map.get(value)) {
		            valueMixin = '@apply ' + value + ';';
		          }
		        });
		      }
		      if (!valueMixin) {
		        return matchText;
		      }
		      var mixinAsProperties = this._consumeCssProperties(valueMixin);
		      var prefix = matchText.slice(0, matchText.indexOf('--'));
		      var mixinValues = this._cssTextToMap(mixinAsProperties);
		      var combinedProps = mixinValues;
		      var mixinEntry = this._map.get(propertyName);
		      var oldProps = mixinEntry && mixinEntry.properties;
		      if (oldProps) {
		        // NOTE: since we use mixin, the map of properties is updated here
		        // and this is what we want.
		        combinedProps = Object.assign(Object.create(oldProps), mixinValues);
		      } else {
		        this._map.set(propertyName, combinedProps);
		      }
		      var out = [];
		      var p = void 0,
		          v = void 0;
		      // set variables defined by current mixin
		      var needToInvalidate = false;
		      for (p in combinedProps) {
		        v = mixinValues[p];
		        // if property not defined by current mixin, set initial
		        if (v === undefined) {
		          v = 'initial';
		        }
		        if (oldProps && !(p in oldProps)) {
		          needToInvalidate = true;
		        }
		        out.push(propertyName + MIXIN_VAR_SEP + p + ': ' + v);
		      }
		      if (needToInvalidate) {
		        this._invalidateMixinEntry(mixinEntry);
		      }
		      if (mixinEntry) {
		        mixinEntry.properties = combinedProps;
		      }
		      // because the mixinMap is global, the mixin might conflict with
		      // a different scope's simple variable definition:
		      // Example:
		      // some style somewhere:
		      // --mixin1:{ ... }
		      // --mixin2: var(--mixin1);
		      // some other element:
		      // --mixin1: 10px solid red;
		      // --foo: var(--mixin1);
		      // In this case, we leave the original variable definition in place.
		      if (valueProperty) {
		        prefix = matchText + ';' + prefix;
		      }
		      return prefix + out.join('; ') + ';';
		    }
		  }]);
		
		  return ApplyShim;
		}();
		
		var applyShim = new ApplyShim();
		window['ApplyShim'] = applyShim;
		exports.default = applyShim;
	
	/***/ },
	/* 64 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.flush = undefined;
		
		var _styleSettings = __webpack_require__(55);
		
		var _styleTransformer = __webpack_require__(56);
		
		var _styleTransformer2 = _interopRequireDefault(_styleTransformer);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var flush = exports.flush = function flush() {};
		
		if (!_styleSettings.nativeShadow) {
		  (function () {
		    var elementNeedsScoping = function elementNeedsScoping(element) {
		      return element.classList && !element.classList.contains(_styleTransformer2.default.SCOPE_NAME) ||
		      // note: necessary for IE11
		      element instanceof SVGElement && (!element.hasAttribute('class') || element.getAttribute('class').indexOf(_styleTransformer2.default.SCOPE_NAME) < 0);
		    };
		
		    var handler = function handler(mxns) {
		      for (var x = 0; x < mxns.length; x++) {
		        var mxn = mxns[x];
		        if (mxn.target === document.documentElement || mxn.target === document.head) {
		          continue;
		        }
		        for (var i = 0; i < mxn.addedNodes.length; i++) {
		          var n = mxn.addedNodes[i];
		          if (elementNeedsScoping(n)) {
		            var root = n.getRootNode();
		            if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {
		              // may no longer be in a shadowroot
		              var host = root.host;
		              if (host) {
		                var scope = host.is || host.localName;
		                _styleTransformer2.default.dom(n, scope);
		              }
		            }
		          }
		        }
		        for (var _i = 0; _i < mxn.removedNodes.length; _i++) {
		          var _n = mxn.removedNodes[_i];
		          if (_n.nodeType === Node.ELEMENT_NODE) {
		            var classes = undefined;
		            if (_n.classList) {
		              classes = Array.from(_n.classList);
		            } else if (_n.hasAttribute('class')) {
		              classes = _n.getAttribute('class').split(/\s+/);
		            }
		            if (classes !== undefined) {
		              // NOTE: relies on the scoping class always being adjacent to the
		              // SCOPE_NAME class.
		              var classIdx = classes.indexOf(_styleTransformer2.default.SCOPE_NAME);
		              if (classIdx >= 0) {
		                var _scope = classes[classIdx + 1];
		                if (_scope) {
		                  _styleTransformer2.default.dom(_n, _scope, true);
		                }
		              }
		            }
		          }
		        }
		      }
		    };
		
		    var observer = new MutationObserver(handler);
		    var start = function start(node) {
		      observer.observe(node, { childList: true, subtree: true });
		    };
		    var nativeCustomElements = window.customElements && !window.customElements.flush;
		    // need to start immediately with native custom elements
		    // TODO(dfreedm): with polyfilled HTMLImports and native custom elements
		    // excessive mutations may be observed; this can be optimized via cooperation
		    // with the HTMLImports polyfill.
		    if (nativeCustomElements) {
		      start(document);
		    } else {
		      (function () {
		        var delayedStart = function delayedStart() {
		          start(document.body);
		        };
		        // use polyfill timing if it's available
		        if (window.HTMLImports) {
		          window.HTMLImports.whenReady(delayedStart);
		          // otherwise push beyond native imports being ready
		          // which requires RAF + readystate interactive.
		        } else {
		          requestAnimationFrame(function () {
		            if (document.readyState === 'loading') {
		              (function () {
		                var listener = function listener() {
		                  delayedStart();
		                  document.removeEventListener('readystatechange', listener);
		                };
		                document.addEventListener('readystatechange', listener);
		              })();
		            } else {
		              delayedStart();
		            }
		          });
		        }
		      })();
		    }
		
		    exports.flush = flush = function flush() {
		      handler(observer.takeRecords());
		    };
		  })();
		}
	
	/***/ },
	/* 65 */
	/***/ function(module, exports) {
	
		/**
		@license
		Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
		This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
		The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
		The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
		Code distributed by Google as part of the polymer project is also
		subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
		*/
		
		/*
		Wrapper over <style> elements to co-operate with ShadyCSS
		
		Example:
		<custom-style>
		  <style>
		  ...
		  </style>
		</custom-style>
		*/
		
		'use strict';
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var ShadyCSS = window.ShadyCSS;
		
		var enqueued = false;
		
		var customStyles = [];
		
		var hookFn = null;
		
		/*
		If a page only has <custom-style> elements, it will flash unstyled content,
		as all the instances will boot asynchronously after page load.
		
		Calling ShadyCSS.updateStyles() will force the work to happen synchronously
		*/
		function enqueueDocumentValidation() {
		  if (enqueued) {
		    return;
		  }
		  enqueued = true;
		  if (window.HTMLImports) {
		    window.HTMLImports.whenReady(validateDocument);
		  } else if (document.readyState === 'complete') {
		    validateDocument();
		  } else {
		    document.addEventListener('readystatechange', function () {
		      if (document.readyState === 'complete') {
		        validateDocument();
		      }
		    });
		  }
		}
		
		function validateDocument() {
		  requestAnimationFrame(function () {
		    if (enqueued || ShadyCSS._elementsHaveApplied) {
		      ShadyCSS.updateStyles();
		    }
		    enqueued = false;
		  });
		}
		
		var CustomStyle = function (_HTMLElement) {
		  _inherits(CustomStyle, _HTMLElement);
		
		  _createClass(CustomStyle, null, [{
		    key: 'findStyles',
		    value: function findStyles() {
		      for (var i = 0; i < customStyles.length; i++) {
		        var c = customStyles[i];
		        if (!c._style) {
		          var style = c.querySelector('style');
		          if (!style) {
		            continue;
		          }
		          // HTMLImports polyfill may have cloned the style into the main document,
		          // which is referenced with __appliedElement.
		          // Also, we must copy over the attributes.
		          if (style.__appliedElement) {
		            for (var _i = 0; _i < style.attributes.length; _i++) {
		              var attr = style.attributes[_i];
		              style.__appliedElement.setAttribute(attr.name, attr.value);
		            }
		          }
		          c._style = style.__appliedElement || style;
		          if (hookFn) {
		            hookFn(c._style);
		          }
		          ShadyCSS._transformCustomStyleForDocument(c._style);
		        }
		      }
		    }
		  }, {
		    key: '_revalidateApplyShim',
		    value: function _revalidateApplyShim() {
		      for (var i = 0; i < customStyles.length; i++) {
		        var c = customStyles[i];
		        if (c._style) {
		          ShadyCSS._revalidateApplyShim(c._style);
		        }
		      }
		    }
		  }, {
		    key: 'applyStyles',
		    value: function applyStyles() {
		      for (var i = 0; i < customStyles.length; i++) {
		        var c = customStyles[i];
		        if (c._style) {
		          ShadyCSS._applyCustomStyleToDocument(c._style);
		        }
		      }
		      enqueued = false;
		    }
		  }, {
		    key: '_customStyles',
		    get: function get() {
		      return customStyles;
		    }
		  }, {
		    key: 'processHook',
		    get: function get() {
		      return hookFn;
		    },
		    set: function set(fn) {
		      hookFn = fn;
		    }
		  }, {
		    key: '_documentDirty',
		    get: function get() {
		      return enqueued;
		    }
		  }]);
		
		  function CustomStyle() {
		    _classCallCheck(this, CustomStyle);
		
		    var _this = _possibleConstructorReturn(this, (CustomStyle.__proto__ || Object.getPrototypeOf(CustomStyle)).call(this));
		
		    customStyles.push(_this);
		    enqueueDocumentValidation();
		    return _this;
		  }
		
		  return CustomStyle;
		}(HTMLElement);
		
		window['CustomStyle'] = CustomStyle;
		window.customElements.define('custom-style', CustomStyle);
	
	/***/ }
	/******/ ])
	});
	;
	//# sourceMappingURL=index.js.map

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _skatejs = __webpack_require__(294);
	
	var _helpers = __webpack_require__(296);
	
	var _body = __webpack_require__(328);
	
	var _body2 = _interopRequireDefault(_body);
	
	var _footer = __webpack_require__(329);
	
	var _footer2 = _interopRequireDefault(_footer);
	
	var _header = __webpack_require__(332);
	
	var _header2 = _interopRequireDefault(_header);
	
	var _module = __webpack_require__(334);
	
	var _module2 = _interopRequireDefault(_module);
	
	var _route = __webpack_require__(335);
	
	var _route2 = _interopRequireDefault(_route);
	
	var _title = __webpack_require__(336);
	
	var _title2 = _interopRequireDefault(_title);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /** @jsx h */
	
	exports.default = (0, _skatejs.define)(function (_Component) {
	  _inherits(_class, _Component);
	
	  _createClass(_class, null, [{
	    key: 'is',
	    get: function get() {
	      return 'sk-app';
	    }
	  }, {
	    key: 'props',
	    get: function get() {
	      return {
	        page: {},
	        scrolled: _skatejs.prop.boolean()
	      };
	    }
	  }]);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    // Setup the Gitter script before it's rendered.
	    var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this));
	
	    ((window.gitter = {}).chat = {}).options = {
	      room: 'skatejs/skatejs'
	    };
	    return _this;
	  }
	
	  _createClass(_class, [{
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      var _this2 = this;
	
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'connectedCallback', this).call(this);
	      window.addEventListener('scroll', this._scrollHandler = function () {
	        return _this2.scrolled = !!window.scrollY;
	      });
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'disconnectedCallback', this).call(this);
	      window.removeEventListener('scroll', this._scrollHandler);
	    }
	  }, {
	    key: 'renderCallback',
	    value: function renderCallback() {
	      var _this3 = this;
	
	      var Page = this.page;
	      var render = function render(page) {
	        _this3.page = page.default;
	      };
	      (0, _title2.default)('SkateJS - functional web components');
	      return [(0, _skatejs.h)(
	        'div',
	        null,
	        (0, _skatejs.h)(_route2.default, { path: '/', match: function match() {
	            return (0, _skatejs.h)(_module2.default, { load: __webpack_require__(337), done: render });
	          } }),
	        (0, _skatejs.h)(_route2.default, { path: '/getting-started', match: function match() {
	            return (0, _skatejs.h)(_module2.default, { load: __webpack_require__(340), done: render });
	          } }),
	        (0, _skatejs.h)(_route2.default, { path: '/docs', match: function match() {
	            return (0, _skatejs.h)(_module2.default, { load: __webpack_require__(342), done: render });
	          } }),
	        (0, _skatejs.h)(_route2.default, { path: '/examples', match: function match() {
	            return (0, _skatejs.h)(_module2.default, { load: __webpack_require__(344), done: render });
	          } }),
	        (0, _skatejs.h)(_route2.default, { path: '/guides', match: function match() {
	            return (0, _skatejs.h)(_module2.default, { load: __webpack_require__(346), done: render });
	          } }),
	        (0, _skatejs.h)(_route2.default, { path: '/support', match: function match() {
	            return (0, _skatejs.h)(_module2.default, { load: __webpack_require__(348), done: render });
	          } }),
	        (0, _skatejs.h)(
	          _header2.default,
	          { scrolled: this.scrolled, title: 'SkateJS' },
	          (0, _skatejs.h)(
	            _helpers.Item,
	            { href: '/docs' },
	            'Docs'
	          )
	        ),
	        (0, _skatejs.h)(
	          _body2.default,
	          null,
	          Page ? (0, _skatejs.h)(Page, null) : ''
	        ),
	        (0, _skatejs.h)(_footer2.default, null)
	      ), (0, _skatejs.h)('script', { src: 'http://sidecar.gitter.im/dist/sidecar.v1.js', async: true, defer: true })];
	    }
	  }]);
	
	  return _class;
	}(_skatejs.Component));

/***/ },
/* 294 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(295));
		else if(typeof define === 'function' && define.amd)
			define(["incremental-dom"], factory);
		else if(typeof exports === 'object')
			exports["skate"] = factory(require("incremental-dom"));
		else
			root["skate"] = factory(root["IncrementalDOM"]);
	})(this, function(__WEBPACK_EXTERNAL_MODULE_14__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			i: moduleId,
	/******/ 			l: false,
	/******/ 			exports: {}
	/******/ 		};
	
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	
	/******/ 		// Flag the module as loaded
	/******/ 		module.l = true;
	
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	
	
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	
	/******/ 	// identity function for calling harmony imports with the correct context
	/******/ 	__webpack_require__.i = function(value) { return value; };
	
	/******/ 	// define getter function for harmony exports
	/******/ 	__webpack_require__.d = function(exports, name, getter) {
	/******/ 		if(!__webpack_require__.o(exports, name)) {
	/******/ 			Object.defineProperty(exports, name, {
	/******/ 				configurable: false,
	/******/ 				enumerable: true,
	/******/ 				get: getter
	/******/ 			});
	/******/ 		}
	/******/ 	};
	
	/******/ 	// getDefaultExport function for compatibility with non-harmony modules
	/******/ 	__webpack_require__.n = function(module) {
	/******/ 		var getter = module && module.__esModule ?
	/******/ 			function getDefault() { return module['default']; } :
	/******/ 			function getModuleExports() { return module; };
	/******/ 		__webpack_require__.d(getter, 'a', getter);
	/******/ 		return getter;
	/******/ 	};
	
	/******/ 	// Object.prototype.hasOwnProperty.call
	/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
	
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(__webpack_require__.s = 38);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (binding) */ __webpack_require__.d(exports, "i", function() { return connected; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return created; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return name; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "g", function() { return ctorCreateInitProps; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "e", function() { return ctorObservedAttributes; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "f", function() { return ctorProps; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "d", function() { return ctorPropsMap; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "l", function() { return props; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "m", function() { return ref; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "c", function() { return renderer; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "j", function() { return rendering; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "h", function() { return rendererDebounced; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "k", function() { return updated; });
	var connected = '____skate_connected';
	var created = '____skate_created';
	
	// DEPRECATED
	//
	// This is the only "symbol" that must stay a string. This is because it is
	// relied upon across several versions. We should remove it, but ensure that
	// it's considered a breaking change that whatever version removes it cannot
	// be passed to vdom functions as tag names.
	var name = '____skate_name';
	
	// Used on the Constructor
	var ctorCreateInitProps = '____skate_ctor_createInitProps';
	var ctorObservedAttributes = '____skate_ctor_observedAttributes';
	var ctorProps = '____skate_ctor_props';
	var ctorPropsMap = '____skate_ctor_propsMap';
	
	// Used on the Element
	var props = '____skate_props';
	var ref = '____skate_ref';
	var renderer = '____skate_renderer';
	var rendering = '____skate_rendering';
	var rendererDebounced = '____skate_rendererDebounced';
	var updated = '____skate_updated';
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__is_type__ = __webpack_require__(2);
	/* harmony export (immutable) */ exports["a"] = getPropNamesAndSymbols;
	
	/**
	 * Returns array of owned property names and symbols for the given object
	 */
	function getPropNamesAndSymbols() {
	  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  var listOfKeys = Object.getOwnPropertyNames(obj);
	  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__is_type__["c" /* isFunction */])(Object.getOwnPropertySymbols) ? listOfKeys.concat(Object.getOwnPropertySymbols(obj)) : listOfKeys;
	}
	
	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (binding) */ __webpack_require__.d(exports, "c", function() { return isFunction; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "b", function() { return isObject; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "e", function() { return isString; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "d", function() { return isSymbol; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "a", function() { return isUndefined; });
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var isFunction = function isFunction(val) {
	  return typeof val === 'function';
	};
	var isObject = function isObject(val) {
	  return (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object' && val !== null;
	};
	var isString = function isString(val) {
	  return typeof val === 'string';
	};
	var isSymbol = function isSymbol(val) {
	  return (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'symbol';
	};
	var isUndefined = function isUndefined(val) {
	  return typeof val === 'undefined';
	};
	
	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* WEBPACK VAR INJECTION */(function(global) {/* harmony default export */ exports["a"] = typeof window === 'undefined' ? global : window;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(37)))
	
	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__get_prop_names_and_symbols__ = __webpack_require__(1);
	
	
	// We are not using Object.assign if it is defined since it will cause problems when Symbol is polyfilled.
	// Apparently Object.assign (or any polyfill for this method) does not copy non-native Symbols.
	/* harmony default export */ exports["a"] = function (obj) {
	  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    args[_key - 1] = arguments[_key];
	  }
	
	  args.forEach(function (arg) {
	    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__get_prop_names_and_symbols__["a" /* default */])(arg).forEach(function (nameOrSymbol) {
	      return obj[nameOrSymbol] = arg[nameOrSymbol];
	    });
	  }); // eslint-disable-line no-return-assign
	  return obj;
	};
	
	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony default export */ exports["a"] = function (element) {
	  var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
	
	  var data = element.__SKATE_DATA || (element.__SKATE_DATA = {});
	  return namespace && (data[namespace] || (data[namespace] = {})) || data; // eslint-disable-line no-mixed-operators
	};
	
	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony default export */ exports["a"] = function (val) {
	  return typeof val === 'undefined' || val === null;
	};
	
	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_symbols__ = __webpack_require__(0);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_assign__ = __webpack_require__(4);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_get_prop_names_and_symbols__ = __webpack_require__(1);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_get_props_map__ = __webpack_require__(10);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_is_type__ = __webpack_require__(2);
	
	
	
	
	
	
	function get(elem) {
	  var props = {};
	
	  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_get_prop_names_and_symbols__["a" /* default */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__util_get_props_map__["a" /* default */])(elem.constructor)).forEach(function (nameOrSymbol) {
	    props[nameOrSymbol] = elem[nameOrSymbol];
	  });
	
	  return props;
	}
	
	function set(elem, newProps) {
	  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_assign__["a" /* default */])(elem, newProps);
	  if (elem[__WEBPACK_IMPORTED_MODULE_0__util_symbols__["c" /* renderer */]]) {
	    elem[__WEBPACK_IMPORTED_MODULE_0__util_symbols__["c" /* renderer */]]();
	  }
	}
	
	/* harmony default export */ exports["a"] = function (elem, newProps) {
	  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util_is_type__["a" /* isUndefined */])(newProps) ? get(elem) : set(elem, newProps);
	};
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incremental_dom__ = __webpack_require__(14);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incremental_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_symbols__ = __webpack_require__(0);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_assign__ = __webpack_require__(4);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_create_symbol__ = __webpack_require__(25);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_data__ = __webpack_require__(5);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_debounce__ = __webpack_require__(27);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_attributes_manager__ = __webpack_require__(9);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__util_get_own_property_descriptors__ = __webpack_require__(31);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__util_get_prop_names_and_symbols__ = __webpack_require__(1);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__util_get_props_map__ = __webpack_require__(10);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__props__ = __webpack_require__(7);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__lifecycle_props_init__ = __webpack_require__(23);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__util_is_type__ = __webpack_require__(2);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__polyfills_object_is__ = __webpack_require__(24);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__util_set_ctor_native_property__ = __webpack_require__(11);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__util_root__ = __webpack_require__(3);
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	var HTMLElement = __WEBPACK_IMPORTED_MODULE_15__util_root__["a" /* default */].HTMLElement || function () {
	  function _class() {
	    _classCallCheck(this, _class);
	  }
	
	  return _class;
	}();
	var _prevName = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__util_create_symbol__["a" /* default */])('prevName');
	var _prevOldValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__util_create_symbol__["a" /* default */])('prevOldValue');
	var _prevNewValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__util_create_symbol__["a" /* default */])('prevNewValue');
	
	// TEMPORARY: Once deprecations in this file are removed, this can be removed.
	function deprecated(elem, oldUsage, newUsage) {
	  if (process.env.NODE_ENV !== 'production') {
	    var ownerName = elem.localName ? elem.localName : String(elem);
	    console.warn(ownerName + ' ' + oldUsage + ' is deprecated. Use ' + newUsage + '.');
	  }
	}
	
	function preventDoubleCalling(elem, name, oldValue, newValue) {
	  return name === elem[_prevName] && oldValue === elem[_prevOldValue] && newValue === elem[_prevNewValue];
	}
	
	// TODO remove when not catering to Safari < 10.
	function createNativePropertyDescriptors(Ctor) {
	  var propDefs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__util_get_props_map__["a" /* default */])(Ctor);
	  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__util_get_prop_names_and_symbols__["a" /* default */])(propDefs).reduce(function (propDescriptors, nameOrSymbol) {
	    propDescriptors[nameOrSymbol] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11__lifecycle_props_init__["a" /* createNativePropertyDescriptor */])(propDefs[nameOrSymbol]);
	    return propDescriptors;
	  }, {});
	}
	
	// TODO refactor when not catering to Safari < 10.
	//
	// We should be able to simplify this where all we do is Object.defineProperty().
	function createInitProps(Ctor) {
	  var propDescriptors = createNativePropertyDescriptors(Ctor);
	
	  return function (elem) {
	    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__util_get_prop_names_and_symbols__["a" /* default */])(propDescriptors).forEach(function (nameOrSymbol) {
	      var propDescriptor = propDescriptors[nameOrSymbol];
	      propDescriptor.beforeDefineProperty(elem);
	
	      // We check here before defining to see if the prop was specified prior
	      // to upgrading.
	      var hasPropBeforeUpgrading = nameOrSymbol in elem;
	
	      // This is saved prior to defining so that we can set it after it it was
	      // defined prior to upgrading. We don't want to invoke the getter if we
	      // don't need to, so we only get the value if we need to re-sync.
	      var valueBeforeUpgrading = hasPropBeforeUpgrading && elem[nameOrSymbol];
	
	      // https://bugs.webkit.org/show_bug.cgi?id=49739
	      //
	      // When Webkit fixes that bug so that native property accessors can be
	      // retrieved, we can move defining the property to the prototype and away
	      // from having to do if for every instance as all other browsers support
	      // this.
	      Object.defineProperty(elem, nameOrSymbol, propDescriptor);
	
	      // DEPRECATED
	      //
	      // We'll be removing get / set callbacks on properties. Use the
	      // updatedCallback() instead.
	      //
	      // We re-set the prop if it was specified prior to upgrading because we
	      // need to ensure set() is triggered both in polyfilled environments and
	      // in native where the definition may be registerd after elements it
	      // represents have already been created.
	      if (hasPropBeforeUpgrading) {
	        elem[nameOrSymbol] = valueBeforeUpgrading;
	      }
	    });
	  };
	}
	
	var _class2 = function (_HTMLElement) {
	  _inherits(_class2, _HTMLElement);
	
	  _createClass(_class2, null, [{
	    key: 'observedAttributes',
	
	
	    /**
	     * Returns unique attribute names configured with props and
	     * those set on the Component constructor if any
	     */
	    get: function get() {
	      var attrsOnCtor = this.hasOwnProperty(__WEBPACK_IMPORTED_MODULE_1__util_symbols__["e" /* ctorObservedAttributes */]) ? this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["e" /* ctorObservedAttributes */]] : [];
	      var propDefs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__util_get_props_map__["a" /* default */])(this);
	
	      // Use Object.keys to skips symbol props since they have no linked attributes
	      var attrsFromLinkedProps = Object.keys(propDefs).map(function (propName) {
	        return propDefs[propName].attrSource;
	      }).filter(Boolean);
	
	      var all = attrsFromLinkedProps.concat(attrsOnCtor).concat(_get(_class2.__proto__ || Object.getPrototypeOf(_class2), 'observedAttributes', this));
	      return all.filter(function (item, index) {
	        return all.indexOf(item) === index;
	      });
	    },
	    set: function set(value) {
	      value = Array.isArray(value) ? value : [];
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_14__util_set_ctor_native_property__["a" /* default */])(this, 'observedAttributes', value);
	    }
	
	    // Returns superclass props overwritten with this Component props
	
	  }, {
	    key: 'props',
	    get: function get() {
	      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_assign__["a" /* default */])({}, _get(_class2.__proto__ || Object.getPrototypeOf(_class2), 'props', this), this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["f" /* ctorProps */]]);
	    },
	    set: function set(value) {
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_14__util_set_ctor_native_property__["a" /* default */])(this, __WEBPACK_IMPORTED_MODULE_1__util_symbols__["f" /* ctorProps */], value);
	    }
	
	    // Passing args is designed to work with document-register-element. It's not
	    // necessary for the webcomponents/custom-element polyfill.
	
	  }]);
	
	  function _class2() {
	    var _ref;
	
	    _classCallCheck(this, _class2);
	
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    var _this = _possibleConstructorReturn(this, (_ref = _class2.__proto__ || Object.getPrototypeOf(_class2)).call.apply(_ref, [this].concat(args)));
	
	    var constructor = _this.constructor;
	
	    // Used for the ready() function so it knows when it can call its callback.
	
	    _this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["b" /* created */]] = true;
	
	    // TODO refactor to not cater to Safari < 10. This means we can depend on
	    // built-in property descriptors.
	    // Must be defined on constructor and not from a superclass
	    if (!constructor.hasOwnProperty(__WEBPACK_IMPORTED_MODULE_1__util_symbols__["g" /* ctorCreateInitProps */])) {
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_14__util_set_ctor_native_property__["a" /* default */])(constructor, __WEBPACK_IMPORTED_MODULE_1__util_symbols__["g" /* ctorCreateInitProps */], createInitProps(constructor));
	    }
	
	    // Set up a renderer that is debounced for property sets to call directly.
	    _this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["h" /* rendererDebounced */]] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util_debounce__["a" /* default */])(_this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["c" /* renderer */]].bind(_this));
	
	    // Set up property lifecycle.
	    var propDefsCount = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__util_get_prop_names_and_symbols__["a" /* default */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__util_get_props_map__["a" /* default */])(constructor)).length;
	    if (propDefsCount && constructor[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["g" /* ctorCreateInitProps */]]) {
	      constructor[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["g" /* ctorCreateInitProps */]](_this);
	    }
	
	    // DEPRECATED
	    //
	    // static render()
	    // Note that renderCallback is an optional method!
	    if (!_this.renderCallback && constructor.render) {
	      deprecated(_this, 'static render', 'renderCallback');
	      _this.renderCallback = constructor.render.bind(constructor, _this);
	    }
	
	    // DEPRECATED
	    //
	    // static created()
	    //
	    // Props should be set up before calling this.
	    var created = constructor.created;
	
	    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__util_is_type__["c" /* isFunction */])(created)) {
	      deprecated(_this, 'static created', 'constructor');
	      created(_this);
	    }
	
	    // DEPRECATED
	    //
	    // Feature has rarely been used.
	    //
	    // Created should be set before invoking the ready listeners.
	    var elemData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util_data__["a" /* default */])(_this);
	    var readyCallbacks = elemData.readyCallbacks;
	    if (readyCallbacks) {
	      readyCallbacks.forEach(function (cb) {
	        return cb(_this);
	      });
	      delete elemData.readyCallbacks;
	    }
	    return _this;
	  }
	
	  // Custom Elements v1
	
	
	  _createClass(_class2, [{
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      // Reflect attributes pending values
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util_attributes_manager__["a" /* default */])(this).resumeAttributesUpdates();
	
	      // Used to check whether or not the component can render.
	      this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["i" /* connected */]] = true;
	
	      // Render!
	      this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["h" /* rendererDebounced */]]();
	
	      // DEPRECATED
	      //
	      // static attached()
	      var attached = this.constructor.attached;
	
	      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__util_is_type__["c" /* isFunction */])(attached)) {
	        deprecated(this, 'static attached', 'connectedCallback');
	        attached(this);
	      }
	
	      // DEPRECATED
	      //
	      // We can remove this once all browsers support :defined.
	      this.setAttribute('defined', '');
	    }
	
	    // Custom Elements v1
	
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      // Suspend updating attributes until re-connected
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util_attributes_manager__["a" /* default */])(this).suspendAttributesUpdates();
	
	      // Ensures the component can't be rendered while disconnected.
	      this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["i" /* connected */]] = false;
	
	      // DEPRECATED
	      //
	      // static detached()
	      var detached = this.constructor.detached;
	
	      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__util_is_type__["c" /* isFunction */])(detached)) {
	        deprecated(this, 'static detached', 'disconnectedCallback');
	        detached(this);
	      }
	    }
	
	    // Custom Elements v1
	
	  }, {
	    key: 'attributeChangedCallback',
	    value: function attributeChangedCallback(name, oldValue, newValue) {
	      // Polyfill calls this twice.
	      if (preventDoubleCalling(this, name, oldValue, newValue)) {
	        return;
	      }
	
	      // Set data so we can prevent double calling if the polyfill.
	      this[_prevName] = name;
	      this[_prevOldValue] = oldValue;
	      this[_prevNewValue] = newValue;
	
	      var propNameOrSymbol = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util_data__["a" /* default */])(this, 'attrSourceLinks')[name];
	      if (propNameOrSymbol) {
	        var changedExternally = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util_attributes_manager__["a" /* default */])(this).onAttributeChanged(name, newValue);
	        if (changedExternally) {
	          // Sync up the property.
	          var propDef = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__util_get_props_map__["a" /* default */])(this.constructor)[propNameOrSymbol];
	          var newPropVal = newValue !== null && propDef.deserialize ? propDef.deserialize(newValue) : newValue;
	
	          var propData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util_data__["a" /* default */])(this, 'props')[propNameOrSymbol];
	          propData.settingPropFromAttrSource = true;
	          this[propNameOrSymbol] = newPropVal;
	          propData.settingPropFromAttrSource = false;
	        }
	      }
	
	      // DEPRECATED
	      //
	      // static attributeChanged()
	      var attributeChanged = this.constructor.attributeChanged;
	
	      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__util_is_type__["c" /* isFunction */])(attributeChanged)) {
	        deprecated(this, 'static attributeChanged', 'attributeChangedCallback');
	        attributeChanged(this, { name: name, newValue: newValue, oldValue: oldValue });
	      }
	    }
	
	    // Skate
	
	  }, {
	    key: 'updatedCallback',
	    value: function updatedCallback(prevProps) {
	      if (this.constructor.hasOwnProperty('updated')) {
	        deprecated(this, 'static updated', 'updatedCallback');
	      }
	      return this.constructor.updated(this, prevProps);
	    }
	
	    // Skate
	
	  }, {
	    key: 'renderedCallback',
	    value: function renderedCallback() {
	      if (this.constructor.hasOwnProperty('rendered')) {
	        deprecated(this, 'static rendered', 'renderedCallback');
	      }
	      return this.constructor.rendered(this);
	    }
	
	    // Skate
	    //
	    // Maps to the static renderer() callback. That logic should be moved here
	    // when that is finally removed.
	    // TODO: finalize how to support different rendering strategies.
	
	  }, {
	    key: 'rendererCallback',
	    value: function rendererCallback() {
	      // TODO: cannot move code here because tests expects renderer function to still exist on constructor!
	      return this.constructor.renderer(this);
	    }
	
	    // Skate
	    // @internal
	    // Invokes the complete render lifecycle.
	
	  }, {
	    key: __WEBPACK_IMPORTED_MODULE_1__util_symbols__["c" /* renderer */],
	    value: function value() {
	      if (this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["j" /* rendering */]] || !this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["i" /* connected */]]) {
	        return;
	      }
	
	      // Flag as rendering. This prevents anything from trying to render - or
	      // queueing a render - while there is a pending render.
	      this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["j" /* rendering */]] = true;
	      if (this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["k" /* updated */]]() && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__util_is_type__["c" /* isFunction */])(this.renderCallback)) {
	        this.rendererCallback();
	        this.renderedCallback();
	      }
	
	      this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["j" /* rendering */]] = false;
	    }
	
	    // Skate
	    // @internal
	    // Calls the updatedCallback() with previous props.
	
	  }, {
	    key: __WEBPACK_IMPORTED_MODULE_1__util_symbols__["k" /* updated */],
	    value: function value() {
	      var prevProps = this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["l" /* props */]];
	      this[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["l" /* props */]] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_10__props__["a" /* default */])(this);
	      return this.updatedCallback(prevProps);
	    }
	
	    // Skate
	
	  }], [{
	    key: 'extend',
	    value: function extend() {
	      var definition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	      var Base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this;
	
	      // Create class for the user.
	      var Ctor = function (_Base) {
	        _inherits(Ctor, _Base);
	
	        function Ctor() {
	          _classCallCheck(this, Ctor);
	
	          return _possibleConstructorReturn(this, (Ctor.__proto__ || Object.getPrototypeOf(Ctor)).apply(this, arguments));
	        }
	
	        return Ctor;
	      }(Base);
	
	      // For inheriting from the object literal.
	
	
	      var opts = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__util_get_own_property_descriptors__["a" /* default */])(definition);
	      var prot = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__util_get_own_property_descriptors__["a" /* default */])(definition.prototype);
	
	      // Prototype is non configurable (but is writable).
	      delete opts.prototype;
	
	      // Pass on static and instance members from the definition.
	      Object.defineProperties(Ctor, opts);
	      Object.defineProperties(Ctor.prototype, prot);
	
	      return Ctor;
	    }
	
	    // Skate
	    //
	    // DEPRECATED
	    //
	    // Stubbed in case any subclasses are calling it.
	
	  }, {
	    key: 'rendered',
	    value: function rendered() {}
	
	    // Skate
	    //
	    // DEPRECATED
	    //
	    // Move this to rendererCallback() before removing.
	
	  }, {
	    key: 'renderer',
	    value: function renderer(elem) {
	      if (!elem.shadowRoot) {
	        elem.attachShadow({ mode: 'open' });
	      }
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["patchInner"])(elem.shadowRoot, function () {
	        var possibleFn = elem.renderCallback(elem);
	        if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__util_is_type__["c" /* isFunction */])(possibleFn)) {
	          possibleFn();
	        } else if (Array.isArray(possibleFn)) {
	          possibleFn.forEach(function (fn) {
	            if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__util_is_type__["c" /* isFunction */])(fn)) {
	              fn();
	            }
	          });
	        }
	      });
	    }
	
	    // Skate
	    //
	    // DEPRECATED
	    //
	    // Move this to updatedCallback() before removing.
	
	  }, {
	    key: 'updated',
	    value: function updated(elem, previousProps) {
	      // The 'previousProps' will be undefined if it is the initial render.
	      if (!previousProps) {
	        return true;
	      }
	
	      // The 'previousProps' will always contain all of the keys.
	      //
	      // Use classic loop because:
	      // 'for ... in' skips symbols and 'for ... of' is not working yet with IE!?
	      // for (let nameOrSymbol of getPropNamesAndSymbols(previousProps)) {
	      var namesAndSymbols = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__util_get_prop_names_and_symbols__["a" /* default */])(previousProps);
	      for (var i = 0; i < namesAndSymbols.length; i++) {
	        var nameOrSymbol = namesAndSymbols[i];
	
	        // With Object.is NaN is equal to NaN
	        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13__polyfills_object_is__["a" /* default */])(previousProps[nameOrSymbol], elem[nameOrSymbol])) {
	          return true;
	        }
	      }
	
	      return false;
	    }
	  }]);
	
	  return _class2;
	}(HTMLElement);
	
	_class2.is = '';
	/* harmony default export */ exports["a"] = _class2;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))
	
	/***/ },
	/* 9 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__to_null_or_string__ = __webpack_require__(12);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__is_type__ = __webpack_require__(2);
	/* harmony export (immutable) */ exports["a"] = getAttrMgr;
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	
	
	
	/**
	 * @internal
	 * Attributes Manager
	 *
	 * Postpones attributes updates until when connected.
	 */
	
	var AttributesManager = function () {
	  function AttributesManager(elem) {
	    _classCallCheck(this, AttributesManager);
	
	    this.elem = elem;
	    this.connected = false;
	    this.pendingValues = {};
	    this.lastSetValues = {};
	  }
	
	  /**
	   * Called from disconnectedCallback
	   */
	
	
	  _createClass(AttributesManager, [{
	    key: 'suspendAttributesUpdates',
	    value: function suspendAttributesUpdates() {
	      this.connected = false;
	    }
	
	    /**
	     * Called from connectedCallback
	     */
	
	  }, {
	    key: 'resumeAttributesUpdates',
	    value: function resumeAttributesUpdates() {
	      var _this = this;
	
	      this.connected = true;
	      var names = Object.keys(this.pendingValues);
	      names.forEach(function (name) {
	        var value = _this.pendingValues[name];
	        // Skip if already cleared
	        if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__is_type__["a" /* isUndefined */])(value)) {
	          delete _this.pendingValues[name];
	          _this._syncAttrValue(name, value);
	        }
	      });
	    }
	
	    /**
	     * Returns true if the value is different from the one set internally
	     * using setAttrValue()
	     */
	
	  }, {
	    key: 'onAttributeChanged',
	    value: function onAttributeChanged(name, value) {
	      value = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__to_null_or_string__["a" /* default */])(value);
	
	      // A new attribute value voids the pending one
	      this._clearPendingValue(name);
	
	      var changed = this.lastSetValues[name] !== value;
	      this.lastSetValues[name] = value;
	      return changed;
	    }
	
	    /**
	     * Updates or removes the attribute if value === null.
	     *
	     * When the component is not connected the value is saved and
	     * the attribute is only updated when the component is re-connected.
	     */
	
	  }, {
	    key: 'setAttrValue',
	    value: function setAttrValue(name, value) {
	      value = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__to_null_or_string__["a" /* default */])(value);
	
	      this.lastSetValues[name] = value;
	
	      if (this.connected) {
	        this._clearPendingValue(name);
	        this._syncAttrValue(name, value);
	      } else {
	        this.pendingValues[name] = value;
	      }
	    }
	  }, {
	    key: '_syncAttrValue',
	    value: function _syncAttrValue(name, value) {
	      var currAttrValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__to_null_or_string__["a" /* default */])(this.elem.getAttribute(name));
	      if (value !== currAttrValue) {
	        if (value === null) {
	          this.elem.removeAttribute(name);
	        } else {
	          this.elem.setAttribute(name, value);
	        }
	      }
	    }
	  }, {
	    key: '_clearPendingValue',
	    value: function _clearPendingValue(name) {
	      if (name in this.pendingValues) {
	        delete this.pendingValues[name];
	      }
	    }
	  }]);
	
	  return AttributesManager;
	}();
	
	// Only used by getAttrMgr
	
	
	var $attributesMgr = '____skate_attributesMgr';
	
	/**
	 * @internal
	 * Returns attribute manager instance for the given Component
	 */
	function getAttrMgr(elem) {
	  var mgr = elem[$attributesMgr];
	  if (!mgr) {
	    mgr = new AttributesManager(elem);
	    elem[$attributesMgr] = mgr;
	  }
	  return mgr;
	}
	
	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__symbols__ = __webpack_require__(0);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__get_prop_names_and_symbols__ = __webpack_require__(1);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__prop_definition__ = __webpack_require__(35);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__set_ctor_native_property__ = __webpack_require__(11);
	/* harmony export (immutable) */ exports["a"] = getPropsMap;
	
	
	
	
	
	/**
	 * Memoizes a map of PropDefinition for the given component class.
	 * Keys in the map are the properties name which can a string or a symbol.
	 *
	 * The map is created from the result of: static get props
	 */
	function getPropsMap(Ctor) {
	  // Must be defined on constructor and not from a superclass
	  if (!Ctor.hasOwnProperty(__WEBPACK_IMPORTED_MODULE_0__symbols__["d" /* ctorPropsMap */])) {
	    (function () {
	      var props = Ctor.props || {};
	
	      var propsMap = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__get_prop_names_and_symbols__["a" /* default */])(props).reduce(function (result, nameOrSymbol) {
	        result[nameOrSymbol] = new __WEBPACK_IMPORTED_MODULE_2__prop_definition__["a" /* default */](nameOrSymbol, props[nameOrSymbol]);
	        return result;
	      }, {});
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__set_ctor_native_property__["a" /* default */])(Ctor, __WEBPACK_IMPORTED_MODULE_0__symbols__["d" /* ctorPropsMap */], propsMap);
	    })();
	  }
	
	  return Ctor[__WEBPACK_IMPORTED_MODULE_0__symbols__["d" /* ctorPropsMap */]];
	}
	
	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (immutable) */ exports["a"] = setCtorNativeProperty;
	/**
	 * This is needed to avoid IE11 "stack size errors" when creating
	 * a new property on the constructor of an HTMLElement
	 */
	function setCtorNativeProperty(Ctor, propName, value) {
	  Object.defineProperty(Ctor, propName, { configurable: true, value: value });
	}
	
	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__empty__ = __webpack_require__(6);
	
	/**
	 * Attributes value can only be null or string;
	 */
	var toNullOrString = function toNullOrString(val) {
	  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__empty__["a" /* default */])(val) ? null : String(val);
	};
	
	/* harmony default export */ exports["a"] = toNullOrString;
	
	/***/ },
	/* 13 */
	/***/ function(module, exports) {
	
	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };
	
	
	/***/ },
	/* 14 */
	/***/ function(module, exports) {
	
	module.exports = __WEBPACK_EXTERNAL_MODULE_14__;
	
	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__api_prop__ = __webpack_require__(19);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__api_symbols__ = __webpack_require__(21);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__api_vdom__ = __webpack_require__(22);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__api_component__ = __webpack_require__(8);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__api_define__ = __webpack_require__(16);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__api_emit__ = __webpack_require__(17);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__api_link__ = __webpack_require__(18);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__api_props__ = __webpack_require__(7);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__api_ready__ = __webpack_require__(20);
	/* harmony reexport (module object) */ __webpack_require__.d(exports, "vdom", function() { return __WEBPACK_IMPORTED_MODULE_2__api_vdom__; });
	/* harmony reexport (binding) */ __webpack_require__.d(exports, "Component", function() { return __WEBPACK_IMPORTED_MODULE_3__api_component__["a"]; });
	/* harmony reexport (binding) */ __webpack_require__.d(exports, "define", function() { return __WEBPACK_IMPORTED_MODULE_4__api_define__["a"]; });
	/* harmony reexport (binding) */ __webpack_require__.d(exports, "emit", function() { return __WEBPACK_IMPORTED_MODULE_5__api_emit__["a"]; });
	/* harmony reexport (binding) */ __webpack_require__.d(exports, "link", function() { return __WEBPACK_IMPORTED_MODULE_6__api_link__["a"]; });
	/* harmony reexport (module object) */ __webpack_require__.d(exports, "prop", function() { return __WEBPACK_IMPORTED_MODULE_0__api_prop__; });
	/* harmony reexport (binding) */ __webpack_require__.d(exports, "props", function() { return __WEBPACK_IMPORTED_MODULE_7__api_props__["a"]; });
	/* harmony reexport (binding) */ __webpack_require__.d(exports, "ready", function() { return __WEBPACK_IMPORTED_MODULE_8__api_ready__["a"]; });
	/* harmony reexport (module object) */ __webpack_require__.d(exports, "symbols", function() { return __WEBPACK_IMPORTED_MODULE_1__api_symbols__; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "h", function() { return h; });
	
	
	
	
	
	
	
	
	
	
	var h = __WEBPACK_IMPORTED_MODULE_2__api_vdom__["builder"]();
	
	
	
	/***/ },
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__component__ = __webpack_require__(8);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_unique_id__ = __webpack_require__(36);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_root__ = __webpack_require__(3);
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	
	
	
	
	/* harmony default export */ exports["a"] = function () {
	  var customElements = __WEBPACK_IMPORTED_MODULE_2__util_root__["a" /* default */].customElements,
	      HTMLElement = __WEBPACK_IMPORTED_MODULE_2__util_root__["a" /* default */].HTMLElement;
	
	  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	    args[_key] = arguments[_key];
	  }
	
	  var name = args[0],
	      Ctor = args[1];
	
	
	  if (!customElements) {
	    throw new Error('Skate requires native custom element support or a polyfill.');
	  }
	
	  // DEPRECATED remove when removing the "name" argument.
	  if (process.env.NODE_ENV !== 'production' && args.length === 2) {
	    console.warn('The "name" argument to define() is deprecated. Please define a `static is` property on the constructor instead.');
	  }
	
	  // DEPRECATED remove when removing the "name" argument.
	  if (args.length === 1) {
	    Ctor = name;
	    name = null;
	  }
	
	  // DEPRECATED Object literals.
	  if ((typeof Ctor === 'undefined' ? 'undefined' : _typeof(Ctor)) === 'object') {
	    Ctor = __WEBPACK_IMPORTED_MODULE_0__component__["a" /* default */].extend(Ctor);
	  }
	
	  // Ensure a custom element is passed.
	  if (!(Ctor.prototype instanceof HTMLElement)) {
	    throw new Error('You must provide a constructor that extends HTMLElement to define().');
	  }
	
	  // DEPRECATED two arguments
	  if (args.length === 2) {
	    customElements.define(customElements.get(name) ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_unique_id__["a" /* default */])(name) : name, Ctor);
	  } else {
	    // We must use hasOwnProperty() because we want to know if it was specified
	    // directly on this class, not subclasses, as we don't want to inherit tag
	    // names from subclasses.
	    if (!Ctor.hasOwnProperty('is')) {
	      // If we used defineProperty() then the consumer must also use it and
	      // cannot use property initialisers. Instead we just set it so they can
	      // use whatever method of overridding that they want.
	      Ctor.is = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_unique_id__["a" /* default */])();
	    }
	    customElements.define(Ctor.is, Ctor);
	  }
	
	  // The spec doesn't return but this allows for a simpler, more concise API.
	  return Ctor;
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(13)))
	
	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_root__ = __webpack_require__(3);
	
	
	var Event = function (TheEvent) {
	  if (TheEvent) {
	    try {
	      new TheEvent('emit-init'); // eslint-disable-line no-new
	    } catch (e) {
	      return undefined;
	    }
	  }
	  return TheEvent;
	}(__WEBPACK_IMPORTED_MODULE_0__util_root__["a" /* default */].Event);
	
	function createCustomEvent(name) {
	  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  var detail = opts.detail;
	
	  delete opts.detail;
	
	  var e = void 0;
	  if (Event) {
	    e = new Event(name, opts);
	    Object.defineProperty(e, 'detail', { value: detail });
	  } else {
	    e = document.createEvent('CustomEvent');
	    Object.defineProperty(e, 'composed', { value: opts.composed });
	    e.initCustomEvent(name, opts.bubbles, opts.cancelable, detail);
	  }
	  return e;
	}
	
	/* harmony default export */ exports["a"] = function (elem, name) {
	  var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	  if (opts.bubbles === undefined) {
	    opts.bubbles = true;
	  }
	  if (opts.cancelable === undefined) {
	    opts.cancelable = true;
	  }
	  if (opts.composed === undefined) {
	    opts.composed = true;
	  }
	  return elem.dispatchEvent(createCustomEvent(name, opts));
	};
	
	/***/ },
	/* 18 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__props__ = __webpack_require__(7);
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	
	
	function getValue(elem) {
	  var type = elem.type;
	  if (type === 'checkbox' || type === 'radio') {
	    return elem.checked ? elem.value || true : false;
	  }
	  return elem.value;
	}
	
	/* harmony default export */ exports["a"] = function (elem, target) {
	  return function (e) {
	    // We fallback to checking the composed path. Unfortunately this behaviour
	    // is difficult to impossible to reproduce as it seems to be a possible
	    // quirk in the shadydom polyfill that incorrectly returns null for the
	    // target but has the target as the first point in the path.
	    // TODO revisit once all browsers have native support.
	    var localTarget = e.target || e.composedPath()[0];
	    var value = getValue(localTarget);
	    var localTargetName = target || localTarget.name || 'value';
	
	    if (localTargetName.indexOf('.') > -1) {
	      var parts = localTargetName.split('.');
	      var firstPart = parts[0];
	      var propName = parts.pop();
	      var obj = parts.reduce(function (prev, curr) {
	        return prev && prev[curr];
	      }, elem);
	
	      obj[propName || e.target.name] = value;
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__props__["a" /* default */])(elem, _defineProperty({}, firstPart, elem[firstPart]));
	    } else {
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__props__["a" /* default */])(elem, _defineProperty({}, localTargetName, value));
	    }
	  };
	};
	
	/***/ },
	/* 19 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_assign__ = __webpack_require__(4);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_empty__ = __webpack_require__(6);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_to_null_or_string__ = __webpack_require__(12);
	/* harmony export (immutable) */ exports["create"] = create;
	/* harmony export (binding) */ __webpack_require__.d(exports, "array", function() { return array; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "boolean", function() { return boolean; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "number", function() { return number; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "string", function() { return string; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "object", function() { return object; });
	
	
	
	
	function create(def) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    args.unshift({}, def);
	    return __WEBPACK_IMPORTED_MODULE_0__util_assign__["a" /* default */].apply(undefined, args);
	  };
	}
	
	var parseIfNotEmpty = function parseIfNotEmpty(val) {
	  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_empty__["a" /* default */])(val) ? null : JSON.parse(val);
	};
	
	var array = create({
	  coerce: function coerce(val) {
	    return Array.isArray(val) ? val : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_empty__["a" /* default */])(val) ? null : [val];
	  },
	  default: function _default() {
	    return [];
	  },
	  deserialize: parseIfNotEmpty,
	  serialize: JSON.stringify
	});
	
	var boolean = create({
	  coerce: function coerce(val) {
	    return !!val;
	  },
	  default: false,
	  // TODO: 'false' string must deserialize to false for angular 1.x to work
	  // This breaks one existing test.
	  // deserialize: val => !(val === null || val === 'false'),
	  deserialize: function deserialize(val) {
	    return !(val === null);
	  },
	  serialize: function serialize(val) {
	    return val ? '' : null;
	  }
	});
	
	// defaults empty to 0 and allows NaN
	var zeroIfEmptyOrNumberIncludesNaN = function zeroIfEmptyOrNumberIncludesNaN(val) {
	  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_empty__["a" /* default */])(val) ? 0 : Number(val);
	};
	
	var number = create({
	  default: 0,
	  coerce: zeroIfEmptyOrNumberIncludesNaN,
	  deserialize: zeroIfEmptyOrNumberIncludesNaN,
	  serialize: __WEBPACK_IMPORTED_MODULE_2__util_to_null_or_string__["a" /* default */]
	});
	
	var string = create({
	  default: '',
	  coerce: __WEBPACK_IMPORTED_MODULE_2__util_to_null_or_string__["a" /* default */],
	  deserialize: __WEBPACK_IMPORTED_MODULE_2__util_to_null_or_string__["a" /* default */],
	  serialize: __WEBPACK_IMPORTED_MODULE_2__util_to_null_or_string__["a" /* default */]
	});
	
	var object = create({
	  default: function _default() {
	    return {};
	  },
	  deserialize: parseIfNotEmpty,
	  serialize: JSON.stringify
	});
	
	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_symbols__ = __webpack_require__(0);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_data__ = __webpack_require__(5);
	
	
	
	/* harmony default export */ exports["a"] = function (elem, done) {
	  var info = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_data__["a" /* default */])(elem);
	  if (elem[__WEBPACK_IMPORTED_MODULE_0__util_symbols__["b" /* created */]]) {
	    done(elem);
	  } else if (info.readyCallbacks) {
	    info.readyCallbacks.push(done);
	  } else {
	    info.readyCallbacks = [done];
	  }
	};
	
	/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_symbols__ = __webpack_require__(0);
	Object.defineProperty(exports, "__esModule", { value: true });
	/* harmony reexport (binding) */ __webpack_require__.d(exports, "name", function() { return __WEBPACK_IMPORTED_MODULE_0__util_symbols__["a"]; });
	// DEPRECTAED
	//
	// We should not be relying on internals for symbols as this creates version
	// coupling. We will move forward with platform agnostic ways of doing this.
	
	
	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incremental_dom__ = __webpack_require__(14);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_incremental_dom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_symbols__ = __webpack_require__(0);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_prop_context__ = __webpack_require__(34);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_root__ = __webpack_require__(3);
	/* harmony export (immutable) */ exports["element"] = element;
	/* harmony export (immutable) */ exports["builder"] = builder;
	/* harmony export (binding) */ __webpack_require__.d(exports, "attr", function() { return newAttr; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "elementClose", function() { return newElementClose; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "elementOpen", function() { return newElementOpen; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "elementOpenEnd", function() { return newElementOpenEnd; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "elementOpenStart", function() { return newElementOpenStart; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "elementVoid", function() { return newElementVoid; });
	/* harmony export (binding) */ __webpack_require__.d(exports, "text", function() { return newText; });
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	/* eslint no-plusplus: 0 */
	
	
	
	
	
	
	var customElements = __WEBPACK_IMPORTED_MODULE_3__util_root__["a" /* default */].customElements,
	    HTMLElement = __WEBPACK_IMPORTED_MODULE_3__util_root__["a" /* default */].HTMLElement;
	
	var applyDefault = __WEBPACK_IMPORTED_MODULE_0_incremental_dom__["attributes"][__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["symbols"].default];
	
	// A stack of children that corresponds to the current function helper being
	// executed.
	var stackChren = [];
	
	var $skip = '__skip';
	var $currentEventHandlers = '__events';
	var $stackCurrentHelperProps = '__props';
	
	// The current function helper in the stack.
	var stackCurrentHelper = void 0;
	
	// This is used for the Incremental DOM overrides to keep track of what args
	// to pass the main elementOpen() function.
	var overrideArgs = void 0;
	
	// The number of levels deep after skipping a tree.
	var skips = 0;
	
	var noop = function noop() {};
	
	// Adds or removes an event listener for an element.
	function applyEvent(elem, ename, newFunc) {
	  var events = elem[$currentEventHandlers];
	
	  if (!events) {
	    events = elem[$currentEventHandlers] = {};
	  }
	
	  // Undefined indicates that there is no listener yet.
	  if (typeof events[ename] === 'undefined') {
	    // We only add a single listener once. Originally this was a workaround for
	    // the Webcomponents ShadyDOM polyfill not removing listeners, but it's
	    // also a simpler model for binding / unbinding events because you only
	    // have a single handler you need to worry about and a single place where
	    // you only store one event handler
	    elem.addEventListener(ename, function (e) {
	      if (events[ename]) {
	        events[ename].call(this, e);
	      }
	    });
	  }
	
	  // Not undefined indicates that we have set a listener, so default to null.
	  events[ename] = typeof newFunc === 'function' ? newFunc : null;
	}
	
	var attributesContext = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_prop_context__["a" /* default */])(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["attributes"], _defineProperty({
	  // Attributes that shouldn't be applied to the DOM.
	  key: noop,
	  statics: noop,
	
	  // Attributes that *must* be set via a property on all elements.
	  checked: __WEBPACK_IMPORTED_MODULE_0_incremental_dom__["applyProp"],
	  className: __WEBPACK_IMPORTED_MODULE_0_incremental_dom__["applyProp"],
	  disabled: __WEBPACK_IMPORTED_MODULE_0_incremental_dom__["applyProp"],
	  value: __WEBPACK_IMPORTED_MODULE_0_incremental_dom__["applyProp"],
	
	  // Ref handler.
	  ref: function ref(elem, name, value) {
	    elem[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["m" /* ref */]] = value;
	  },
	
	
	  // Skip handler.
	  skip: function skip(elem, name, value) {
	    if (value) {
	      elem[$skip] = true;
	    } else {
	      delete elem[$skip];
	    }
	  }
	}, __WEBPACK_IMPORTED_MODULE_0_incremental_dom__["symbols"].default, function (elem, name, value) {
	  var ce = customElements.get(elem.localName);
	  var props = ce && ce.props || {};
	  var prototype = ce && ce.prototype || {};
	
	  // TODO when refactoring properties to not have to workaround the old
	  // WebKit bug we can remove the "name in props" check below.
	  //
	  // NOTE: That the "name in elem" check won't work for polyfilled custom
	  // elements that set a property that isn't explicitly specified in "props"
	  // or "prototype" unless it is added to the element explicitly as a
	  // property prior to passing the prop to the vdom function. For example, if
	  // it were added in a lifecycle callback because it wouldn't have been
	  // upgraded yet.
	  //
	  // We prefer setting props, so we do this if there's a property matching
	  // name that was passed. However, certain props on SVG elements are
	  // readonly and error when you try to set them.
	  if ((name in props || name in elem || name in prototype) && !('ownerSVGElement' in elem)) {
	    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["applyProp"])(elem, name, value);
	    return;
	  }
	
	  // Explicit false removes the attribute.
	  if (value === false) {
	    applyDefault(elem, name);
	    return;
	  }
	
	  // Handle built-in and custom events.
	  if (name.indexOf('on') === 0) {
	    var firstChar = name[2];
	    var eventName = void 0;
	
	    if (firstChar === '-') {
	      eventName = name.substring(3);
	    } else if (firstChar === firstChar.toUpperCase()) {
	      eventName = firstChar.toLowerCase() + name.substring(3);
	    }
	
	    if (eventName) {
	      applyEvent(elem, eventName, value);
	      return;
	    }
	  }
	
	  applyDefault(elem, name, value);
	}));
	
	function resolveTagName(name) {
	  // We return falsy values as some wrapped IDOM functions allow empty values.
	  if (!name) {
	    return name;
	  }
	
	  // We try and return the cached tag name, if one exists. This will work with
	  // *any* web component of any version that defines a `static is` property.
	  if (name.is) {
	    return name.is;
	  }
	
	  // Get the name for the custom element by constructing it and using the
	  // localName property. Cache it and lookup the cached value for future calls.
	  if (name.prototype instanceof HTMLElement) {
	    if (name[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["a" /* name */]]) {
	      return name[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["a" /* name */]];
	    }
	
	    // eslint-disable-next-line
	    var elem = new name();
	    return elem[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["a" /* name */]] = elem.localName;
	  }
	
	  // Pass all other values through so IDOM gets what it's expecting.
	  return name;
	}
	
	// Incremental DOM's elementOpen is where the hooks in `attributes` are applied,
	// so it's the only function we need to execute in the context of our attributes.
	var elementOpen = attributesContext(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["elementOpen"]);
	
	function elementOpenStart(tag) {
	  var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
	  var statics = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
	
	  overrideArgs = [tag, key, statics];
	}
	
	function elementOpenEnd() {
	  var node = newElementOpen.apply(undefined, _toConsumableArray(overrideArgs)); // eslint-disable-line no-use-before-define
	  overrideArgs = null;
	  return node;
	}
	
	function wrapIdomFunc(func) {
	  var tnameFuncHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;
	
	  return function wrap() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    args[0] = resolveTagName(args[0]);
	    stackCurrentHelper = null;
	    if (typeof args[0] === 'function') {
	      // If we've encountered a function, handle it according to the type of
	      // function that is being wrapped.
	      stackCurrentHelper = args[0];
	      return tnameFuncHandler.apply(undefined, args);
	    } else if (stackChren.length) {
	      // We pass the wrap() function in here so that when it's called as
	      // children, it will queue up for the next stack, if there is one.
	      stackChren[stackChren.length - 1].push([wrap, args]);
	    } else {
	      if (func === elementOpen) {
	        if (skips) {
	          return ++skips;
	        }
	
	        var elem = func.apply(undefined, args);
	
	        if (elem[$skip]) {
	          ++skips;
	        }
	
	        return elem;
	      }
	
	      if (func === __WEBPACK_IMPORTED_MODULE_0_incremental_dom__["elementClose"]) {
	        if (skips === 1) {
	          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["skip"])();
	        }
	
	        // We only want to skip closing if it's not the last closing tag in the
	        // skipped tree because we keep the element that initiated the skpping.
	        if (skips && --skips) {
	          return;
	        }
	
	        var _elem = func.apply(undefined, args);
	        var ref = _elem[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["m" /* ref */]];
	
	        // We delete so that it isn't called again for the same element. If the
	        // ref changes, or the element changes, this will be defined again.
	        delete _elem[__WEBPACK_IMPORTED_MODULE_1__util_symbols__["m" /* ref */]];
	
	        // Execute the saved ref after esuring we've cleand up after it.
	        if (typeof ref === 'function') {
	          ref(_elem);
	        }
	
	        return _elem;
	      }
	
	      // We must call elementOpenStart and elementOpenEnd even if we are
	      // skipping because they queue up attributes and then call elementClose.
	      if (!skips || func === elementOpenStart || func === elementOpenEnd) {
	        return func.apply(undefined, args);
	      }
	    }
	  };
	}
	
	function newAttr() {
	  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    args[_key2] = arguments[_key2];
	  }
	
	  if (stackCurrentHelper) {
	    stackCurrentHelper[$stackCurrentHelperProps][args[0]] = args[1];
	  } else if (stackChren.length) {
	    stackChren[stackChren.length - 1].push([newAttr, args]);
	  } else {
	    overrideArgs.push(args[0]);
	    overrideArgs.push(args[1]);
	  }
	}
	
	function stackOpen(tname, key, statics) {
	  var props = { key: key, statics: statics };
	
	  for (var _len3 = arguments.length, attrs = Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {
	    attrs[_key3 - 3] = arguments[_key3];
	  }
	
	  for (var a = 0; a < attrs.length; a += 2) {
	    props[attrs[a]] = attrs[a + 1];
	  }
	  tname[$stackCurrentHelperProps] = props;
	  stackChren.push([]);
	}
	
	function stackClose(tname) {
	  var chren = stackChren.pop();
	  var props = tname[$stackCurrentHelperProps];
	  delete tname[$stackCurrentHelperProps];
	  var elemOrFn = tname(props, function () {
	    return chren.forEach(function (args) {
	      return args[0].apply(args, _toConsumableArray(args[1]));
	    });
	  });
	  return typeof elemOrFn === 'function' ? elemOrFn() : elemOrFn;
	}
	
	// Incremental DOM overrides
	// -------------------------
	
	// We must override internal functions that call internal Incremental DOM
	// functions because we can't override the internal references. This means
	// we must roughly re-implement their behaviour. Luckily, they're fairly
	// simple.
	var newElementOpenStart = wrapIdomFunc(elementOpenStart, stackOpen);
	var newElementOpenEnd = wrapIdomFunc(elementOpenEnd);
	
	// Standard open / closed overrides don't need to reproduce internal behaviour
	// because they are the ones referenced from *End and *Start.
	var newElementOpen = wrapIdomFunc(elementOpen, stackOpen);
	var newElementClose = wrapIdomFunc(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["elementClose"], stackClose);
	
	// Ensure we call our overridden functions instead of the internal ones.
	function newElementVoid(tag) {
	  for (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
	    args[_key4 - 1] = arguments[_key4];
	  }
	
	  newElementOpen.apply(undefined, [tag].concat(args));
	  return newElementClose(tag);
	}
	
	// Text override ensures their calls can queue if using function helpers.
	var newText = wrapIdomFunc(__WEBPACK_IMPORTED_MODULE_0_incremental_dom__["text"]);
	
	// Convenience function for declaring an Incremental DOM element using
	// hyperscript-style syntax.
	function element(tname, attrs) {
	  var atype = typeof attrs === 'undefined' ? 'undefined' : _typeof(attrs);
	
	  // If attributes are a function, then they should be treated as children.
	
	  for (var _len5 = arguments.length, chren = Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {
	    chren[_key5 - 2] = arguments[_key5];
	  }
	
	  if (atype === 'function' || atype === 'string' || atype === 'number') {
	    chren.unshift(attrs);
	  }
	
	  // Ensure the attributes are an object. Null is considered an object so we
	  // have to test for this explicitly.
	  if (attrs === null || atype !== 'object') {
	    attrs = {};
	  }
	
	  // We open the element so we can set attrs after.
	  newElementOpenStart(tname, attrs.key, attrs.statics);
	
	  // Delete so special attrs don't actually get set.
	  delete attrs.key;
	  delete attrs.statics;
	
	  // Set attributes.
	  Object.keys(attrs).forEach(function (name) {
	    return newAttr(name, attrs[name]);
	  });
	
	  // Close before we render the descendant tree.
	  newElementOpenEnd(tname);
	
	  chren.forEach(function (ch) {
	    var ctype = typeof ch === 'undefined' ? 'undefined' : _typeof(ch);
	    if (ctype === 'function') {
	      ch();
	    } else if (ctype === 'string' || ctype === 'number') {
	      newText(ch);
	    } else if (Array.isArray(ch)) {
	      ch.forEach(function (sch) {
	        return sch();
	      });
	    }
	  });
	
	  return newElementClose(tname);
	}
	
	// Even further convenience for building a DSL out of JavaScript functions or hooking into standard
	// transpiles for JSX (React.createElement() / h).
	function builder() {
	  for (var _len6 = arguments.length, tags = Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
	    tags[_key6] = arguments[_key6];
	  }
	
	  if (tags.length === 0) {
	    return function () {
	      for (var _len7 = arguments.length, args = Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
	        args[_key7] = arguments[_key7];
	      }
	
	      return element.bind.apply(element, [null].concat(args));
	    };
	  }
	  return tags.map(function (tag) {
	    return function () {
	      for (var _len8 = arguments.length, args = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
	        args[_key8] = arguments[_key8];
	      }
	
	      return element.bind.apply(element, [null, tag].concat(args));
	    };
	  });
	}
	
	// We don't have to do anything special for the text function; it's just a
	// straight export from Incremental DOM.
	
	
	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__util_symbols__ = __webpack_require__(0);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__util_data__ = __webpack_require__(5);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__util_empty__ = __webpack_require__(6);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__util_attributes_manager__ = __webpack_require__(9);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__util_get_default_value__ = __webpack_require__(29);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__util_get_initial_value__ = __webpack_require__(30);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__util_get_prop_data__ = __webpack_require__(32);
	/* harmony export (immutable) */ exports["a"] = createNativePropertyDescriptor;
	
	
	
	
	
	
	
	
	function createNativePropertyDescriptor(propDef) {
	  var nameOrSymbol = propDef.nameOrSymbol;
	
	
	  var prop = {
	    configurable: true,
	    enumerable: true
	  };
	
	  prop.beforeDefineProperty = function (elem) {
	    var propData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util_get_prop_data__["a" /* default */])(elem, nameOrSymbol);
	    var attrSource = propDef.attrSource;
	
	    // Store attrSource name to property link.
	    if (attrSource) {
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__util_data__["a" /* default */])(elem, 'attrSourceLinks')[attrSource] = nameOrSymbol;
	    }
	
	    // prop value before upgrading
	    var initialValue = elem[nameOrSymbol];
	
	    // Set up initial value if it wasn't specified.
	    var valueFromAttrSource = false;
	    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_empty__["a" /* default */])(initialValue)) {
	      if (attrSource && elem.hasAttribute(attrSource)) {
	        valueFromAttrSource = true;
	        initialValue = propDef.deserialize(elem.getAttribute(attrSource));
	      } else if ('initial' in propDef) {
	        initialValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__util_get_initial_value__["a" /* default */])(elem, propDef);
	      } else {
	        initialValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util_get_default_value__["a" /* default */])(elem, propDef);
	      }
	    }
	
	    initialValue = propDef.coerce(initialValue);
	
	    propData.internalValue = initialValue;
	
	    // Reflect to Target Attribute
	    var mustReflect = propDef.attrTarget && !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_empty__["a" /* default */])(initialValue) && (!valueFromAttrSource || propDef.attrTargetIsNotSource);
	
	    if (mustReflect) {
	      var serializedValue = propDef.serialize(initialValue);
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__util_attributes_manager__["a" /* default */])(elem).setAttrValue(propDef.attrTarget, serializedValue);
	    }
	  };
	
	  prop.get = function get() {
	    var propData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util_get_prop_data__["a" /* default */])(this, nameOrSymbol);
	    var internalValue = propData.internalValue;
	
	    return propDef.get ? propDef.get(this, { name: nameOrSymbol, internalValue: internalValue }) : internalValue;
	  };
	
	  prop.set = function set(newValue) {
	    var propData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__util_get_prop_data__["a" /* default */])(this, nameOrSymbol);
	
	    var useDefaultValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_empty__["a" /* default */])(newValue);
	    if (useDefaultValue) {
	      newValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__util_get_default_value__["a" /* default */])(this, propDef);
	    }
	
	    newValue = propDef.coerce(newValue);
	
	    if (propDef.set) {
	      var oldValue = propData.oldValue;
	
	
	      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__util_empty__["a" /* default */])(oldValue)) {
	        oldValue = null;
	      }
	      var changeData = { name: nameOrSymbol, newValue: newValue, oldValue: oldValue };
	      propDef.set(this, changeData);
	    }
	
	    // Queue a re-render.
	    this[__WEBPACK_IMPORTED_MODULE_0__util_symbols__["h" /* rendererDebounced */]](this);
	
	    // Update prop data so we can use it next time.
	    propData.internalValue = propData.oldValue = newValue;
	
	    // Reflect to Target attribute.
	    var mustReflect = propDef.attrTarget && (propDef.attrTargetIsNotSource || !propData.settingPropFromAttrSource);
	    if (mustReflect) {
	      // Note: setting the prop to empty implies the default value
	      // and therefore no attribute should be present!
	      var serializedValue = useDefaultValue ? null : propDef.serialize(newValue);
	      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__util_attributes_manager__["a" /* default */])(this).setAttrValue(propDef.attrTarget, serializedValue);
	    }
	  };
	
	  return prop;
	}
	
	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/**
	 * Polyfill Object.is for IE
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	if (!Object.is) {
	  Object.is = function (x, y) {
	    // SameValue algorithm
	    if (x === y) {
	      // Steps 1-5, 7-10
	      // Steps 6.b-6.e: +0 != -0
	      return x !== 0 || 1 / x === 1 / y;
	    } else {
	      // Step 6.a: NaN == NaN
	      return x !== x && y !== y;
	    }
	  };
	}
	/* harmony default export */ exports["a"] = Object.is;
	
	/***/ },
	/* 25 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (immutable) */ exports["a"] = createSymbol;
	function createSymbol(description) {
	  return typeof Symbol === 'function' ? Symbol(description) : description;
	}
	
	/***/ },
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony default export */ exports["a"] = function (str) {
	  return str.split(/([A-Z])/).reduce(function (one, two, idx) {
	    var dash = !one || idx % 2 === 0 ? '' : '-';
	    return '' + one + dash + two.toLowerCase();
	  });
	};
	
	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__native__ = __webpack_require__(33);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__root__ = __webpack_require__(3);
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	
	
	
	var MutationObserver = __WEBPACK_IMPORTED_MODULE_1__root__["a" /* default */].MutationObserver;
	
	
	function microtaskDebounce(cbFunc) {
	  var scheduled = false;
	  var i = 0;
	  var cbArgs = [];
	  var elem = document.createElement('span');
	  var observer = new MutationObserver(function () {
	    cbFunc.apply(undefined, _toConsumableArray(cbArgs));
	    scheduled = false;
	    cbArgs = null;
	  });
	
	  observer.observe(elem, { childList: true });
	
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }
	
	    cbArgs = args;
	    if (!scheduled) {
	      scheduled = true;
	      elem.textContent = '' + i;
	      i += 1;
	    }
	  };
	}
	
	// We have to use setTimeout() for IE9 and 10 because the Mutation Observer
	// polyfill requires that the element be in the document to trigger Mutation
	// Events. Mutation Events are also synchronous and thus wouldn't debounce.
	//
	// The soonest we can set the timeout for in IE is 1 as they have issues when
	// setting to 0.
	function taskDebounce(cbFunc) {
	  var scheduled = false;
	  var cbArgs = [];
	  return function () {
	    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	      args[_key2] = arguments[_key2];
	    }
	
	    cbArgs = args;
	    if (!scheduled) {
	      scheduled = true;
	      setTimeout(function () {
	        scheduled = false;
	        cbFunc.apply(undefined, _toConsumableArray(cbArgs));
	      }, 1);
	    }
	  };
	}
	/* harmony default export */ exports["a"] = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__native__["a" /* default */])(MutationObserver) ? microtaskDebounce : taskDebounce;
	
	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (immutable) */ exports["a"] = error;
	function error(message) {
	  throw new Error(message);
	}
	
	/***/ },
	/* 29 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (immutable) */ exports["a"] = getDefaultValue;
	function getDefaultValue(elem, propDef) {
	  return typeof propDef.default === 'function' ? propDef.default(elem, { name: propDef.nameOrSymbol }) : propDef.default;
	}
	
	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (immutable) */ exports["a"] = getInitialValue;
	function getInitialValue(elem, propDef) {
	  return typeof propDef.initial === 'function' ? propDef.initial(elem, { name: propDef.nameOrSymbol }) : propDef.initial;
	}
	
	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__get_prop_names_and_symbols__ = __webpack_require__(1);
	
	
	/* harmony default export */ exports["a"] = function () {
	  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__get_prop_names_and_symbols__["a" /* default */])(obj).reduce(function (prev, nameOrSymbol) {
	    prev[nameOrSymbol] = Object.getOwnPropertyDescriptor(obj, nameOrSymbol);
	    return prev;
	  }, {});
	};
	
	/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__data__ = __webpack_require__(5);
	/* harmony export (immutable) */ exports["a"] = getPropData;
	
	
	function getPropData(elem, name) {
	  var elemData = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__data__["a" /* default */])(elem, 'props');
	  return elemData[name] || (elemData[name] = {});
	}
	
	/***/ },
	/* 33 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	var nativeHints = ['native code', '[object MutationObserverConstructor]' // for mobile safari iOS 9.0
	];
	/* harmony default export */ exports["a"] = function (fn) {
	  return nativeHints.map(function (hint) {
	    return (fn || '').toString().indexOf([hint]) > -1;
	  }).reduce(function (a, b) {
	    return a || b;
	  });
	};
	
	/***/ },
	/* 34 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assign__ = __webpack_require__(4);
	
	
	function enter(object, props) {
	  var saved = {};
	  Object.keys(props).forEach(function (key) {
	    saved[key] = object[key];
	    object[key] = props[key];
	  });
	  return saved;
	}
	
	function exit(object, saved) {
	  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__assign__["a" /* default */])(object, saved);
	}
	
	// Decorates a function with a side effect that changes the properties of an
	// object during its execution, and restores them after. There is no error
	// handling here, if the wrapped function throws an error, properties are not
	// restored and all bets are off.
	/* harmony default export */ exports["a"] = function (object, props) {
	  return function (func) {
	    return function () {
	      var saved = enter(object, props);
	      var result = func.apply(undefined, arguments);
	      exit(object, saved);
	      return result;
	    };
	  };
	};
	
	/***/ },
	/* 35 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__dash_case__ = __webpack_require__(26);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__empty__ = __webpack_require__(6);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__error__ = __webpack_require__(28);
	/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__is_type__ = __webpack_require__(2);
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	
	
	
	
	
	/**
	 * @internal
	 * Property Definition
	 *
	 * Internal meta data and strategies for a property.
	 * Created from the options of a PropOptions config object.
	 *
	 * Once created a PropDefinition should be treated as immutable and final.
	 * 'getPropsMap' function memoizes PropDefinitions by Component's Class.
	 *
	 * The 'attribute' option is normalized to 'attrSource' and 'attrTarget' properties.
	 */
	
	var PropDefinition = function () {
	  function PropDefinition(nameOrSymbol, propOptions) {
	    var _this = this;
	
	    _classCallCheck(this, PropDefinition);
	
	    this._nameOrSymbol = nameOrSymbol;
	
	    propOptions = propOptions || {};
	
	    // default 'attrSource': no observed source attribute (name)
	    this.attrSource = null;
	
	    // default 'attrTarget': no reflected target attribute (name)
	    this.attrTarget = null;
	
	    // default 'attrTargetIsNotSource'
	    this.attrTargetIsNotSource = false;
	
	    // default 'coerce': identity function
	    this.coerce = function (value) {
	      return value;
	    };
	
	    // default 'default': set prop to 'null'
	    this.default = null;
	
	    // default 'deserialize': return attribute's value (string or null)
	    this.deserialize = function (value) {
	      return value;
	    };
	
	    // default 'get': no function
	    this.get = null;
	
	    // 'initial' default: unspecified
	    // 'initial' option is truly optional and it cannot be initialized.
	    // Its presence is tested using: ('initial' in propDef)
	
	    // 'serialize' default: return string value or null
	    this.serialize = function (value) {
	      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__empty__["a" /* default */])(value) ? null : String(value);
	    };
	
	    // default 'set': no function
	    this.set = null;
	
	    // Note: option key is always a string (no symbols here)
	    Object.keys(propOptions).forEach(function (option) {
	      var optVal = propOptions[option];
	
	      // Only accept documented options and perform minimal input validation.
	      switch (option) {
	        case 'attribute':
	          if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__is_type__["b" /* isObject */])(optVal)) {
	            _this.attrSource = _this.attrTarget = resolveAttrName(optVal, nameOrSymbol);
	          } else {
	            var source = optVal.source,
	                target = optVal.target;
	
	            if (!source && !target) {
	              __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__error__["a" /* default */])(option + ' \'source\' or \'target\' is missing.');
	            }
	            _this.attrSource = resolveAttrName(source, nameOrSymbol);
	            _this.attrTarget = resolveAttrName(target, nameOrSymbol);
	            _this.attrTargetIsNotSource = _this.attrTarget !== _this.attrSource;
	          }
	          break;
	        case 'coerce':
	        case 'deserialize':
	        case 'get':
	        case 'serialize':
	        case 'set':
	          if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__is_type__["c" /* isFunction */])(optVal)) {
	            _this[option] = optVal;
	          } else {
	            __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__error__["a" /* default */])(option + ' must be a function.');
	          }
	          break;
	        case 'default':
	        case 'initial':
	          _this[option] = optVal;
	          break;
	        default:
	          // TODO: undocumented options?
	          _this[option] = optVal;
	          break;
	      }
	    });
	  }
	
	  _createClass(PropDefinition, [{
	    key: 'nameOrSymbol',
	    get: function get() {
	      return this._nameOrSymbol;
	    }
	  }]);
	
	  return PropDefinition;
	}();
	
	/* harmony default export */ exports["a"] = PropDefinition;
	
	
	function resolveAttrName(attrOption, nameOrSymbol) {
	  if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__is_type__["d" /* isSymbol */])(nameOrSymbol)) {
	    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__error__["a" /* default */])(nameOrSymbol.toString() + ' symbol property cannot have an attribute.');
	  } else {
	    if (attrOption === true) {
	      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__dash_case__["a" /* default */])(String(nameOrSymbol));
	    }
	    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__is_type__["e" /* isString */])(attrOption)) {
	      return attrOption;
	    }
	  }
	  return null;
	}
	
	/***/ },
	/* 36 */
	/***/ function(module, exports, __webpack_require__) {
	
	"use strict";
	/* harmony export (immutable) */ exports["a"] = uniqueId;
	// DEPRECATED prefix when we deprecated the name argument to define()
	function uniqueId(prefix) {
	  // http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript/2117523#2117523
	  var rand = 'xxxxxxxx'.replace(/[xy]/g, function (c) {
	    var r = Math.random() * 16 | 0;
	    // eslint-disable-next-line no-mixed-operators
	    var v = c === 'x' ? r : r & 0x3 | 0x8;
	    return v.toString(16);
	  });
	  return (prefix || 'x') + '-' + rand;
	}
	
	/***/ },
	/* 37 */
	/***/ function(module, exports) {
	
	var g;
	
	// This works in non-strict mode
	g = (function() { return this; })();
	
	try {
		// This works if eval is allowed (see CSP)
		g = g || Function("return this")() || (1,eval)("this");
	} catch(e) {
		// This works if the window reference is available
		if(typeof window === "object")
			g = window;
	}
	
	// g can still be undefined, but nothing to do about it...
	// We return undefined, instead of nothing here, so it's
	// easier to handle this case. if(!global) { ...}
	
	module.exports = g;
	
	
	/***/ },
	/* 38 */
	/***/ function(module, exports, __webpack_require__) {
	
	module.exports = __webpack_require__(15);
	
	
	/***/ }
	/******/ ]);
	});
	//# sourceMappingURL=index.js.map

/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * @license
	 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *      http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS-IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	
	'use strict';
	
	/**
	 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *      http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS-IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	
	/**
	 * A cached reference to the hasOwnProperty function.
	 */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	
	/**
	 * A cached reference to the create function.
	 */
	var create = Object.create;
	
	/**
	 * Used to prevent property collisions between our "map" and its prototype.
	 * @param {!Object<string, *>} map The map to check.
	 * @param {string} property The property to check.
	 * @return {boolean} Whether map has property.
	 */
	var has = function (map, property) {
	  return hasOwnProperty.call(map, property);
	};
	
	/**
	 * Creates an map object without a prototype.
	 * @return {!Object}
	 */
	var createMap = function () {
	  return create(null);
	};
	
	/**
	 * Keeps track of information needed to perform diffs for a given DOM node.
	 * @param {!string} nodeName
	 * @param {?string=} key
	 * @constructor
	 */
	function NodeData(nodeName, key) {
	  /**
	   * The attributes and their values.
	   * @const {!Object<string, *>}
	   */
	  this.attrs = createMap();
	
	  /**
	   * An array of attribute name/value pairs, used for quickly diffing the
	   * incomming attributes to see if the DOM node's attributes need to be
	   * updated.
	   * @const {Array<*>}
	   */
	  this.attrsArr = [];
	
	  /**
	   * The incoming attributes for this Node, before they are updated.
	   * @const {!Object<string, *>}
	   */
	  this.newAttrs = createMap();
	
	  /**
	   * The key used to identify this node, used to preserve DOM nodes when they
	   * move within their parent.
	   * @const
	   */
	  this.key = key;
	
	  /**
	   * Keeps track of children within this node by their key.
	   * {?Object<string, !Element>}
	   */
	  this.keyMap = null;
	
	  /**
	   * Whether or not the keyMap is currently valid.
	   * {boolean}
	   */
	  this.keyMapValid = true;
	
	  /**
	   * The node name for this node.
	   * @const {string}
	   */
	  this.nodeName = nodeName;
	
	  /**
	   * @type {?string}
	   */
	  this.text = null;
	}
	
	/**
	 * Initializes a NodeData object for a Node.
	 *
	 * @param {Node} node The node to initialize data for.
	 * @param {string} nodeName The node name of node.
	 * @param {?string=} key The key that identifies the node.
	 * @return {!NodeData} The newly initialized data object
	 */
	var initData = function (node, nodeName, key) {
	  var data = new NodeData(nodeName, key);
	  node['__incrementalDOMData'] = data;
	  return data;
	};
	
	/**
	 * Retrieves the NodeData object for a Node, creating it if necessary.
	 *
	 * @param {Node} node The node to retrieve the data for.
	 * @return {!NodeData} The NodeData for this Node.
	 */
	var getData = function (node) {
	  var data = node['__incrementalDOMData'];
	
	  if (!data) {
	    var nodeName = node.nodeName.toLowerCase();
	    var key = null;
	
	    if (node instanceof Element) {
	      key = node.getAttribute('key');
	    }
	
	    data = initData(node, nodeName, key);
	  }
	
	  return data;
	};
	
	/**
	 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *      http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS-IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	
	/** @const */
	var symbols = {
	  default: '__default',
	
	  placeholder: '__placeholder'
	};
	
	/**
	 * @param {string} name
	 * @return {string|undefined} The namespace to use for the attribute.
	 */
	var getNamespace = function (name) {
	  if (name.lastIndexOf('xml:', 0) === 0) {
	    return 'http://www.w3.org/XML/1998/namespace';
	  }
	
	  if (name.lastIndexOf('xlink:', 0) === 0) {
	    return 'http://www.w3.org/1999/xlink';
	  }
	};
	
	/**
	 * Applies an attribute or property to a given Element. If the value is null
	 * or undefined, it is removed from the Element. Otherwise, the value is set
	 * as an attribute.
	 * @param {!Element} el
	 * @param {string} name The attribute's name.
	 * @param {?(boolean|number|string)=} value The attribute's value.
	 */
	var applyAttr = function (el, name, value) {
	  if (value == null) {
	    el.removeAttribute(name);
	  } else {
	    var attrNS = getNamespace(name);
	    if (attrNS) {
	      el.setAttributeNS(attrNS, name, value);
	    } else {
	      el.setAttribute(name, value);
	    }
	  }
	};
	
	/**
	 * Applies a property to a given Element.
	 * @param {!Element} el
	 * @param {string} name The property's name.
	 * @param {*} value The property's value.
	 */
	var applyProp = function (el, name, value) {
	  el[name] = value;
	};
	
	/**
	 * Applies a style to an Element. No vendor prefix expansion is done for
	 * property names/values.
	 * @param {!Element} el
	 * @param {string} name The attribute's name.
	 * @param {*} style The style to set. Either a string of css or an object
	 *     containing property-value pairs.
	 */
	var applyStyle = function (el, name, style) {
	  if (typeof style === 'string') {
	    el.style.cssText = style;
	  } else {
	    el.style.cssText = '';
	    var elStyle = el.style;
	    var obj = /** @type {!Object<string,string>} */style;
	
	    for (var prop in obj) {
	      if (has(obj, prop)) {
	        elStyle[prop] = obj[prop];
	      }
	    }
	  }
	};
	
	/**
	 * Updates a single attribute on an Element.
	 * @param {!Element} el
	 * @param {string} name The attribute's name.
	 * @param {*} value The attribute's value. If the value is an object or
	 *     function it is set on the Element, otherwise, it is set as an HTML
	 *     attribute.
	 */
	var applyAttributeTyped = function (el, name, value) {
	  var type = typeof value;
	
	  if (type === 'object' || type === 'function') {
	    applyProp(el, name, value);
	  } else {
	    applyAttr(el, name, /** @type {?(boolean|number|string)} */value);
	  }
	};
	
	/**
	 * Calls the appropriate attribute mutator for this attribute.
	 * @param {!Element} el
	 * @param {string} name The attribute's name.
	 * @param {*} value The attribute's value.
	 */
	var updateAttribute = function (el, name, value) {
	  var data = getData(el);
	  var attrs = data.attrs;
	
	  if (attrs[name] === value) {
	    return;
	  }
	
	  var mutator = attributes[name] || attributes[symbols.default];
	  mutator(el, name, value);
	
	  attrs[name] = value;
	};
	
	/**
	 * A publicly mutable object to provide custom mutators for attributes.
	 * @const {!Object<string, function(!Element, string, *)>}
	 */
	var attributes = createMap();
	
	// Special generic mutator that's called for any attribute that does not
	// have a specific mutator.
	attributes[symbols.default] = applyAttributeTyped;
	
	attributes[symbols.placeholder] = function () {};
	
	attributes['style'] = applyStyle;
	
	/**
	 * Gets the namespace to create an element (of a given tag) in.
	 * @param {string} tag The tag to get the namespace for.
	 * @param {?Node} parent
	 * @return {?string} The namespace to create the tag in.
	 */
	var getNamespaceForTag = function (tag, parent) {
	  if (tag === 'svg') {
	    return 'http://www.w3.org/2000/svg';
	  }
	
	  if (getData(parent).nodeName === 'foreignObject') {
	    return null;
	  }
	
	  return parent.namespaceURI;
	};
	
	/**
	 * Creates an Element.
	 * @param {Document} doc The document with which to create the Element.
	 * @param {?Node} parent
	 * @param {string} tag The tag for the Element.
	 * @param {?string=} key A key to identify the Element.
	 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
	 *     static attributes for the Element.
	 * @return {!Element}
	 */
	var createElement = function (doc, parent, tag, key, statics) {
	  var namespace = getNamespaceForTag(tag, parent);
	  var el = undefined;
	
	  if (namespace) {
	    el = doc.createElementNS(namespace, tag);
	  } else {
	    el = doc.createElement(tag);
	  }
	
	  initData(el, tag, key);
	
	  if (statics) {
	    for (var i = 0; i < statics.length; i += 2) {
	      updateAttribute(el, /** @type {!string}*/statics[i], statics[i + 1]);
	    }
	  }
	
	  return el;
	};
	
	/**
	 * Creates a Text Node.
	 * @param {Document} doc The document with which to create the Element.
	 * @return {!Text}
	 */
	var createText = function (doc) {
	  var node = doc.createTextNode('');
	  initData(node, '#text', null);
	  return node;
	};
	
	/**
	 * Creates a mapping that can be used to look up children using a key.
	 * @param {?Node} el
	 * @return {!Object<string, !Element>} A mapping of keys to the children of the
	 *     Element.
	 */
	var createKeyMap = function (el) {
	  var map = createMap();
	  var child = el.firstElementChild;
	
	  while (child) {
	    var key = getData(child).key;
	
	    if (key) {
	      map[key] = child;
	    }
	
	    child = child.nextElementSibling;
	  }
	
	  return map;
	};
	
	/**
	 * Retrieves the mapping of key to child node for a given Element, creating it
	 * if necessary.
	 * @param {?Node} el
	 * @return {!Object<string, !Node>} A mapping of keys to child Elements
	 */
	var getKeyMap = function (el) {
	  var data = getData(el);
	
	  if (!data.keyMap) {
	    data.keyMap = createKeyMap(el);
	  }
	
	  return data.keyMap;
	};
	
	/**
	 * Retrieves a child from the parent with the given key.
	 * @param {?Node} parent
	 * @param {?string=} key
	 * @return {?Node} The child corresponding to the key.
	 */
	var getChild = function (parent, key) {
	  return key ? getKeyMap(parent)[key] : null;
	};
	
	/**
	 * Registers an element as being a child. The parent will keep track of the
	 * child using the key. The child can be retrieved using the same key using
	 * getKeyMap. The provided key should be unique within the parent Element.
	 * @param {?Node} parent The parent of child.
	 * @param {string} key A key to identify the child with.
	 * @param {!Node} child The child to register.
	 */
	var registerChild = function (parent, key, child) {
	  getKeyMap(parent)[key] = child;
	};
	
	/**
	 * Copyright 2015 The Incremental DOM Authors. All Rights Reserved.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 *      http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS-IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 */
	
	/** @const */
	var notifications = {
	  /**
	   * Called after patch has compleated with any Nodes that have been created
	   * and added to the DOM.
	   * @type {?function(Array<!Node>)}
	   */
	  nodesCreated: null,
	
	  /**
	   * Called after patch has compleated with any Nodes that have been removed
	   * from the DOM.
	   * Note it's an applications responsibility to handle any childNodes.
	   * @type {?function(Array<!Node>)}
	   */
	  nodesDeleted: null
	};
	
	/**
	 * Keeps track of the state of a patch.
	 * @constructor
	 */
	function Context() {
	  /**
	   * @type {(Array<!Node>|undefined)}
	   */
	  this.created = notifications.nodesCreated && [];
	
	  /**
	   * @type {(Array<!Node>|undefined)}
	   */
	  this.deleted = notifications.nodesDeleted && [];
	}
	
	/**
	 * @param {!Node} node
	 */
	Context.prototype.markCreated = function (node) {
	  if (this.created) {
	    this.created.push(node);
	  }
	};
	
	/**
	 * @param {!Node} node
	 */
	Context.prototype.markDeleted = function (node) {
	  if (this.deleted) {
	    this.deleted.push(node);
	  }
	};
	
	/**
	 * Notifies about nodes that were created during the patch opearation.
	 */
	Context.prototype.notifyChanges = function () {
	  if (this.created && this.created.length > 0) {
	    notifications.nodesCreated(this.created);
	  }
	
	  if (this.deleted && this.deleted.length > 0) {
	    notifications.nodesDeleted(this.deleted);
	  }
	};
	
	/**
	* Makes sure that keyed Element matches the tag name provided.
	* @param {!string} nodeName The nodeName of the node that is being matched.
	* @param {string=} tag The tag name of the Element.
	* @param {?string=} key The key of the Element.
	*/
	var assertKeyedTagMatches = function (nodeName, tag, key) {
	  if (nodeName !== tag) {
	    throw new Error('Was expecting node with key "' + key + '" to be a ' + tag + ', not a ' + nodeName + '.');
	  }
	};
	
	/** @type {?Context} */
	var context = null;
	
	/** @type {?Node} */
	var currentNode = null;
	
	/** @type {?Node} */
	var currentParent = null;
	
	/** @type {?Element|?DocumentFragment} */
	var root = null;
	
	/** @type {?Document} */
	var doc = null;
	
	/**
	 * Returns a patcher function that sets up and restores a patch context,
	 * running the run function with the provided data.
	 * @param {function((!Element|!DocumentFragment),!function(T),T=)} run
	 * @return {function((!Element|!DocumentFragment),!function(T),T=)}
	 * @template T
	 */
	var patchFactory = function (run) {
	  /**
	   * TODO(moz): These annotations won't be necessary once we switch to Closure
	   * Compiler's new type inference. Remove these once the switch is done.
	   *
	   * @param {(!Element|!DocumentFragment)} node
	   * @param {!function(T)} fn
	   * @param {T=} data
	   * @template T
	   */
	  var f = function (node, fn, data) {
	    var prevContext = context;
	    var prevRoot = root;
	    var prevDoc = doc;
	    var prevCurrentNode = currentNode;
	    var prevCurrentParent = currentParent;
	    var previousInAttributes = false;
	    var previousInSkip = false;
	
	    context = new Context();
	    root = node;
	    doc = node.ownerDocument;
	    currentParent = node.parentNode;
	
	    if (false) {}
	
	    run(node, fn, data);
	
	    if (false) {}
	
	    context.notifyChanges();
	
	    context = prevContext;
	    root = prevRoot;
	    doc = prevDoc;
	    currentNode = prevCurrentNode;
	    currentParent = prevCurrentParent;
	  };
	  return f;
	};
	
	/**
	 * Patches the document starting at node with the provided function. This
	 * function may be called during an existing patch operation.
	 * @param {!Element|!DocumentFragment} node The Element or Document
	 *     to patch.
	 * @param {!function(T)} fn A function containing elementOpen/elementClose/etc.
	 *     calls that describe the DOM.
	 * @param {T=} data An argument passed to fn to represent DOM state.
	 * @template T
	 */
	var patchInner = patchFactory(function (node, fn, data) {
	  currentNode = node;
	
	  enterNode();
	  fn(data);
	  exitNode();
	
	  if (false) {}
	});
	
	/**
	 * Patches an Element with the the provided function. Exactly one top level
	 * element call should be made corresponding to `node`.
	 * @param {!Element} node The Element where the patch should start.
	 * @param {!function(T)} fn A function containing elementOpen/elementClose/etc.
	 *     calls that describe the DOM. This should have at most one top level
	 *     element call.
	 * @param {T=} data An argument passed to fn to represent DOM state.
	 * @template T
	 */
	var patchOuter = patchFactory(function (node, fn, data) {
	  currentNode = /** @type {!Element} */{ nextSibling: node };
	
	  fn(data);
	
	  if (false) {}
	});
	
	/**
	 * Checks whether or not the current node matches the specified nodeName and
	 * key.
	 *
	 * @param {?string} nodeName The nodeName for this node.
	 * @param {?string=} key An optional key that identifies a node.
	 * @return {boolean} True if the node matches, false otherwise.
	 */
	var matches = function (nodeName, key) {
	  var data = getData(currentNode);
	
	  // Key check is done using double equals as we want to treat a null key the
	  // same as undefined. This should be okay as the only values allowed are
	  // strings, null and undefined so the == semantics are not too weird.
	  return nodeName === data.nodeName && key == data.key;
	};
	
	/**
	 * Aligns the virtual Element definition with the actual DOM, moving the
	 * corresponding DOM node to the correct location or creating it if necessary.
	 * @param {string} nodeName For an Element, this should be a valid tag string.
	 *     For a Text, this should be #text.
	 * @param {?string=} key The key used to identify this element.
	 * @param {?Array<*>=} statics For an Element, this should be an array of
	 *     name-value pairs.
	 */
	var alignWithDOM = function (nodeName, key, statics) {
	  if (currentNode && matches(nodeName, key)) {
	    return;
	  }
	
	  var node = undefined;
	
	  // Check to see if the node has moved within the parent.
	  if (key) {
	    node = getChild(currentParent, key);
	    if (node && 'production' !== 'production') {
	      assertKeyedTagMatches(getData(node).nodeName, nodeName, key);
	    }
	  }
	
	  // Create the node if it doesn't exist.
	  if (!node) {
	    if (nodeName === '#text') {
	      node = createText(doc);
	    } else {
	      node = createElement(doc, currentParent, nodeName, key, statics);
	    }
	
	    if (key) {
	      registerChild(currentParent, key, node);
	    }
	
	    context.markCreated(node);
	  }
	
	  // If the node has a key, remove it from the DOM to prevent a large number
	  // of re-orders in the case that it moved far or was completely removed.
	  // Since we hold on to a reference through the keyMap, we can always add it
	  // back.
	  if (currentNode && getData(currentNode).key) {
	    currentParent.replaceChild(node, currentNode);
	    getData(currentParent).keyMapValid = false;
	  } else {
	    currentParent.insertBefore(node, currentNode);
	  }
	
	  currentNode = node;
	};
	
	/**
	 * Clears out any unvisited Nodes, as the corresponding virtual element
	 * functions were never called for them.
	 */
	var clearUnvisitedDOM = function () {
	  var node = currentParent;
	  var data = getData(node);
	  var keyMap = data.keyMap;
	  var keyMapValid = data.keyMapValid;
	  var child = node.lastChild;
	  var key = undefined;
	
	  if (child === currentNode && keyMapValid) {
	    return;
	  }
	
	  if (data.attrs[symbols.placeholder] && node !== root) {
	    if (false) {}
	    return;
	  }
	
	  while (child !== currentNode) {
	    node.removeChild(child);
	    context.markDeleted( /** @type {!Node}*/child);
	
	    key = getData(child).key;
	    if (key) {
	      delete keyMap[key];
	    }
	    child = node.lastChild;
	  }
	
	  // Clean the keyMap, removing any unusued keys.
	  if (!keyMapValid) {
	    for (key in keyMap) {
	      child = keyMap[key];
	      if (child.parentNode !== node) {
	        context.markDeleted(child);
	        delete keyMap[key];
	      }
	    }
	
	    data.keyMapValid = true;
	  }
	};
	
	/**
	 * Changes to the first child of the current node.
	 */
	var enterNode = function () {
	  currentParent = currentNode;
	  currentNode = null;
	};
	
	/**
	 * Changes to the next sibling of the current node.
	 */
	var nextNode = function () {
	  if (currentNode) {
	    currentNode = currentNode.nextSibling;
	  } else {
	    currentNode = currentParent.firstChild;
	  }
	};
	
	/**
	 * Changes to the parent of the current node, removing any unvisited children.
	 */
	var exitNode = function () {
	  clearUnvisitedDOM();
	
	  currentNode = currentParent;
	  currentParent = currentParent.parentNode;
	};
	
	/**
	 * Makes sure that the current node is an Element with a matching tagName and
	 * key.
	 *
	 * @param {string} tag The element's tag.
	 * @param {?string=} key The key used to identify this element. This can be an
	 *     empty string, but performance may be better if a unique value is used
	 *     when iterating over an array of items.
	 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
	 *     static attributes for the Element. These will only be set once when the
	 *     Element is created.
	 * @return {!Element} The corresponding Element.
	 */
	var coreElementOpen = function (tag, key, statics) {
	  nextNode();
	  alignWithDOM(tag, key, statics);
	  enterNode();
	  return (/** @type {!Element} */currentParent
	  );
	};
	
	/**
	 * Closes the currently open Element, removing any unvisited children if
	 * necessary.
	 *
	 * @return {!Element} The corresponding Element.
	 */
	var coreElementClose = function () {
	  if (false) {}
	
	  exitNode();
	  return (/** @type {!Element} */currentNode
	  );
	};
	
	/**
	 * Makes sure the current node is a Text node and creates a Text node if it is
	 * not.
	 *
	 * @return {!Text} The corresponding Text Node.
	 */
	var coreText = function () {
	  nextNode();
	  alignWithDOM('#text', null, null);
	  return (/** @type {!Text} */currentNode
	  );
	};
	
	/**
	 * Gets the current Element being patched.
	 * @return {!Element}
	 */
	var currentElement = function () {
	  if (false) {}
	  return (/** @type {!Element} */currentParent
	  );
	};
	
	/**
	 * Skips the children in a subtree, allowing an Element to be closed without
	 * clearing out the children.
	 */
	var skip = function () {
	  if (false) {}
	  currentNode = currentParent.lastChild;
	};
	
	/**
	 * The offset in the virtual element declaration where the attributes are
	 * specified.
	 * @const
	 */
	var ATTRIBUTES_OFFSET = 3;
	
	/**
	 * Builds an array of arguments for use with elementOpenStart, attr and
	 * elementOpenEnd.
	 * @const {Array<*>}
	 */
	var argsBuilder = [];
	
	/**
	 * @param {string} tag The element's tag.
	 * @param {?string=} key The key used to identify this element. This can be an
	 *     empty string, but performance may be better if a unique value is used
	 *     when iterating over an array of items.
	 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
	 *     static attributes for the Element. These will only be set once when the
	 *     Element is created.
	 * @param {...*} const_args Attribute name/value pairs of the dynamic attributes
	 *     for the Element.
	 * @return {!Element} The corresponding Element.
	 */
	var elementOpen = function (tag, key, statics, const_args) {
	  if (false) {}
	
	  var node = coreElementOpen(tag, key, statics);
	  var data = getData(node);
	
	  /*
	   * Checks to see if one or more attributes have changed for a given Element.
	   * When no attributes have changed, this is much faster than checking each
	   * individual argument. When attributes have changed, the overhead of this is
	   * minimal.
	   */
	  var attrsArr = data.attrsArr;
	  var newAttrs = data.newAttrs;
	  var attrsChanged = false;
	  var i = ATTRIBUTES_OFFSET;
	  var j = 0;
	
	  for (; i < arguments.length; i += 1, j += 1) {
	    if (attrsArr[j] !== arguments[i]) {
	      attrsChanged = true;
	      break;
	    }
	  }
	
	  for (; i < arguments.length; i += 1, j += 1) {
	    attrsArr[j] = arguments[i];
	  }
	
	  if (j < attrsArr.length) {
	    attrsChanged = true;
	    attrsArr.length = j;
	  }
	
	  /*
	   * Actually perform the attribute update.
	   */
	  if (attrsChanged) {
	    for (i = ATTRIBUTES_OFFSET; i < arguments.length; i += 2) {
	      newAttrs[arguments[i]] = arguments[i + 1];
	    }
	
	    for (var _attr in newAttrs) {
	      updateAttribute(node, _attr, newAttrs[_attr]);
	      newAttrs[_attr] = undefined;
	    }
	  }
	
	  return node;
	};
	
	/**
	 * Declares a virtual Element at the current location in the document. This
	 * corresponds to an opening tag and a elementClose tag is required. This is
	 * like elementOpen, but the attributes are defined using the attr function
	 * rather than being passed as arguments. Must be folllowed by 0 or more calls
	 * to attr, then a call to elementOpenEnd.
	 * @param {string} tag The element's tag.
	 * @param {?string=} key The key used to identify this element. This can be an
	 *     empty string, but performance may be better if a unique value is used
	 *     when iterating over an array of items.
	 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
	 *     static attributes for the Element. These will only be set once when the
	 *     Element is created.
	 */
	var elementOpenStart = function (tag, key, statics) {
	  if (false) {}
	
	  argsBuilder[0] = tag;
	  argsBuilder[1] = key;
	  argsBuilder[2] = statics;
	};
	
	/***
	 * Defines a virtual attribute at this point of the DOM. This is only valid
	 * when called between elementOpenStart and elementOpenEnd.
	 *
	 * @param {string} name
	 * @param {*} value
	 */
	var attr = function (name, value) {
	  if (false) {}
	
	  argsBuilder.push(name, value);
	};
	
	/**
	 * Closes an open tag started with elementOpenStart.
	 * @return {!Element} The corresponding Element.
	 */
	var elementOpenEnd = function () {
	  if (false) {}
	
	  var node = elementOpen.apply(null, argsBuilder);
	  argsBuilder.length = 0;
	  return node;
	};
	
	/**
	 * Closes an open virtual Element.
	 *
	 * @param {string} tag The element's tag.
	 * @return {!Element} The corresponding Element.
	 */
	var elementClose = function (tag) {
	  if (false) {}
	
	  var node = coreElementClose();
	
	  if (false) {}
	
	  return node;
	};
	
	/**
	 * Declares a virtual Element at the current location in the document that has
	 * no children.
	 * @param {string} tag The element's tag.
	 * @param {?string=} key The key used to identify this element. This can be an
	 *     empty string, but performance may be better if a unique value is used
	 *     when iterating over an array of items.
	 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
	 *     static attributes for the Element. These will only be set once when the
	 *     Element is created.
	 * @param {...*} const_args Attribute name/value pairs of the dynamic attributes
	 *     for the Element.
	 * @return {!Element} The corresponding Element.
	 */
	var elementVoid = function (tag, key, statics, const_args) {
	  elementOpen.apply(null, arguments);
	  return elementClose(tag);
	};
	
	/**
	 * Declares a virtual Element at the current location in the document that is a
	 * placeholder element. Children of this Element can be manually managed and
	 * will not be cleared by the library.
	 *
	 * A key must be specified to make sure that this node is correctly preserved
	 * across all conditionals.
	 *
	 * @param {string} tag The element's tag.
	 * @param {string} key The key used to identify this element.
	 * @param {?Array<*>=} statics An array of attribute name/value pairs of the
	 *     static attributes for the Element. These will only be set once when the
	 *     Element is created.
	 * @param {...*} const_args Attribute name/value pairs of the dynamic attributes
	 *     for the Element.
	 * @return {!Element} The corresponding Element.
	 */
	var elementPlaceholder = function (tag, key, statics, const_args) {
	  if (false) {}
	
	  elementOpen.apply(null, arguments);
	  skip();
	  return elementClose(tag);
	};
	
	/**
	 * Declares a virtual Text at this point in the document.
	 *
	 * @param {string|number|boolean} value The value of the Text.
	 * @param {...(function((string|number|boolean)):string)} const_args
	 *     Functions to format the value which are called only when the value has
	 *     changed.
	 * @return {!Text} The corresponding text node.
	 */
	var text = function (value, const_args) {
	  if (false) {}
	
	  var node = coreText();
	  var data = getData(node);
	
	  if (data.text !== value) {
	    data.text = /** @type {string} */value;
	
	    var formatted = value;
	    for (var i = 1; i < arguments.length; i += 1) {
	      /*
	       * Call the formatter function directly to prevent leaking arguments.
	       * https://github.com/google/incremental-dom/pull/204#issuecomment-178223574
	       */
	      var fn = arguments[i];
	      formatted = fn(formatted);
	    }
	
	    node.data = formatted;
	  }
	
	  return node;
	};
	
	exports.patch = patchInner;
	exports.patchInner = patchInner;
	exports.patchOuter = patchOuter;
	exports.currentElement = currentElement;
	exports.skip = skip;
	exports.elementVoid = elementVoid;
	exports.elementOpenStart = elementOpenStart;
	exports.elementOpenEnd = elementOpenEnd;
	exports.elementOpen = elementOpen;
	exports.elementClose = elementClose;
	exports.elementPlaceholder = elementPlaceholder;
	exports.text = text;
	exports.attr = attr;
	exports.symbols = symbols;
	exports.attributes = attributes;
	exports.applyAttr = applyAttr;
	exports.applyProp = applyProp;
	exports.notifications = notifications;
	
	//# sourceMappingURL=incremental-dom-cjs.js.map

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Item = exports.CodeExample = exports.Layout = exports.Link = exports.Css = undefined;
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
	
	var _skatejs = __webpack_require__(294);
	
	var _glamor = __webpack_require__(297);
	
	var _page = __webpack_require__(315);
	
	var _page2 = _interopRequireDefault(_page);
	
	var _prism = __webpack_require__(318);
	
	var _prism2 = _interopRequireDefault(_prism);
	
	var _prismjs = __webpack_require__(320);
	
	var _prismjs2 = _interopRequireDefault(_prismjs);
	
	var _tabs = __webpack_require__(321);
	
	var _tabs2 = _interopRequireDefault(_tabs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /** @jsx h */
	
	function followHref(e) {
	  if (e.currentTarget.rel !== 'external') {
	    (0, _page2.default)(e.target.pathname || '/');
	    e.preventDefault();
	  }
	}
	
	var Css = exports.Css = function Css(props) {
	  return (0, _skatejs.h)(
	    'style',
	    null,
	    props.for.length ? _glamor.cssFor.apply(undefined, _toConsumableArray(props.for)) : (0, _glamor.cssFor)(props.for)
	  );
	};
	var Link = exports.Link = function Link(props, chren) {
	  return (0, _skatejs.h)(
	    'a',
	    _extends({}, props, { onclick: followHref }),
	    chren
	  );
	};
	var Layout = exports.Layout = function Layout(props, chren) {
	  return (0, _skatejs.h)(
	    'div',
	    { style: 'padding: 20px' },
	    chren
	  );
	};
	
	function format(code) {
	  var lang = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'markup';
	
	  var lines = code.split('\n');
	  var ident = (lines[1] || '').match(/^\s*/)[0].length;
	  var formatted = lines.map(function (line) {
	    return line.substring(ident);
	  }).join('\n').trim();
	  var highlighted = _prismjs2.default.highlight(formatted, _prismjs2.default.languages[lang]);
	  return highlighted;
	}
	
	var codeCss = (0, _glamor.style)({
	  backgroundColor: '#F1EDE4'
	});
	var codeTitleCss = (0, _glamor.style)({
	  backgroundColor: '#DAD6CE',
	  fontSize: 24,
	  fontWeight: 200,
	  margin: 0,
	  padding: 20
	});
	var codeDescriptionCss = (0, _glamor.style)({
	  backgroundColor: '#DAD6CE',
	  fontSize: 14,
	  fontWeight: 100,
	  margin: 0,
	  padding: 20
	});
	
	var CodeExample = exports.CodeExample = function CodeExample(props, chren) {
	  return (0, _skatejs.h)(
	    'div',
	    codeCss,
	    (0, _skatejs.h)(
	      'style',
	      null,
	      _prism2.default.toString()
	    ),
	    (0, _skatejs.h)(Css, { 'for': [codeCss, codeTitleCss, codeDescriptionCss] }),
	    props.title ? (0, _skatejs.h)(
	      'h3',
	      codeTitleCss,
	      props.title
	    ) : '',
	    props.description ? (0, _skatejs.h)(
	      'h3',
	      codeDescriptionCss,
	      props.description
	    ) : '',
	    (0, _skatejs.h)(
	      _tabs2.default,
	      null,
	      (0, _skatejs.h)(
	        _tabs.Tab,
	        { name: 'Result', selected: true },
	        (0, _skatejs.h)(
	          'p',
	          null,
	          chren
	        )
	      ),
	      (0, _skatejs.h)(
	        _tabs.Tab,
	        { name: 'JS' },
	        (0, _skatejs.h)(
	          'pre',
	          null,
	          (0, _skatejs.h)('code', { ref: function ref(e) {
	              return e.innerHTML = format(props.js, 'javascript');
	            } })
	        )
	      ),
	      (0, _skatejs.h)(
	        _tabs.Tab,
	        { name: 'HTML' },
	        (0, _skatejs.h)(
	          'pre',
	          null,
	          (0, _skatejs.h)('code', { ref: function ref(e) {
	              return e.innerHTML = format(props.html, 'markup');
	            } })
	        )
	      )
	    )
	  );
	};
	
	var itemCss = (0, _glamor.style)({
	  display: 'inline-block',
	  margin: 0,
	  padding: 0
	});
	
	var itemLinkCss = (0, _glamor.style)({
	  color: '#333',
	  display: 'inline-block',
	  fontSize: 18,
	  margin: 0,
	  padding: 20,
	  textDecoration: 'none',
	  transition: 'background-color .3s ease'
	});
	
	var itemLinkHover = (0, _glamor.hover)({
	  backgroundColor: '#eee'
	});
	
	var Item = exports.Item = function Item(props, chren) {
	  return (0, _skatejs.h)(
	    'li',
	    itemCss,
	    (0, _skatejs.h)(Css, { 'for': [itemCss, itemLinkCss, itemLinkHover] }),
	    props.external ? (0, _skatejs.h)(
	      'a',
	      _extends({}, props, itemLinkCss, itemLinkHover),
	      chren
	    ) : (0, _skatejs.h)(
	      Link,
	      _extends({}, props, itemLinkCss, itemLinkHover),
	      chren
	    )
	  );
	};

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.compose = exports.merge = exports.$ = exports.style = exports.presets = exports.keyframes = exports.fontFace = exports.insertGlobal = exports.insertRule = exports.plugins = exports.styleSheet = undefined;
	exports.speedy = speedy;
	exports.simulations = simulations;
	exports.simulate = simulate;
	exports.cssLabels = cssLabels;
	exports.isLikeRule = isLikeRule;
	exports.idFor = idFor;
	exports.css = css;
	exports.rehydrate = rehydrate;
	exports.flush = flush;
	exports.select = select;
	exports.parent = parent;
	exports.media = media;
	exports.pseudo = pseudo;
	exports.active = active;
	exports.any = any;
	exports.checked = checked;
	exports.disabled = disabled;
	exports.empty = empty;
	exports.enabled = enabled;
	exports._default = _default;
	exports.first = first;
	exports.firstChild = firstChild;
	exports.firstOfType = firstOfType;
	exports.fullscreen = fullscreen;
	exports.focus = focus;
	exports.hover = hover;
	exports.indeterminate = indeterminate;
	exports.inRange = inRange;
	exports.invalid = invalid;
	exports.lastChild = lastChild;
	exports.lastOfType = lastOfType;
	exports.left = left;
	exports.link = link;
	exports.onlyChild = onlyChild;
	exports.onlyOfType = onlyOfType;
	exports.optional = optional;
	exports.outOfRange = outOfRange;
	exports.readOnly = readOnly;
	exports.readWrite = readWrite;
	exports.required = required;
	exports.right = right;
	exports.root = root;
	exports.scope = scope;
	exports.target = target;
	exports.valid = valid;
	exports.visited = visited;
	exports.dir = dir;
	exports.lang = lang;
	exports.not = not;
	exports.nthChild = nthChild;
	exports.nthLastChild = nthLastChild;
	exports.nthLastOfType = nthLastOfType;
	exports.nthOfType = nthOfType;
	exports.after = after;
	exports.before = before;
	exports.firstLetter = firstLetter;
	exports.firstLine = firstLine;
	exports.selection = selection;
	exports.backdrop = backdrop;
	exports.placeholder = placeholder;
	exports.cssFor = cssFor;
	exports.attribsFor = attribsFor;
	
	var _objectAssign = __webpack_require__(299);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _sheet = __webpack_require__(300);
	
	var _CSSPropertyOperations = __webpack_require__(301);
	
	var _clean = __webpack_require__(311);
	
	var _clean2 = _interopRequireDefault(_clean);
	
	var _plugins = __webpack_require__(312);
	
	var _hash = __webpack_require__(314);
	
	var _hash2 = _interopRequireDefault(_hash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	/* stylesheet */
	
	
	var styleSheet = exports.styleSheet = new _sheet.StyleSheet();
	// an isomorphic StyleSheet shim. hides all the nitty gritty.
	
	// /**************** LIFTOFF IN 3... 2... 1... ****************/
	styleSheet.inject(); //eslint-disable-line indent
	// /****************      TO THE MOOOOOOON     ****************/
	
	// convenience function to toggle speedy
	function speedy(bool) {
	  return styleSheet.speedy(bool);
	}
	
	// plugins
	// we include these by default
	var plugins = exports.plugins = styleSheet.plugins = new _plugins.PluginSet([_plugins.prefixes, _plugins.fallbacks]);
	plugins.media = new _plugins.PluginSet(); // neat! media, font-face, keyframes
	plugins.fontFace = new _plugins.PluginSet();
	plugins.keyframes = new _plugins.PluginSet([_plugins.prefixes]);
	
	// define some constants
	
	var isDev = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV;
	var isTest = process.env.NODE_ENV === 'test';
	
	/**** simulations  ****/
	
	// a flag to enable simulation meta tags on dom nodes
	// defaults to true in dev mode. recommend *not* to
	// toggle often.
	var canSimulate = isDev;
	
	// we use these flags for issuing warnings when simulate is called
	// in prod / in incorrect order
	var warned1 = false,
	    warned2 = false;
	
	// toggles simulation activity. shouldn't be needed in most cases
	function simulations() {
	  var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
	
	  canSimulate = !!bool;
	}
	
	// use this on dom nodes to 'simulate' pseudoclasses
	// <div {...hover({ color: 'red' })} {...simulate('hover', 'visited')}>...</div>
	// you can even send in some weird ones, as long as it's in simple format
	// and matches an existing rule on the element
	// eg simulate('nthChild2', ':hover:active') etc
	function simulate() {
	  for (var _len = arguments.length, pseudos = Array(_len), _key = 0; _key < _len; _key++) {
	    pseudos[_key] = arguments[_key];
	  }
	
	  pseudos = (0, _clean2.default)(pseudos);
	  if (!pseudos) return {};
	  if (!canSimulate) {
	    if (!warned1) {
	      console.warn('can\'t simulate without once calling simulations(true)'); //eslint-disable-line no-console
	      warned1 = true;
	    }
	    if (!isDev && !isTest && !warned2) {
	      console.warn('don\'t use simulation outside dev'); //eslint-disable-line no-console
	      warned2 = true;
	    }
	    return {};
	  }
	  return pseudos.reduce(function (o, p) {
	    return o['data-simulate-' + simple(p)] = '', o;
	  }, {});
	}
	
	/**** labels ****/
	// toggle for debug labels.
	// *shouldn't* have to mess with this manually
	var hasLabels = isDev;
	
	function cssLabels(bool) {
	  hasLabels = !!bool;
	}
	
	// takes a string, converts to lowercase, strips out nonalphanumeric.
	function simple(str) {
	  return str.toLowerCase().replace(/[^a-z0-9]/g, '');
	}
	
	// hashes a string to something 'unique'
	// we use this to generate ids for styles
	
	
	function hashify() {
	  var str = '';
	
	  for (var _len2 = arguments.length, objs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    objs[_key2] = arguments[_key2];
	  }
	
	  for (var i = 0; i < objs.length; i++) {
	    str += JSON.stringify(objs[i]);
	  }
	  return (0, _hash2.default)(str).toString(36);
	}
	
	// of shape { 'data-css-<id>': '' }
	function isLikeRule(rule) {
	  var keys = Object.keys(rule).filter(function (x) {
	    return x !== 'toString';
	  });
	  if (keys.length !== 1) {
	    return false;
	  }
	  return !!/data\-css\-([a-zA-Z0-9]+)/.exec(keys[0]);
	}
	
	// extracts id from a { 'data-css-<id>': ''} like object
	function idFor(rule) {
	  var keys = Object.keys(rule).filter(function (x) {
	    return x !== 'toString';
	  });
	  if (keys.length !== 1) throw new Error('not a rule');
	  var regex = /data\-css\-([a-zA-Z0-9]+)/;
	  var match = regex.exec(keys[0]);
	  if (!match) throw new Error('not a rule');
	  return match[1];
	}
	
	function selector(id, path) {
	
	  if (!id) {
	    return path.replace(/\&/g, '');
	  }
	  if (!path) return '.css-' + id + ',[data-css-' + id + ']';
	
	  var x = path.split(',').map(function (x) {
	    return x.indexOf('&') >= 0 ? [x.replace(/\&/mg, '.css-' + id), x.replace(/\&/mg, '[data-css-' + id + ']')].join(',') // todo - make sure each sub selector has an &
	    : '.css-' + id + x + ',[data-css-' + id + ']' + x;
	  }).join(',');
	
	  if (canSimulate && /^\&\:/.exec(path) && !/\s/.exec(path)) {
	    x += ',.css-' + id + '[data-simulate-' + simple(path) + '],[data-css-' + id + '][data-simulate-' + simple(path) + ']';
	  }
	  return x;
	}
	
	function toCSS(_ref) {
	  var selector = _ref.selector,
	      style = _ref.style;
	
	  var result = plugins.transform({ selector: selector, style: style });
	  return result.selector + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';
	}
	
	function deconstruct(style) {
	  // we can be sure it's not infinitely nested here 
	  var plain = void 0,
	      selects = void 0,
	      medias = void 0,
	      supports = void 0;
	  Object.keys(style).forEach(function (key) {
	    if (key.indexOf('&') >= 0) {
	      selects = selects || {};
	      selects[key] = style[key];
	    } else if (key.indexOf('@media') === 0) {
	      medias = medias || {};
	      medias[key] = deconstruct(style[key]);
	    } else if (key.indexOf('@supports') === 0) {
	      supports = supports || {};
	      supports[key] = deconstruct(style[key]);
	    } else if (key === 'label') {
	      if (style.label.length > 0) {
	        plain = plain || {};
	        plain.label = hasLabels ? style.label.join('.') : '';
	      }
	    } else {
	      plain = plain || {};
	      plain[key] = style[key];
	    }
	  });
	  return { plain: plain, selects: selects, medias: medias, supports: supports };
	}
	
	function deconstructedStyleToCSS(id, style) {
	  var css = [];
	
	  // plugins here
	  var plain = style.plain,
	      selects = style.selects,
	      medias = style.medias,
	      supports = style.supports;
	
	  if (plain) {
	    css.push(toCSS({ style: plain, selector: selector(id) }));
	  }
	  if (selects) {
	    Object.keys(selects).forEach(function (key) {
	      return css.push(toCSS({ style: selects[key], selector: selector(id, key) }));
	    });
	  }
	  if (medias) {
	    Object.keys(medias).forEach(function (key) {
	      return css.push(key + '{' + deconstructedStyleToCSS(id, medias[key]).join('') + '}');
	    });
	  }
	  if (supports) {
	    Object.keys(supports).forEach(function (key) {
	      return css.push(key + '{' + deconstructedStyleToCSS(id, supports[key]).join('') + '}');
	    });
	  }
	  return css;
	}
	
	// this cache to track which rules have
	// been inserted into the stylesheet
	var inserted = styleSheet.inserted = {};
	
	// and helpers to insert rules into said styleSheet
	function insert(spec) {
	  if (!inserted[spec.id]) {
	    inserted[spec.id] = true;
	    var deconstructed = deconstruct(spec.style);
	    deconstructedStyleToCSS(spec.id, deconstructed).map(function (cssRule) {
	      return styleSheet.insert(cssRule);
	    });
	  }
	}
	
	// a simple cache to store generated rules
	var registered = styleSheet.registered = {};
	function register(spec) {
	  if (!registered[spec.id]) {
	    registered[spec.id] = spec;
	  }
	}
	
	function _getRegistered(rule) {
	  if (isLikeRule(rule)) {
	    var ret = registered[idFor(rule)];
	    if (ret == null) {
	      throw new Error('[glamor] an unexpected rule cache miss occurred. This is probably a sign of multiple glamor instances in your app. See https://github.com/threepointone/glamor/issues/79');
	    }
	    return ret;
	  }
	  return rule;
	}
	
	// todo - perf
	var ruleCache = {};
	function toRule(spec) {
	  register(spec);
	  insert(spec);
	
	  if (ruleCache[spec.id]) {
	    return ruleCache[spec.id];
	  }
	
	  var ret = _defineProperty({}, 'data-css-' + spec.id, hasLabels ? spec.label || '' : '');
	  Object.defineProperty(ret, 'toString', {
	    enumerable: false, value: function value() {
	      return 'css-' + spec.id;
	    }
	  });
	  ruleCache[spec.id] = ret;
	  return ret;
	}
	
	function log() {
	  //eslint-disable-line no-unused-vars
	  console.log(this); //eslint-disable-line no-console
	  return this;
	}
	
	function isSelector(key) {
	  var possibles = [':', '.', '[', '>', ' '],
	      found = false,
	      ch = key.charAt(0);
	  for (var i = 0; i < possibles.length; i++) {
	    if (ch === possibles[i]) {
	      found = true;
	      break;
	    }
	  }
	  return found || key.indexOf('&') >= 0;
	}
	
	function joinSelectors(a, b) {
	  var as = a.split(',').map(function (a) {
	    return !(a.indexOf('&') >= 0) ? '&' + a : a;
	  });
	  var bs = b.split(',').map(function (b) {
	    return !(b.indexOf('&') >= 0) ? '&' + b : b;
	  });
	
	  return bs.reduce(function (arr, b) {
	    return arr.concat(as.map(function (a) {
	      return b.replace(/\&/g, a);
	    }));
	  }, []).join(',');
	}
	
	function joinMediaQueries(a, b) {
	  return a ? '@media ' + a.substring(6) + ' and ' + b.substring(6) : b;
	}
	
	function isMediaQuery(key) {
	  return key.indexOf('@media') === 0;
	}
	
	function isSupports(key) {
	  return key.indexOf('@supports') === 0;
	}
	
	function joinSupports(a, b) {
	  return a ? '@supports ' + a.substring(9) + ' and ' + b.substring(9) : b;
	}
	
	// flatten a nested array
	function flatten(inArr) {
	  var arr = [];
	  for (var i = 0; i < inArr.length; i++) {
	    if (Array.isArray(inArr[i])) arr = arr.concat(flatten(inArr[i]));else arr = arr.concat(inArr[i]);
	  }
	  return arr;
	}
	
	// mutable! modifies dest.
	function build(dest, _ref2) {
	  var _ref2$selector = _ref2.selector,
	      selector = _ref2$selector === undefined ? '' : _ref2$selector,
	      _ref2$mq = _ref2.mq,
	      mq = _ref2$mq === undefined ? '' : _ref2$mq,
	      _ref2$supp = _ref2.supp,
	      supp = _ref2$supp === undefined ? '' : _ref2$supp,
	      _ref2$src = _ref2.src,
	      src = _ref2$src === undefined ? {} : _ref2$src;
	
	
	  if (!Array.isArray(src)) {
	    src = [src];
	  }
	  src = flatten(src);
	
	  src.forEach(function (_src) {
	    if (isLikeRule(_src)) {
	      var reg = _getRegistered(_src);
	      if (reg.type !== 'css') {
	        throw new Error('cannot merge this rule');
	      }
	      _src = reg.style;
	    }
	    _src = (0, _clean2.default)(_src);
	    if (_src && _src.composes) {
	      build(dest, { selector: selector, mq: mq, supp: supp, src: _src.composes });
	    }
	    Object.keys(_src || {}).forEach(function (key) {
	      if (isSelector(key)) {
	
	        if (key === '::placeholder') {
	          build(dest, { selector: joinSelectors(selector, '::-webkit-input-placeholder'), mq: mq, supp: supp, src: _src[key] });
	          build(dest, { selector: joinSelectors(selector, '::-moz-placeholder'), mq: mq, supp: supp, src: _src[key] });
	          build(dest, { selector: joinSelectors(selector, '::-ms-input-placeholder'), mq: mq, supp: supp, src: _src[key] });
	        }
	
	        build(dest, { selector: joinSelectors(selector, key), mq: mq, supp: supp, src: _src[key] });
	      } else if (isMediaQuery(key)) {
	        build(dest, { selector: selector, mq: joinMediaQueries(mq, key), supp: supp, src: _src[key] });
	      } else if (isSupports(key)) {
	        build(dest, { selector: selector, mq: mq, supp: joinSupports(supp, key), src: _src[key] });
	      } else if (key === 'composes') {
	        // ignore, we already dealth with it
	      } else {
	        var _dest = dest;
	        if (supp) {
	          _dest[supp] = _dest[supp] || {};
	          _dest = _dest[supp];
	        }
	        if (mq) {
	          _dest[mq] = _dest[mq] || {};
	          _dest = _dest[mq];
	        }
	        if (selector) {
	          _dest[selector] = _dest[selector] || {};
	          _dest = _dest[selector];
	        }
	
	        if (key === 'label') {
	          if (hasLabels) {
	            dest.label = dest.label.concat(_src.label);
	          }
	        } else {
	          _dest[key] = _src[key];
	        }
	      }
	    });
	  });
	}
	
	function _css(rules) {
	  var style = { label: [] };
	  build(style, { src: rules }); // mutative! but worth it. 
	
	  var spec = {
	    id: hashify(style),
	    style: style, label: hasLabels ? style.label.join('.') : '',
	    type: 'css'
	  };
	  return toRule(spec);
	}
	
	var nullrule = {
	  // 'data-css-nil': ''
	};
	Object.defineProperty(nullrule, 'toString', {
	  enumerable: false, value: function value() {
	    return 'css-nil';
	  }
	});
	
	var inputCaches = typeof WeakMap !== 'undefined' ? [nullrule, new WeakMap(), new WeakMap(), new WeakMap()] : [nullrule];
	
	var warnedWeakMapError = false;
	function multiIndexCache(fn) {
	  return function (args) {
	    if (inputCaches[args.length]) {
	      var coi = inputCaches[args.length];
	      var ctr = 0;
	      while (ctr < args.length - 1) {
	        if (!coi.has(args[ctr])) {
	          coi.set(args[ctr], new WeakMap());
	        }
	        coi = coi.get(args[ctr]);
	        ctr++;
	      }
	      if (coi.has(args[args.length - 1])) {
	        var ret = coi.get(args[ctr]);
	
	        if (registered[ret.toString().substring(4)]) {
	          // make sure it hasn't been flushed 
	          return ret;
	        }
	      }
	    }
	    var value = fn(args);
	    if (inputCaches[args.length]) {
	      var _ctr = 0,
	          _coi = inputCaches[args.length];
	      while (_ctr < args.length - 1) {
	        _coi = _coi.get(args[_ctr]);
	        _ctr++;
	      }
	      try {
	        _coi.set(args[_ctr], value);
	      } catch (err) {
	        if (isDev && !warnedWeakMapError) {
	          var _console;
	
	          warnedWeakMapError = true;
	          (_console = console).warn.apply(_console, ['failed setting the WeakMap cache for args:'].concat(_toConsumableArray(args))); // eslint-disable-line no-console
	          console.warn('this should NOT happen, please file a bug on the github repo.'); // eslint-disable-line no-console
	        }
	      }
	    }
	    return value;
	  };
	}
	
	var cachedCss = typeof WeakMap !== 'undefined' ? multiIndexCache(_css) : _css;
	
	function css() {
	  for (var _len3 = arguments.length, rules = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
	    rules[_key3] = arguments[_key3];
	  }
	
	  if (rules[0] && rules[0].length && rules[0].raw) {
	    throw new Error('you forgot to include glamor/babel in your babel plugins.');
	  }
	
	  rules = (0, _clean2.default)(rules);
	  if (!rules) {
	    return nullrule;
	  }
	
	  return cachedCss(rules);
	}
	
	css.insert = function (css) {
	  var spec = {
	    id: hashify(css),
	    css: css,
	    type: 'raw'
	  };
	  register(spec);
	  if (!inserted[spec.id]) {
	    styleSheet.insert(spec.css);
	    inserted[spec.id] = true;
	  }
	};
	
	var insertRule = exports.insertRule = css.insert;
	
	css.global = function (selector, style) {
	  return css.insert(toCSS({ selector: selector, style: style }));
	};
	
	var insertGlobal = exports.insertGlobal = css.global;
	
	function insertKeyframe(spec) {
	  if (!inserted[spec.id]) {
	    (function () {
	      var inner = Object.keys(spec.keyframes).map(function (kf) {
	        var result = plugins.keyframes.transform({ id: spec.id, name: kf, style: spec.keyframes[kf] });
	        return result.name + '{' + (0, _CSSPropertyOperations.createMarkupForStyles)(result.style) + '}';
	      }).join('');
	
	      ['-webkit-', '-moz-', '-o-', ''].forEach(function (prefix) {
	        return styleSheet.insert('@' + prefix + 'keyframes ' + (spec.name + '_' + spec.id) + '{' + inner + '}');
	      });
	
	      inserted[spec.id] = true;
	    })();
	  }
	}
	css.keyframes = function (name, kfs) {
	  if (!kfs) {
	    kfs = name, name = 'animation';
	  }
	
	  // do not ignore empty keyframe definitions for now.
	  kfs = (0, _clean2.default)(kfs) || {};
	  var spec = {
	    id: hashify(name, kfs),
	    type: 'keyframes',
	    name: name,
	    keyframes: kfs
	  };
	  register(spec);
	  insertKeyframe(spec);
	  return name + '_' + spec.id;
	};
	
	// we don't go all out for fonts as much, giving a simple font loading strategy
	// use a fancier lib if you need moar power
	css.fontFace = function (font) {
	  font = (0, _clean2.default)(font);
	  var spec = {
	    id: hashify(font),
	    type: 'font-face',
	    font: font
	  };
	  register(spec);
	  insertFontFace(spec);
	
	  return font.fontFamily;
	};
	
	var fontFace = exports.fontFace = css.fontFace;
	var keyframes = exports.keyframes = css.keyframes;
	
	function insertFontFace(spec) {
	  if (!inserted[spec.id]) {
	    styleSheet.insert('@font-face{' + (0, _CSSPropertyOperations.createMarkupForStyles)(spec.font) + '}');
	    inserted[spec.id] = true;
	  }
	}
	
	// rehydrate the insertion cache with ids sent from
	// renderStatic / renderStaticOptimized
	function rehydrate(ids) {
	  // load up ids
	  (0, _objectAssign2.default)(inserted, ids.reduce(function (o, i) {
	    return o[i] = true, o;
	  }, {}));
	  // assume css loaded separately
	}
	
	// clears out the cache and empties the stylesheet
	// best for tests, though there might be some value for SSR.
	
	function flush() {
	  inserted = styleSheet.inserted = {};
	  registered = styleSheet.registered = {};
	  ruleCache = {};
	  styleSheet.flush();
	  styleSheet.inject();
	}
	
	var presets = exports.presets = {
	  mobile: '(min-width: 400px)',
	  Mobile: '@media (min-width: 400px)',
	  phablet: '(min-width: 550px)',
	  Phablet: '@media (min-width: 550px)',
	  tablet: '(min-width: 750px)',
	  Tablet: '@media (min-width: 750px)',
	  desktop: '(min-width: 1000px)',
	  Desktop: '@media (min-width: 1000px)',
	  hd: '(min-width: 1200px)',
	  Hd: '@media (min-width: 1200px)'
	};
	
	var style = exports.style = css;
	
	function select(selector) {
	  for (var _len4 = arguments.length, styles = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
	    styles[_key4 - 1] = arguments[_key4];
	  }
	
	  if (!selector) {
	    return style(styles);
	  }
	  return css(_defineProperty({}, selector, styles));
	}
	var $ = exports.$ = select;
	
	function parent(selector) {
	  for (var _len5 = arguments.length, styles = Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
	    styles[_key5 - 1] = arguments[_key5];
	  }
	
	  return css(_defineProperty({}, selector + ' &', styles));
	}
	
	var merge = exports.merge = css;
	var compose = exports.compose = css;
	
	function media(query) {
	  for (var _len6 = arguments.length, rules = Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
	    rules[_key6 - 1] = arguments[_key6];
	  }
	
	  return css(_defineProperty({}, '@media ' + query, rules));
	}
	
	function pseudo(selector) {
	  for (var _len7 = arguments.length, styles = Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
	    styles[_key7 - 1] = arguments[_key7];
	  }
	
	  return css(_defineProperty({}, selector, styles));
	}
	
	// allllll the pseudoclasses
	
	function active(x) {
	  return pseudo(':active', x);
	}
	
	function any(x) {
	  return pseudo(':any', x);
	}
	
	function checked(x) {
	  return pseudo(':checked', x);
	}
	
	function disabled(x) {
	  return pseudo(':disabled', x);
	}
	
	function empty(x) {
	  return pseudo(':empty', x);
	}
	
	function enabled(x) {
	  return pseudo(':enabled', x);
	}
	
	function _default(x) {
	  return pseudo(':default', x); // note '_default' name
	}
	
	function first(x) {
	  return pseudo(':first', x);
	}
	
	function firstChild(x) {
	  return pseudo(':first-child', x);
	}
	
	function firstOfType(x) {
	  return pseudo(':first-of-type', x);
	}
	
	function fullscreen(x) {
	  return pseudo(':fullscreen', x);
	}
	
	function focus(x) {
	  return pseudo(':focus', x);
	}
	
	function hover(x) {
	  return pseudo(':hover', x);
	}
	
	function indeterminate(x) {
	  return pseudo(':indeterminate', x);
	}
	
	function inRange(x) {
	  return pseudo(':in-range', x);
	}
	
	function invalid(x) {
	  return pseudo(':invalid', x);
	}
	
	function lastChild(x) {
	  return pseudo(':last-child', x);
	}
	
	function lastOfType(x) {
	  return pseudo(':last-of-type', x);
	}
	
	function left(x) {
	  return pseudo(':left', x);
	}
	
	function link(x) {
	  return pseudo(':link', x);
	}
	
	function onlyChild(x) {
	  return pseudo(':only-child', x);
	}
	
	function onlyOfType(x) {
	  return pseudo(':only-of-type', x);
	}
	
	function optional(x) {
	  return pseudo(':optional', x);
	}
	
	function outOfRange(x) {
	  return pseudo(':out-of-range', x);
	}
	
	function readOnly(x) {
	  return pseudo(':read-only', x);
	}
	
	function readWrite(x) {
	  return pseudo(':read-write', x);
	}
	
	function required(x) {
	  return pseudo(':required', x);
	}
	
	function right(x) {
	  return pseudo(':right', x);
	}
	
	function root(x) {
	  return pseudo(':root', x);
	}
	
	function scope(x) {
	  return pseudo(':scope', x);
	}
	
	function target(x) {
	  return pseudo(':target', x);
	}
	
	function valid(x) {
	  return pseudo(':valid', x);
	}
	
	function visited(x) {
	  return pseudo(':visited', x);
	}
	
	// parameterized pseudoclasses
	function dir(p, x) {
	  return pseudo(':dir(' + p + ')', x);
	}
	function lang(p, x) {
	  return pseudo(':lang(' + p + ')', x);
	}
	function not(p, x) {
	  // should this be a plugin?
	  var selector = p.split(',').map(function (x) {
	    return x.trim();
	  }).map(function (x) {
	    return ':not(' + x + ')';
	  });
	  if (selector.length === 1) {
	    return pseudo(':not(' + p + ')', x);
	  }
	  return select(selector.join(''), x);
	}
	function nthChild(p, x) {
	  return pseudo(':nth-child(' + p + ')', x);
	}
	function nthLastChild(p, x) {
	  return pseudo(':nth-last-child(' + p + ')', x);
	}
	function nthLastOfType(p, x) {
	  return pseudo(':nth-last-of-type(' + p + ')', x);
	}
	function nthOfType(p, x) {
	  return pseudo(':nth-of-type(' + p + ')', x);
	}
	
	// pseudoelements
	function after(x) {
	  return pseudo('::after', x);
	}
	function before(x) {
	  return pseudo('::before', x);
	}
	function firstLetter(x) {
	  return pseudo('::first-letter', x);
	}
	function firstLine(x) {
	  return pseudo('::first-line', x);
	}
	function selection(x) {
	  return pseudo('::selection', x);
	}
	function backdrop(x) {
	  return pseudo('::backdrop', x);
	}
	function placeholder(x) {
	  // https://github.com/threepointone/glamor/issues/14
	  return css({ '::placeholder': x });
	}
	
	/*** helpers for web components ***/
	// https://github.com/threepointone/glamor/issues/16
	
	function cssFor() {
	  for (var _len8 = arguments.length, rules = Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
	    rules[_key8] = arguments[_key8];
	  }
	
	  rules = (0, _clean2.default)(rules);
	  return rules ? rules.map(function (r) {
	    var style = { label: [] };
	    build(style, { src: r }); // mutative! but worth it.   
	    return deconstructedStyleToCSS(hashify(style), deconstruct(style)).join('');
	  }).join('') : '';
	}
	
	function attribsFor() {
	  for (var _len9 = arguments.length, rules = Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
	    rules[_key9] = arguments[_key9];
	  }
	
	  rules = (0, _clean2.default)(rules);
	  var htmlAttributes = rules ? rules.map(function (rule) {
	    idFor(rule); // throwaway check for rule
	    var key = Object.keys(rule)[0],
	        value = rule[key];
	    return key + '="' + (value || '') + '"';
	  }).join(' ') : '';
	
	  return htmlAttributes;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298)))

/***/ },
/* 298 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 299 */
/***/ function(module, exports) {

	/*
	object-assign
	(c) Sindre Sorhus
	@license MIT
	*/
	
	'use strict';
	/* eslint-disable no-unused-vars */
	var getOwnPropertySymbols = Object.getOwnPropertySymbols;
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;
	
	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}
	
		return Object(val);
	}
	
	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}
	
			// Detect buggy property enumeration order in older V8 versions.
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}
	
			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}
	
			return true;
		} catch (err) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}
	
	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;
	
		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);
	
			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}
	
			if (getOwnPropertySymbols) {
				symbols = getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}
	
		return to;
	};


/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.StyleSheet = StyleSheet;
	
	var _objectAssign = __webpack_require__(299);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	/* 
	
	high performance StyleSheet for css-in-js systems 
	
	- uses multiple style tags behind the scenes for millions of rules 
	- uses `insertRule` for appending in production for *much* faster performance
	- 'polyfills' on server side 
	
	
	// usage
	
	import StyleSheet from 'glamor/lib/sheet'
	let styleSheet = new StyleSheet()
	
	styleSheet.inject() 
	- 'injects' the stylesheet into the page (or into memory if on server)
	
	styleSheet.insert('#box { border: 1px solid red; }') 
	- appends a css rule into the stylesheet 
	
	styleSheet.flush() 
	- empties the stylesheet of all its contents
	
	
	*/
	
	function last(arr) {
	  return arr[arr.length - 1];
	}
	
	function sheetForTag(tag) {
	  if (tag.sheet) {
	    return tag.sheet;
	  }
	
	  // this weirdness brought to you by firefox 
	  for (var i = 0; i < document.styleSheets.length; i++) {
	    if (document.styleSheets[i].ownerNode === tag) {
	      return document.styleSheets[i];
	    }
	  }
	}
	
	var isBrowser = typeof window !== 'undefined';
	var isDev = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV; //(x => (x === 'development') || !x)(process.env.NODE_ENV)
	var isTest = process.env.NODE_ENV === 'test';
	
	var oldIE = function () {
	  if (isBrowser) {
	    var div = document.createElement('div');
	    div.innerHTML = '<!--[if lt IE 10]><i></i><![endif]-->';
	    return div.getElementsByTagName('i').length === 1;
	  }
	}();
	
	function makeStyleTag() {
	  var tag = document.createElement('style');
	  tag.type = 'text/css';
	  tag.setAttribute('data-glamor', '');
	  tag.appendChild(document.createTextNode(''));
	  (document.head || document.getElementsByTagName('head')[0]).appendChild(tag);
	  return tag;
	}
	
	function StyleSheet() {
	  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	      _ref$speedy = _ref.speedy,
	      speedy = _ref$speedy === undefined ? !isDev && !isTest : _ref$speedy,
	      _ref$maxLength = _ref.maxLength,
	      maxLength = _ref$maxLength === undefined ? isBrowser && oldIE ? 4000 : 65000 : _ref$maxLength;
	
	  this.isSpeedy = speedy; // the big drawback here is that the css won't be editable in devtools
	  this.sheet = undefined;
	  this.tags = [];
	  this.maxLength = maxLength;
	  this.ctr = 0;
	}
	
	(0, _objectAssign2.default)(StyleSheet.prototype, {
	  getSheet: function getSheet() {
	    return sheetForTag(last(this.tags));
	  },
	  inject: function inject() {
	    var _this = this;
	
	    if (this.injected) {
	      throw new Error('already injected stylesheet!');
	    }
	    if (isBrowser) {
	      this.tags[0] = makeStyleTag();
	    } else {
	      // server side 'polyfill'. just enough behavior to be useful.
	      this.sheet = {
	        cssRules: [],
	        insertRule: function insertRule(rule) {
	          // enough 'spec compliance' to be able to extract the rules later  
	          // in other words, just the cssText field 
	          _this.sheet.cssRules.push({ cssText: rule });
	        }
	      };
	    }
	    this.injected = true;
	  },
	  speedy: function speedy(bool) {
	    if (this.ctr !== 0) {
	      throw new Error('cannot change speedy mode after inserting any rule to sheet. Either call speedy(' + bool + ') earlier in your app, or call flush() before speedy(' + bool + ')');
	    }
	    this.isSpeedy = !!bool;
	  },
	  _insert: function _insert(rule) {
	    // this weirdness for perf, and chrome's weird bug 
	    // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
	    try {
	      var sheet = this.getSheet();
	      sheet.insertRule(rule, rule.indexOf('@import') !== -1 ? 0 : sheet.cssRules.length);
	    } catch (e) {
	      if (isDev) {
	        // might need beter dx for this 
	        console.warn('whoops, illegal rule inserted', rule); //eslint-disable-line no-console
	      }
	    }
	  },
	  insert: function insert(rule) {
	
	    if (isBrowser) {
	      // this is the ultrafast version, works across browsers 
	      if (this.isSpeedy && this.getSheet().insertRule) {
	        this._insert(rule);
	      }
	      // more browser weirdness. I don't even know    
	      // else if(this.tags.length > 0 && this.tags::last().styleSheet) {      
	      //   this.tags::last().styleSheet.cssText+= rule
	      // }
	      else {
	          if (rule.indexOf('@import') !== -1) {
	            var tag = last(this.tags);
	            tag.insertBefore(document.createTextNode(rule), tag.firstChild);
	          } else {
	            last(this.tags).appendChild(document.createTextNode(rule));
	          }
	        }
	    } else {
	      // server side is pretty simple         
	      this.sheet.insertRule(rule, rule.indexOf('@import') !== -1 ? 0 : this.sheet.cssRules.length);
	    }
	
	    this.ctr++;
	    if (isBrowser && this.ctr % this.maxLength === 0) {
	      this.tags.push(makeStyleTag());
	    }
	    return this.ctr - 1;
	  },
	
	  // commenting this out till we decide on v3's decision 
	  // _replace(index, rule) {
	  //   // this weirdness for perf, and chrome's weird bug 
	  //   // https://stackoverflow.com/questions/20007992/chrome-suddenly-stopped-accepting-insertrule
	  //   try {  
	  //     let sheet = this.getSheet()        
	  //     sheet.deleteRule(index) // todo - correct index here     
	  //     sheet.insertRule(rule, index)
	  //   }
	  //   catch(e) {
	  //     if(isDev) {
	  //       // might need beter dx for this 
	  //       console.warn('whoops, problem replacing rule', rule) //eslint-disable-line no-console
	  //     }          
	  //   }          
	
	  // }
	  // replace(index, rule) {
	  //   if(isBrowser) {
	  //     if(this.isSpeedy && this.getSheet().insertRule) {
	  //       this._replace(index, rule)
	  //     }
	  //     else {
	  //       let _slot = Math.floor((index  + this.maxLength) / this.maxLength) - 1        
	  //       let _index = (index % this.maxLength) + 1
	  //       let tag = this.tags[_slot]
	  //       tag.replaceChild(document.createTextNode(rule), tag.childNodes[_index])
	  //     }
	  //   }
	  //   else {
	  //     let rules = this.sheet.cssRules
	  //     this.sheet.cssRules = [ ...rules.slice(0, index), { cssText: rule }, ...rules.slice(index + 1) ]
	  //   }
	  // }
	  delete: function _delete(index) {
	    // we insert a blank rule when 'deleting' so previously returned indexes remain stable
	    return this.replace(index, '');
	  },
	  flush: function flush() {
	    if (isBrowser) {
	      this.tags.forEach(function (tag) {
	        return tag.parentNode.removeChild(tag);
	      });
	      this.tags = [];
	      this.sheet = null;
	      this.ctr = 0;
	      // todo - look for remnants in document.styleSheets
	    } else {
	      // simpler on server 
	      this.sheet.cssRules = [];
	    }
	    this.injected = false;
	  },
	  rules: function rules() {
	    if (!isBrowser) {
	      return this.sheet.cssRules;
	    }
	    var arr = [];
	    this.tags.forEach(function (tag) {
	      return arr.splice.apply(arr, [arr.length, 0].concat(_toConsumableArray(Array.from(sheetForTag(tag).cssRules))));
	    });
	    return arr;
	  }
	});
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298)))

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.processStyleName = undefined;
	exports.createMarkupForStyles = createMarkupForStyles;
	
	var _camelizeStyleName = __webpack_require__(302);
	
	var _camelizeStyleName2 = _interopRequireDefault(_camelizeStyleName);
	
	var _dangerousStyleValue = __webpack_require__(304);
	
	var _dangerousStyleValue2 = _interopRequireDefault(_dangerousStyleValue);
	
	var _hyphenateStyleName = __webpack_require__(308);
	
	var _hyphenateStyleName2 = _interopRequireDefault(_hyphenateStyleName);
	
	var _memoizeStringOnly = __webpack_require__(310);
	
	var _memoizeStringOnly2 = _interopRequireDefault(_memoizeStringOnly);
	
	var _warning = __webpack_require__(306);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var processStyleName = exports.processStyleName = (0, _memoizeStringOnly2.default)(_hyphenateStyleName2.default); /**
	                                                                                                                   * Copyright 2013-present, Facebook, Inc.
	                                                                                                                   * All rights reserved.
	                                                                                                                   *
	                                                                                                                   * This source code is licensed under the BSD-style license found in the
	                                                                                                                   * LICENSE file in the root directory of this source tree. An additional grant
	                                                                                                                   * of patent rights can be found in the PATENTS file in the same directory.
	                                                                                                                   *
	                                                                                                                   * @providesModule CSSPropertyOperations
	                                                                                                                   */
	
	if (process.env.NODE_ENV !== 'production') {
	  var warnValidStyle;
	
	  (function () {
	    // 'msTransform' is correct, but the other prefixes should be capitalized
	    var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
	
	    // style values shouldn't contain a semicolon
	    var badStyleValueWithSemicolonPattern = /;\s*$/;
	
	    var warnedStyleNames = {};
	    var warnedStyleValues = {};
	    var warnedForNaNValue = false;
	
	    var warnHyphenatedStyleName = function warnHyphenatedStyleName(name, owner) {
	      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	        return;
	      }
	
	      warnedStyleNames[name] = true;
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Unsupported style property %s. Did you mean %s?%s', name, (0, _camelizeStyleName2.default)(name), checkRenderMessage(owner)) : void 0;
	    };
	
	    var warnBadVendoredStyleName = function warnBadVendoredStyleName(name, owner) {
	      if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	        return;
	      }
	
	      warnedStyleNames[name] = true;
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	    };
	
	    var warnStyleValueWithSemicolon = function warnStyleValueWithSemicolon(name, value, owner) {
	      if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	        return;
	      }
	
	      warnedStyleValues[value] = true;
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	    };
	
	    var warnStyleValueIsNaN = function warnStyleValueIsNaN(name, value, owner) {
	      if (warnedForNaNValue) {
	        return;
	      }
	
	      warnedForNaNValue = true;
	      process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	    };
	
	    var checkRenderMessage = function checkRenderMessage(owner) {
	      if (owner) {
	        var name = owner.getName();
	        if (name) {
	          return ' Check the render method of `' + name + '`.';
	        }
	      }
	      return '';
	    };
	
	    /**
	     * @param {string} name
	     * @param {*} value
	     * @param {ReactDOMComponent} component
	     */
	
	    warnValidStyle = function warnValidStyle(name, value, component) {
	      //eslint-disable-line no-var
	      var owner = void 0;
	      if (component) {
	        owner = component._currentElement._owner;
	      }
	      if (name.indexOf('-') > -1) {
	        warnHyphenatedStyleName(name, owner);
	      } else if (badVendoredStyleNamePattern.test(name)) {
	        warnBadVendoredStyleName(name, owner);
	      } else if (badStyleValueWithSemicolonPattern.test(value)) {
	        warnStyleValueWithSemicolon(name, value, owner);
	      }
	
	      if (typeof value === 'number' && isNaN(value)) {
	        warnStyleValueIsNaN(name, value, owner);
	      }
	    };
	  })();
	}
	
	/**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	
	function createMarkupForStyles(styles, component) {
	  var serialized = '';
	  for (var styleName in styles) {
	    var isCustomProp = styleName.indexOf('--') === 0;
	    if (!styles.hasOwnProperty(styleName)) {
	      continue;
	    }
	    var styleValue = styles[styleName];
	    if (process.env.NODE_ENV !== 'production' && !isCustomProp) {
	      warnValidStyle(styleName, styleValue, component);
	    }
	    if (styleValue != null) {
	      if (isCustomProp) {
	        serialized += styleName + ':' + styleValue + ';';
	      } else {
	        serialized += processStyleName(styleName) + ':';
	        serialized += (0, _dangerousStyleValue2.default)(styleName, styleValue, component) + ';';
	      }
	    }
	  }
	  return serialized || null;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298)))

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var camelize = __webpack_require__(303);
	
	var msPattern = /^-ms-/;
	
	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}
	
	module.exports = camelizeStyleName;

/***/ },
/* 303 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _hyphenPattern = /-(.)/g;
	
	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}
	
	module.exports = camelize;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _CSSProperty = __webpack_require__(305);
	
	var _CSSProperty2 = _interopRequireDefault(_CSSProperty);
	
	var _warning = __webpack_require__(306);
	
	var _warning2 = _interopRequireDefault(_warning);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */
	
	var isUnitlessNumber = _CSSProperty2.default.isUnitlessNumber;
	var styleWarnings = {};
	
	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901
	
	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }
	
	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }
	
	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}
	
	exports.default = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298)))

/***/ },
/* 305 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */
	
	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */
	
	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,
	
	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};
	
	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}
	
	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];
	
	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});
	
	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};
	
	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};
	
	exports.default = CSSProperty;

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */
	
	'use strict';
	
	var emptyFunction = __webpack_require__(307);
	
	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */
	
	var warning = emptyFunction;
	
	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var printWarning = function printWarning(format) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }
	
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    };
	
	    warning = function warning(condition, format) {
	      if (format === undefined) {
	        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	      }
	
	      if (format.indexOf('Failed Composite propType: ') === 0) {
	        return; // Ignore CompositeComponent proptype check.
	      }
	
	      if (!condition) {
	        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
	          args[_key2 - 2] = arguments[_key2];
	        }
	
	        printWarning.apply(undefined, [format].concat(args));
	      }
	    };
	  })();
	}
	
	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298)))

/***/ },
/* 307 */
/***/ function(module, exports) {

	"use strict";
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */
	
	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}
	
	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};
	
	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};
	
	module.exports = emptyFunction;

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	'use strict';
	
	var hyphenate = __webpack_require__(309);
	
	var msPattern = /^ms-/;
	
	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}
	
	module.exports = hyphenateStyleName;

/***/ },
/* 309 */
/***/ function(module, exports) {

	'use strict';
	
	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */
	
	var _uppercasePattern = /([A-Z])/g;
	
	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}
	
	module.exports = hyphenate;

/***/ },
/* 310 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */
	
	'use strict';
	
	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */
	
	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}
	
	module.exports = memoizeStringOnly;

/***/ },
/* 311 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = clean;
	// Returns true for null, false, undefined and {}
	function isFalsy(value) {
	  return value === null || value === undefined || value === false || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && Object.keys(value).length === 0;
	}
	
	function cleanObject(object) {
	  if (isFalsy(object)) return null;
	  if ((typeof object === 'undefined' ? 'undefined' : _typeof(object)) !== 'object') return object;
	
	  var acc = {},
	      keys = Object.keys(object),
	      hasFalsy = false;
	  for (var i = 0; i < keys.length; i++) {
	    var value = object[keys[i]];
	    var filteredValue = clean(value);
	    if (filteredValue === null || filteredValue !== value) {
	      hasFalsy = true;
	    }
	    if (filteredValue !== null) {
	      acc[keys[i]] = filteredValue;
	    }
	  }
	  return Object.keys(acc).length === 0 ? null : hasFalsy ? acc : object;
	}
	
	function cleanArray(rules) {
	  var hasFalsy = false;
	  var filtered = [];
	  rules.forEach(function (rule) {
	    var filteredRule = clean(rule);
	    if (filteredRule === null || filteredRule !== rule) {
	      hasFalsy = true;
	    }
	    if (filteredRule !== null) {
	      filtered.push(filteredRule);
	    }
	  });
	  return filtered.length == 0 ? null : hasFalsy ? filtered : rules;
	}
	
	// Takes style array or object provided by user and clears all the falsy data 
	// If there is no styles left after filtration returns null
	function clean(input) {
	  return Array.isArray(input) ? cleanArray(input) : cleanObject(input);
	}

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.PluginSet = PluginSet;
	exports.fallbacks = fallbacks;
	exports.prefixes = prefixes;
	
	var _objectAssign = __webpack_require__(299);
	
	var _objectAssign2 = _interopRequireDefault(_objectAssign);
	
	var _CSSPropertyOperations = __webpack_require__(301);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var isDev = function (x) {
	  return x === 'development' || !x;
	}(process.env.NODE_ENV);
	
	function PluginSet(initial) {
	  this.fns = initial || [];
	}
	
	(0, _objectAssign2.default)(PluginSet.prototype, {
	  add: function add() {
	    var _this = this;
	
	    for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
	      fns[_key] = arguments[_key];
	    }
	
	    fns.forEach(function (fn) {
	      if (_this.fns.indexOf(fn) >= 0) {
	        if (isDev) {
	          console.warn('adding the same plugin again, ignoring'); //eslint-disable-line no-console
	        }
	      } else {
	        _this.fns = [fn].concat(_this.fns);
	      }
	    });
	  },
	  remove: function remove(fn) {
	    this.fns = this.fns.filter(function (x) {
	      return x !== fn;
	    });
	  },
	  clear: function clear() {
	    this.fns = [];
	  },
	  transform: function transform(o) {
	    return this.fns.reduce(function (o, fn) {
	      return fn(o);
	    }, o);
	  }
	});
	
	function fallbacks(node) {
	  var hasArray = Object.keys(node.style).map(function (x) {
	    return Array.isArray(node.style[x]);
	  }).indexOf(true) >= 0;
	  if (hasArray) {
	    var _ret = function () {
	      var style = node.style;
	
	      var flattened = Object.keys(style).reduce(function (o, key) {
	        o[key] = Array.isArray(style[key]) ? style[key].join('; ' + (0, _CSSPropertyOperations.processStyleName)(key) + ': ') : style[key];
	        return o;
	      }, {});
	      // todo - 
	      // flatten arrays which haven't been flattened yet 
	      return {
	        v: (0, _objectAssign2.default)({}, node, { style: flattened })
	      };
	    }();
	
	    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	  }
	  return node;
	}
	
	var prefixAll = __webpack_require__(313);
	
	function prefixes(node) {
	  return (0, _objectAssign2.default)({}, node, { style: prefixAll(node.style) });
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298)))

/***/ },
/* 313 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	(function (global, factory) {
	  ( false ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : global.InlineStylePrefixAll = factory();
	})(undefined, function () {
	  'use strict';
	
	  var babelHelpers = {};
	
	  babelHelpers.classCallCheck = function (instance, Constructor) {
	    if (!(instance instanceof Constructor)) {
	      throw new TypeError("Cannot call a class as a function");
	    }
	  };
	
	  babelHelpers.createClass = function () {
	    function defineProperties(target, props) {
	      for (var i = 0; i < props.length; i++) {
	        var descriptor = props[i];
	        descriptor.enumerable = descriptor.enumerable || false;
	        descriptor.configurable = true;
	        if ("value" in descriptor) descriptor.writable = true;
	        Object.defineProperty(target, descriptor.key, descriptor);
	      }
	    }
	
	    return function (Constructor, protoProps, staticProps) {
	      if (protoProps) defineProperties(Constructor.prototype, protoProps);
	      if (staticProps) defineProperties(Constructor, staticProps);
	      return Constructor;
	    };
	  }();
	
	  babelHelpers.defineProperty = function (obj, key, value) {
	    if (key in obj) {
	      Object.defineProperty(obj, key, {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    } else {
	      obj[key] = value;
	    }
	
	    return obj;
	  };
	
	  babelHelpers;
	
	  function __commonjs(fn, module) {
	    return module = { exports: {} }, fn(module, module.exports), module.exports;
	  }
	
	  var prefixProps = { "Webkit": { "transform": true, "transformOrigin": true, "transformOriginX": true, "transformOriginY": true, "backfaceVisibility": true, "perspective": true, "perspectiveOrigin": true, "transformStyle": true, "transformOriginZ": true, "animation": true, "animationDelay": true, "animationDirection": true, "animationFillMode": true, "animationDuration": true, "animationIterationCount": true, "animationName": true, "animationPlayState": true, "animationTimingFunction": true, "appearance": true, "userSelect": true, "fontKerning": true, "textEmphasisPosition": true, "textEmphasis": true, "textEmphasisStyle": true, "textEmphasisColor": true, "boxDecorationBreak": true, "clipPath": true, "maskImage": true, "maskMode": true, "maskRepeat": true, "maskPosition": true, "maskClip": true, "maskOrigin": true, "maskSize": true, "maskComposite": true, "mask": true, "maskBorderSource": true, "maskBorderMode": true, "maskBorderSlice": true, "maskBorderWidth": true, "maskBorderOutset": true, "maskBorderRepeat": true, "maskBorder": true, "maskType": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "filter": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true, "flex": true, "flexBasis": true, "flexDirection": true, "flexGrow": true, "flexFlow": true, "flexShrink": true, "flexWrap": true, "alignContent": true, "alignItems": true, "alignSelf": true, "justifyContent": true, "order": true, "backdropFilter": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "shapeImageThreshold": true, "shapeImageMargin": true, "shapeImageOutside": true, "hyphens": true, "flowInto": true, "flowFrom": true, "regionFragment": true, "textSizeAdjust": true, "transition": true, "transitionDelay": true, "transitionDuration": true, "transitionProperty": true, "transitionTimingFunction": true }, "Moz": { "appearance": true, "userSelect": true, "boxSizing": true, "textAlignLast": true, "textDecorationStyle": true, "textDecorationSkip": true, "textDecorationLine": true, "textDecorationColor": true, "tabSize": true, "hyphens": true, "fontFeatureSettings": true, "breakAfter": true, "breakBefore": true, "breakInside": true, "columnCount": true, "columnFill": true, "columnGap": true, "columnRule": true, "columnRuleColor": true, "columnRuleStyle": true, "columnRuleWidth": true, "columns": true, "columnSpan": true, "columnWidth": true }, "ms": { "flex": true, "flexBasis": false, "flexDirection": true, "flexGrow": false, "flexFlow": true, "flexShrink": false, "flexWrap": true, "alignContent": false, "alignItems": false, "alignSelf": false, "justifyContent": false, "order": false, "userSelect": true, "wrapFlow": true, "wrapThrough": true, "wrapMargin": true, "scrollSnapType": true, "scrollSnapPointsX": true, "scrollSnapPointsY": true, "scrollSnapDestination": true, "scrollSnapCoordinate": true, "touchAction": true, "hyphens": true, "flowInto": true, "flowFrom": true, "breakBefore": true, "breakAfter": true, "breakInside": true, "regionFragment": true, "gridTemplateColumns": true, "gridTemplateRows": true, "gridTemplateAreas": true, "gridTemplate": true, "gridAutoColumns": true, "gridAutoRows": true, "gridAutoFlow": true, "grid": true, "gridRowStart": true, "gridColumnStart": true, "gridRowEnd": true, "gridRow": true, "gridColumn": true, "gridColumnEnd": true, "gridColumnGap": true, "gridRowGap": true, "gridArea": true, "gridGap": true, "textSizeAdjust": true } };
	
	  // helper to capitalize strings
	  var capitalizeString = function capitalizeString(str) {
	    return str.charAt(0).toUpperCase() + str.slice(1);
	  };
	
	  var isPrefixedProperty = function isPrefixedProperty(property) {
	    return property.match(/^(Webkit|Moz|O|ms)/) !== null;
	  };
	
	  function sortPrefixedStyle(style) {
	    return Object.keys(style).sort(function (left, right) {
	      if (isPrefixedProperty(left) && !isPrefixedProperty(right)) {
	        return -1;
	      } else if (!isPrefixedProperty(left) && isPrefixedProperty(right)) {
	        return 1;
	      }
	      return 0;
	    }).reduce(function (sortedStyle, prop) {
	      sortedStyle[prop] = style[prop];
	      return sortedStyle;
	    }, {});
	  }
	
	  function position(property, value) {
	    if (property === 'position' && value === 'sticky') {
	      return { position: ['-webkit-sticky', 'sticky'] };
	    }
	  }
	
	  // returns a style object with a single concated prefixed value string
	  var joinPrefixedValue = function joinPrefixedValue(property, value) {
	    var replacer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (prefix, value) {
	      return prefix + value;
	    };
	    return babelHelpers.defineProperty({}, property, ['-webkit-', '-moz-', ''].map(function (prefix) {
	      return replacer(prefix, value);
	    }));
	  };
	
	  var isPrefixedValue = function isPrefixedValue(value) {
	    if (Array.isArray(value)) value = value.join(',');
	
	    return value.match(/-webkit-|-moz-|-ms-/) !== null;
	  };
	
	  function calc(property, value) {
	    if (typeof value === 'string' && !isPrefixedValue(value) && value.indexOf('calc(') > -1) {
	      return joinPrefixedValue(property, value, function (prefix, value) {
	        return value.replace(/calc\(/g, prefix + 'calc(');
	      });
	    }
	  }
	
	  var values = {
	    'zoom-in': true,
	    'zoom-out': true,
	    grab: true,
	    grabbing: true
	  };
	
	  function cursor(property, value) {
	    if (property === 'cursor' && values[value]) {
	      return joinPrefixedValue(property, value);
	    }
	  }
	
	  var values$1 = { flex: true, 'inline-flex': true };
	
	  function flex(property, value) {
	    if (property === 'display' && values$1[value]) {
	      return {
	        display: ['-webkit-box', '-moz-box', '-ms-' + value + 'box', '-webkit-' + value, value]
	      };
	    }
	  }
	
	  var properties = {
	    maxHeight: true,
	    maxWidth: true,
	    width: true,
	    height: true,
	    columnWidth: true,
	    minWidth: true,
	    minHeight: true
	  };
	  var values$2 = {
	    'min-content': true,
	    'max-content': true,
	    'fill-available': true,
	    'fit-content': true,
	    'contain-floats': true
	  };
	
	  function sizing(property, value) {
	    if (properties[property] && values$2[value]) {
	      return joinPrefixedValue(property, value);
	    }
	  }
	
	  var values$3 = /linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;
	
	  function gradient(property, value) {
	    if (typeof value === 'string' && !isPrefixedValue(value) && value.match(values$3) !== null) {
	      return joinPrefixedValue(property, value);
	    }
	  }
	
	  var index = __commonjs(function (module) {
	    'use strict';
	
	    var uppercasePattern = /[A-Z]/g;
	    var msPattern = /^ms-/;
	    var cache = {};
	
	    function hyphenateStyleName(string) {
	      return string in cache ? cache[string] : cache[string] = string.replace(uppercasePattern, '-$&').toLowerCase().replace(msPattern, '-ms-');
	    }
	
	    module.exports = hyphenateStyleName;
	  });
	
	  var hyphenateStyleName = index && (typeof index === 'undefined' ? 'undefined' : _typeof(index)) === 'object' && 'default' in index ? index['default'] : index;
	
	  var properties$1 = {
	    transition: true,
	    transitionProperty: true,
	    WebkitTransition: true,
	    WebkitTransitionProperty: true
	  };
	
	  function transition(property, value) {
	    // also check for already prefixed transitions
	    if (typeof value === 'string' && properties$1[property]) {
	      var _ref2;
	
	      var outputValue = prefixValue(value);
	      var webkitOutput = outputValue.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function (value) {
	        return value.match(/-moz-|-ms-/) === null;
	      }).join(',');
	
	      // if the property is already prefixed
	      if (property.indexOf('Webkit') > -1) {
	        return babelHelpers.defineProperty({}, property, webkitOutput);
	      }
	
	      return _ref2 = {}, babelHelpers.defineProperty(_ref2, 'Webkit' + capitalizeString(property), webkitOutput), babelHelpers.defineProperty(_ref2, property, outputValue), _ref2;
	    }
	  }
	
	  function prefixValue(value) {
	    if (isPrefixedValue(value)) {
	      return value;
	    }
	
	    // only split multi values, not cubic beziers
	    var multipleValues = value.split(/,(?![^()]*(?:\([^()]*\))?\))/g);
	
	    // iterate each single value and check for transitioned properties
	    // that need to be prefixed as well
	    multipleValues.forEach(function (val, index) {
	      multipleValues[index] = Object.keys(prefixProps).reduce(function (out, prefix) {
	        var dashCasePrefix = '-' + prefix.toLowerCase() + '-';
	
	        Object.keys(prefixProps[prefix]).forEach(function (prop) {
	          var dashCaseProperty = hyphenateStyleName(prop);
	
	          if (val.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {
	            // join all prefixes and create a new value
	            out = val.replace(dashCaseProperty, dashCasePrefix + dashCaseProperty) + ',' + out;
	          }
	        });
	        return out;
	      }, val);
	    });
	
	    return multipleValues.join(',');
	  }
	
	  var alternativeValues = {
	    'space-around': 'distribute',
	    'space-between': 'justify',
	    'flex-start': 'start',
	    'flex-end': 'end'
	  };
	  var alternativeProps = {
	    alignContent: 'msFlexLinePack',
	    alignSelf: 'msFlexItemAlign',
	    alignItems: 'msFlexAlign',
	    justifyContent: 'msFlexPack',
	    order: 'msFlexOrder',
	    flexGrow: 'msFlexPositive',
	    flexShrink: 'msFlexNegative',
	    flexBasis: 'msPreferredSize'
	  };
	
	  function flexboxIE(property, value) {
	    if (alternativeProps[property]) {
	      return babelHelpers.defineProperty({}, alternativeProps[property], alternativeValues[value] || value);
	    }
	  }
	
	  var alternativeValues$1 = {
	    'space-around': 'justify',
	    'space-between': 'justify',
	    'flex-start': 'start',
	    'flex-end': 'end',
	    'wrap-reverse': 'multiple',
	    wrap: 'multiple'
	  };
	
	  var alternativeProps$1 = {
	    alignItems: 'WebkitBoxAlign',
	    justifyContent: 'WebkitBoxPack',
	    flexWrap: 'WebkitBoxLines'
	  };
	
	  function flexboxOld(property, value) {
	    if (property === 'flexDirection' && typeof value === 'string') {
	      return {
	        WebkitBoxOrient: value.indexOf('column') > -1 ? 'vertical' : 'horizontal',
	        WebkitBoxDirection: value.indexOf('reverse') > -1 ? 'reverse' : 'normal'
	      };
	    }
	    if (alternativeProps$1[property]) {
	      return babelHelpers.defineProperty({}, alternativeProps$1[property], alternativeValues$1[value] || value);
	    }
	  }
	
	  var plugins = [position, calc, cursor, sizing, gradient, transition, flexboxIE, flexboxOld, flex];
	
	  /**
	   * Returns a prefixed version of the style object using all vendor prefixes
	   * @param {Object} styles - Style object that gets prefixed properties added
	   * @returns {Object} - Style object with prefixed properties and values
	   */
	  function prefixAll(styles) {
	    Object.keys(styles).forEach(function (property) {
	      var value = styles[property];
	      if (value instanceof Object && !Array.isArray(value)) {
	        // recurse through nested style objects
	        styles[property] = prefixAll(value);
	      } else {
	        Object.keys(prefixProps).forEach(function (prefix) {
	          var properties = prefixProps[prefix];
	          // add prefixes if needed
	          if (properties[property]) {
	            styles[prefix + capitalizeString(property)] = value;
	          }
	        });
	      }
	    });
	
	    Object.keys(styles).forEach(function (property) {
	      [].concat(styles[property]).forEach(function (value, index) {
	        // resolve every special plugins
	        plugins.forEach(function (plugin) {
	          return assignStyles(styles, plugin(property, value));
	        });
	      });
	    });
	
	    return sortPrefixedStyle(styles);
	  }
	
	  function assignStyles(base) {
	    var extend = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    Object.keys(extend).forEach(function (property) {
	      var baseValue = base[property];
	      if (Array.isArray(baseValue)) {
	        [].concat(extend[property]).forEach(function (value) {
	          var valueIndex = baseValue.indexOf(value);
	          if (valueIndex > -1) {
	            base[property].splice(valueIndex, 1);
	          }
	          base[property].push(value);
	        });
	      } else {
	        base[property] = extend[property];
	      }
	    });
	  }
	
	  return prefixAll;
	});

/***/ },
/* 314 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = doHash;
	// murmurhash2 via https://gist.github.com/raycmorgan/588423
	
	function doHash(str, seed) {
	  var m = 0x5bd1e995;
	  var r = 24;
	  var h = seed ^ str.length;
	  var length = str.length;
	  var currentIndex = 0;
	
	  while (length >= 4) {
	    var k = UInt32(str, currentIndex);
	
	    k = Umul32(k, m);
	    k ^= k >>> r;
	    k = Umul32(k, m);
	
	    h = Umul32(h, m);
	    h ^= k;
	
	    currentIndex += 4;
	    length -= 4;
	  }
	
	  switch (length) {
	    case 3:
	      h ^= UInt16(str, currentIndex);
	      h ^= str.charCodeAt(currentIndex + 2) << 16;
	      h = Umul32(h, m);
	      break;
	
	    case 2:
	      h ^= UInt16(str, currentIndex);
	      h = Umul32(h, m);
	      break;
	
	    case 1:
	      h ^= str.charCodeAt(currentIndex);
	      h = Umul32(h, m);
	      break;
	  }
	
	  h ^= h >>> 13;
	  h = Umul32(h, m);
	  h ^= h >>> 15;
	
	  return h >>> 0;
	}
	
	function UInt32(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8) + (str.charCodeAt(pos++) << 16) + (str.charCodeAt(pos) << 24);
	}
	
	function UInt16(str, pos) {
	  return str.charCodeAt(pos++) + (str.charCodeAt(pos++) << 8);
	}
	
	function Umul32(n, m) {
	  n = n | 0;
	  m = m | 0;
	  var nlo = n & 0xffff;
	  var nhi = n >>> 16;
	  var res = nlo * m + ((nhi * m & 0xffff) << 16) | 0;
	  return res;
	}

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {  /* globals require, module */
	
	  'use strict';
	
	  /**
	   * Module dependencies.
	   */
	
	  var pathtoRegexp = __webpack_require__(316);
	
	  /**
	   * Module exports.
	   */
	
	  module.exports = page;
	
	  /**
	   * Detect click event
	   */
	  var clickEvent = ('undefined' !== typeof document) && document.ontouchstart ? 'touchstart' : 'click';
	
	  /**
	   * To work properly with the URL
	   * history.location generated polyfill in https://github.com/devote/HTML5-History-API
	   */
	
	  var location = ('undefined' !== typeof window) && (window.history.location || window.location);
	
	  /**
	   * Perform initial dispatch.
	   */
	
	  var dispatch = true;
	
	
	  /**
	   * Decode URL components (query string, pathname, hash).
	   * Accommodates both regular percent encoding and x-www-form-urlencoded format.
	   */
	  var decodeURLComponents = true;
	
	  /**
	   * Base path.
	   */
	
	  var base = '';
	
	  /**
	   * Running flag.
	   */
	
	  var running;
	
	  /**
	   * HashBang option
	   */
	
	  var hashbang = false;
	
	  /**
	   * Previous context, for capturing
	   * page exit events.
	   */
	
	  var prevContext;
	
	  /**
	   * Register `path` with callback `fn()`,
	   * or route `path`, or redirection,
	   * or `page.start()`.
	   *
	   *   page(fn);
	   *   page('*', fn);
	   *   page('/user/:id', load, user);
	   *   page('/user/' + user.id, { some: 'thing' });
	   *   page('/user/' + user.id);
	   *   page('/from', '/to')
	   *   page();
	   *
	   * @param {string|!Function|!Object} path
	   * @param {Function=} fn
	   * @api public
	   */
	
	  function page(path, fn) {
	    // <callback>
	    if ('function' === typeof path) {
	      return page('*', path);
	    }
	
	    // route <path> to <callback ...>
	    if ('function' === typeof fn) {
	      var route = new Route(/** @type {string} */ (path));
	      for (var i = 1; i < arguments.length; ++i) {
	        page.callbacks.push(route.middleware(arguments[i]));
	      }
	      // show <path> with [state]
	    } else if ('string' === typeof path) {
	      page['string' === typeof fn ? 'redirect' : 'show'](path, fn);
	      // start [options]
	    } else {
	      page.start(path);
	    }
	  }
	
	  /**
	   * Callback functions.
	   */
	
	  page.callbacks = [];
	  page.exits = [];
	
	  /**
	   * Current path being processed
	   * @type {string}
	   */
	  page.current = '';
	
	  /**
	   * Number of pages navigated to.
	   * @type {number}
	   *
	   *     page.len == 0;
	   *     page('/login');
	   *     page.len == 1;
	   */
	
	  page.len = 0;
	
	  /**
	   * Get or set basepath to `path`.
	   *
	   * @param {string} path
	   * @api public
	   */
	
	  page.base = function(path) {
	    if (0 === arguments.length) return base;
	    base = path;
	  };
	
	  /**
	   * Bind with the given `options`.
	   *
	   * Options:
	   *
	   *    - `click` bind to click events [true]
	   *    - `popstate` bind to popstate [true]
	   *    - `dispatch` perform initial dispatch [true]
	   *
	   * @param {Object} options
	   * @api public
	   */
	
	  page.start = function(options) {
	    options = options || {};
	    if (running) return;
	    running = true;
	    if (false === options.dispatch) dispatch = false;
	    if (false === options.decodeURLComponents) decodeURLComponents = false;
	    if (false !== options.popstate) window.addEventListener('popstate', onpopstate, false);
	    if (false !== options.click) {
	      document.addEventListener(clickEvent, onclick, false);
	    }
	    if (true === options.hashbang) hashbang = true;
	    if (!dispatch) return;
	    var url = (hashbang && ~location.hash.indexOf('#!')) ? location.hash.substr(2) + location.search : location.pathname + location.search + location.hash;
	    page.replace(url, null, true, dispatch);
	  };
	
	  /**
	   * Unbind click and popstate event handlers.
	   *
	   * @api public
	   */
	
	  page.stop = function() {
	    if (!running) return;
	    page.current = '';
	    page.len = 0;
	    running = false;
	    document.removeEventListener(clickEvent, onclick, false);
	    window.removeEventListener('popstate', onpopstate, false);
	  };
	
	  /**
	   * Show `path` with optional `state` object.
	   *
	   * @param {string} path
	   * @param {Object=} state
	   * @param {boolean=} dispatch
	   * @param {boolean=} push
	   * @return {!Context}
	   * @api public
	   */
	
	  page.show = function(path, state, dispatch, push) {
	    var ctx = new Context(path, state);
	    page.current = ctx.path;
	    if (false !== dispatch) page.dispatch(ctx);
	    if (false !== ctx.handled && false !== push) ctx.pushState();
	    return ctx;
	  };
	
	  /**
	   * Goes back in the history
	   * Back should always let the current route push state and then go back.
	   *
	   * @param {string} path - fallback path to go back if no more history exists, if undefined defaults to page.base
	   * @param {Object=} state
	   * @api public
	   */
	
	  page.back = function(path, state) {
	    if (page.len > 0) {
	      // this may need more testing to see if all browsers
	      // wait for the next tick to go back in history
	      history.back();
	      page.len--;
	    } else if (path) {
	      setTimeout(function() {
	        page.show(path, state);
	      });
	    }else{
	      setTimeout(function() {
	        page.show(base, state);
	      });
	    }
	  };
	
	
	  /**
	   * Register route to redirect from one path to other
	   * or just redirect to another route
	   *
	   * @param {string} from - if param 'to' is undefined redirects to 'from'
	   * @param {string=} to
	   * @api public
	   */
	  page.redirect = function(from, to) {
	    // Define route from a path to another
	    if ('string' === typeof from && 'string' === typeof to) {
	      page(from, function(e) {
	        setTimeout(function() {
	          page.replace(/** @type {!string} */ (to));
	        }, 0);
	      });
	    }
	
	    // Wait for the push state and replace it with another
	    if ('string' === typeof from && 'undefined' === typeof to) {
	      setTimeout(function() {
	        page.replace(from);
	      }, 0);
	    }
	  };
	
	  /**
	   * Replace `path` with optional `state` object.
	   *
	   * @param {string} path
	   * @param {Object=} state
	   * @param {boolean=} init
	   * @param {boolean=} dispatch
	   * @return {!Context}
	   * @api public
	   */
	
	
	  page.replace = function(path, state, init, dispatch) {
	    var ctx = new Context(path, state);
	    page.current = ctx.path;
	    ctx.init = init;
	    ctx.save(); // save before dispatching, which may redirect
	    if (false !== dispatch) page.dispatch(ctx);
	    return ctx;
	  };
	
	  /**
	   * Dispatch the given `ctx`.
	   *
	   * @param {Context} ctx
	   * @api private
	   */
	  page.dispatch = function(ctx) {
	    var prev = prevContext,
	      i = 0,
	      j = 0;
	
	    prevContext = ctx;
	
	    function nextExit() {
	      var fn = page.exits[j++];
	      if (!fn) return nextEnter();
	      fn(prev, nextExit);
	    }
	
	    function nextEnter() {
	      var fn = page.callbacks[i++];
	
	      if (ctx.path !== page.current) {
	        ctx.handled = false;
	        return;
	      }
	      if (!fn) return unhandled(ctx);
	      fn(ctx, nextEnter);
	    }
	
	    if (prev) {
	      nextExit();
	    } else {
	      nextEnter();
	    }
	  };
	
	  /**
	   * Unhandled `ctx`. When it's not the initial
	   * popstate then redirect. If you wish to handle
	   * 404s on your own use `page('*', callback)`.
	   *
	   * @param {Context} ctx
	   * @api private
	   */
	  function unhandled(ctx) {
	    if (ctx.handled) return;
	    var current;
	
	    if (hashbang) {
	      current = base + location.hash.replace('#!', '');
	    } else {
	      current = location.pathname + location.search;
	    }
	
	    if (current === ctx.canonicalPath) return;
	    page.stop();
	    ctx.handled = false;
	    location.href = ctx.canonicalPath;
	  }
	
	  /**
	   * Register an exit route on `path` with
	   * callback `fn()`, which will be called
	   * on the previous context when a new
	   * page is visited.
	   */
	  page.exit = function(path, fn) {
	    if (typeof path === 'function') {
	      return page.exit('*', path);
	    }
	
	    var route = new Route(path);
	    for (var i = 1; i < arguments.length; ++i) {
	      page.exits.push(route.middleware(arguments[i]));
	    }
	  };
	
	  /**
	   * Remove URL encoding from the given `str`.
	   * Accommodates whitespace in both x-www-form-urlencoded
	   * and regular percent-encoded form.
	   *
	   * @param {string} val - URL component to decode
	   */
	  function decodeURLEncodedURIComponent(val) {
	    if (typeof val !== 'string') { return val; }
	    return decodeURLComponents ? decodeURIComponent(val.replace(/\+/g, ' ')) : val;
	  }
	
	  /**
	   * Initialize a new "request" `Context`
	   * with the given `path` and optional initial `state`.
	   *
	   * @constructor
	   * @param {string} path
	   * @param {Object=} state
	   * @api public
	   */
	
	  function Context(path, state) {
	    if ('/' === path[0] && 0 !== path.indexOf(base)) path = base + (hashbang ? '#!' : '') + path;
	    var i = path.indexOf('?');
	
	    this.canonicalPath = path;
	    this.path = path.replace(base, '') || '/';
	    if (hashbang) this.path = this.path.replace('#!', '') || '/';
	
	    this.title = document.title;
	    this.state = state || {};
	    this.state.path = path;
	    this.querystring = ~i ? decodeURLEncodedURIComponent(path.slice(i + 1)) : '';
	    this.pathname = decodeURLEncodedURIComponent(~i ? path.slice(0, i) : path);
	    this.params = {};
	
	    // fragment
	    this.hash = '';
	    if (!hashbang) {
	      if (!~this.path.indexOf('#')) return;
	      var parts = this.path.split('#');
	      this.path = parts[0];
	      this.hash = decodeURLEncodedURIComponent(parts[1]) || '';
	      this.querystring = this.querystring.split('#')[0];
	    }
	  }
	
	  /**
	   * Expose `Context`.
	   */
	
	  page.Context = Context;
	
	  /**
	   * Push state.
	   *
	   * @api private
	   */
	
	  Context.prototype.pushState = function() {
	    page.len++;
	    history.pushState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
	  };
	
	  /**
	   * Save the context state.
	   *
	   * @api public
	   */
	
	  Context.prototype.save = function() {
	    history.replaceState(this.state, this.title, hashbang && this.path !== '/' ? '#!' + this.path : this.canonicalPath);
	  };
	
	  /**
	   * Initialize `Route` with the given HTTP `path`,
	   * and an array of `callbacks` and `options`.
	   *
	   * Options:
	   *
	   *   - `sensitive`    enable case-sensitive routes
	   *   - `strict`       enable strict matching for trailing slashes
	   *
	   * @constructor
	   * @param {string} path
	   * @param {Object=} options
	   * @api private
	   */
	
	  function Route(path, options) {
	    options = options || {};
	    this.path = (path === '*') ? '(.*)' : path;
	    this.method = 'GET';
	    this.regexp = pathtoRegexp(this.path,
	      this.keys = [],
	      options);
	  }
	
	  /**
	   * Expose `Route`.
	   */
	
	  page.Route = Route;
	
	  /**
	   * Return route middleware with
	   * the given callback `fn()`.
	   *
	   * @param {Function} fn
	   * @return {Function}
	   * @api public
	   */
	
	  Route.prototype.middleware = function(fn) {
	    var self = this;
	    return function(ctx, next) {
	      if (self.match(ctx.path, ctx.params)) return fn(ctx, next);
	      next();
	    };
	  };
	
	  /**
	   * Check if this route matches `path`, if so
	   * populate `params`.
	   *
	   * @param {string} path
	   * @param {Object} params
	   * @return {boolean}
	   * @api private
	   */
	
	  Route.prototype.match = function(path, params) {
	    var keys = this.keys,
	      qsIndex = path.indexOf('?'),
	      pathname = ~qsIndex ? path.slice(0, qsIndex) : path,
	      m = this.regexp.exec(decodeURIComponent(pathname));
	
	    if (!m) return false;
	
	    for (var i = 1, len = m.length; i < len; ++i) {
	      var key = keys[i - 1];
	      var val = decodeURLEncodedURIComponent(m[i]);
	      if (val !== undefined || !(hasOwnProperty.call(params, key.name))) {
	        params[key.name] = val;
	      }
	    }
	
	    return true;
	  };
	
	
	  /**
	   * Handle "populate" events.
	   */
	
	  var onpopstate = (function () {
	    var loaded = false;
	    if ('undefined' === typeof window) {
	      return;
	    }
	    if (document.readyState === 'complete') {
	      loaded = true;
	    } else {
	      window.addEventListener('load', function() {
	        setTimeout(function() {
	          loaded = true;
	        }, 0);
	      });
	    }
	    return function onpopstate(e) {
	      if (!loaded) return;
	      if (e.state) {
	        var path = e.state.path;
	        page.replace(path, e.state);
	      } else {
	        page.show(location.pathname + location.hash, undefined, undefined, false);
	      }
	    };
	  })();
	  /**
	   * Handle "click" events.
	   */
	
	  function onclick(e) {
	
	    if (1 !== which(e)) return;
	
	    if (e.metaKey || e.ctrlKey || e.shiftKey) return;
	    if (e.defaultPrevented) return;
	
	
	
	    // ensure link
	    // use shadow dom when available
	    var el = e.path ? e.path[0] : e.target;
	    while (el && 'A' !== el.nodeName) el = el.parentNode;
	    if (!el || 'A' !== el.nodeName) return;
	
	
	
	    // Ignore if tag has
	    // 1. "download" attribute
	    // 2. rel="external" attribute
	    if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') return;
	
	    // ensure non-hash for the same path
	    var link = el.getAttribute('href');
	    if (!hashbang && el.pathname === location.pathname && (el.hash || '#' === link)) return;
	
	
	
	    // Check for mailto: in the href
	    if (link && link.indexOf('mailto:') > -1) return;
	
	    // check target
	    if (el.target) return;
	
	    // x-origin
	    if (!sameOrigin(el.href)) return;
	
	
	
	    // rebuild path
	    var path = el.pathname + el.search + (el.hash || '');
	
	    // strip leading "/[drive letter]:" on NW.js on Windows
	    if (typeof process !== 'undefined' && path.match(/^\/[a-zA-Z]:\//)) {
	      path = path.replace(/^\/[a-zA-Z]:\//, '/');
	    }
	
	    // same page
	    var orig = path;
	
	    if (path.indexOf(base) === 0) {
	      path = path.substr(base.length);
	    }
	
	    if (hashbang) path = path.replace('#!', '');
	
	    if (base && orig === path) return;
	
	    e.preventDefault();
	    page.show(orig);
	  }
	
	  /**
	   * Event button.
	   */
	
	  function which(e) {
	    e = e || window.event;
	    return null === e.which ? e.button : e.which;
	  }
	
	  /**
	   * Check if `href` is the same origin.
	   */
	
	  function sameOrigin(href) {
	    var origin = location.protocol + '//' + location.hostname;
	    if (location.port) origin += ':' + location.port;
	    return (href && (0 === href.indexOf(origin)));
	  }
	
	  page.sameOrigin = sameOrigin;
	
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(298)))

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	var isarray = __webpack_require__(317)
	
	/**
	 * Expose `pathToRegexp`.
	 */
	module.exports = pathToRegexp
	module.exports.parse = parse
	module.exports.compile = compile
	module.exports.tokensToFunction = tokensToFunction
	module.exports.tokensToRegExp = tokensToRegExp
	
	/**
	 * The main path matching regexp utility.
	 *
	 * @type {RegExp}
	 */
	var PATH_REGEXP = new RegExp([
	  // Match escaped characters that would otherwise appear in future matches.
	  // This allows the user to escape special characters that won't transform.
	  '(\\\\.)',
	  // Match Express-style parameters and un-named parameters with a prefix
	  // and optional suffixes. Matches appear as:
	  //
	  // "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]
	  // "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]
	  // "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]
	  '([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))'
	].join('|'), 'g')
	
	/**
	 * Parse a string for the raw tokens.
	 *
	 * @param  {String} str
	 * @return {Array}
	 */
	function parse (str) {
	  var tokens = []
	  var key = 0
	  var index = 0
	  var path = ''
	  var res
	
	  while ((res = PATH_REGEXP.exec(str)) != null) {
	    var m = res[0]
	    var escaped = res[1]
	    var offset = res.index
	    path += str.slice(index, offset)
	    index = offset + m.length
	
	    // Ignore already escaped sequences.
	    if (escaped) {
	      path += escaped[1]
	      continue
	    }
	
	    // Push the current path onto the tokens.
	    if (path) {
	      tokens.push(path)
	      path = ''
	    }
	
	    var prefix = res[2]
	    var name = res[3]
	    var capture = res[4]
	    var group = res[5]
	    var suffix = res[6]
	    var asterisk = res[7]
	
	    var repeat = suffix === '+' || suffix === '*'
	    var optional = suffix === '?' || suffix === '*'
	    var delimiter = prefix || '/'
	    var pattern = capture || group || (asterisk ? '.*' : '[^' + delimiter + ']+?')
	
	    tokens.push({
	      name: name || key++,
	      prefix: prefix || '',
	      delimiter: delimiter,
	      optional: optional,
	      repeat: repeat,
	      pattern: escapeGroup(pattern)
	    })
	  }
	
	  // Match any characters still remaining.
	  if (index < str.length) {
	    path += str.substr(index)
	  }
	
	  // If the path exists, push it onto the end.
	  if (path) {
	    tokens.push(path)
	  }
	
	  return tokens
	}
	
	/**
	 * Compile a string to a template function for the path.
	 *
	 * @param  {String}   str
	 * @return {Function}
	 */
	function compile (str) {
	  return tokensToFunction(parse(str))
	}
	
	/**
	 * Expose a method for transforming tokens into the path function.
	 */
	function tokensToFunction (tokens) {
	  // Compile all the tokens into regexps.
	  var matches = new Array(tokens.length)
	
	  // Compile all the patterns before compilation.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] === 'object') {
	      matches[i] = new RegExp('^' + tokens[i].pattern + '$')
	    }
	  }
	
	  return function (obj) {
	    var path = ''
	    var data = obj || {}
	
	    for (var i = 0; i < tokens.length; i++) {
	      var token = tokens[i]
	
	      if (typeof token === 'string') {
	        path += token
	
	        continue
	      }
	
	      var value = data[token.name]
	      var segment
	
	      if (value == null) {
	        if (token.optional) {
	          continue
	        } else {
	          throw new TypeError('Expected "' + token.name + '" to be defined')
	        }
	      }
	
	      if (isarray(value)) {
	        if (!token.repeat) {
	          throw new TypeError('Expected "' + token.name + '" to not repeat, but received "' + value + '"')
	        }
	
	        if (value.length === 0) {
	          if (token.optional) {
	            continue
	          } else {
	            throw new TypeError('Expected "' + token.name + '" to not be empty')
	          }
	        }
	
	        for (var j = 0; j < value.length; j++) {
	          segment = encodeURIComponent(value[j])
	
	          if (!matches[i].test(segment)) {
	            throw new TypeError('Expected all "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	          }
	
	          path += (j === 0 ? token.prefix : token.delimiter) + segment
	        }
	
	        continue
	      }
	
	      segment = encodeURIComponent(value)
	
	      if (!matches[i].test(segment)) {
	        throw new TypeError('Expected "' + token.name + '" to match "' + token.pattern + '", but received "' + segment + '"')
	      }
	
	      path += token.prefix + segment
	    }
	
	    return path
	  }
	}
	
	/**
	 * Escape a regular expression string.
	 *
	 * @param  {String} str
	 * @return {String}
	 */
	function escapeString (str) {
	  return str.replace(/([.+*?=^!:${}()[\]|\/])/g, '\\$1')
	}
	
	/**
	 * Escape the capturing group by escaping special characters and meaning.
	 *
	 * @param  {String} group
	 * @return {String}
	 */
	function escapeGroup (group) {
	  return group.replace(/([=!:$\/()])/g, '\\$1')
	}
	
	/**
	 * Attach the keys as a property of the regexp.
	 *
	 * @param  {RegExp} re
	 * @param  {Array}  keys
	 * @return {RegExp}
	 */
	function attachKeys (re, keys) {
	  re.keys = keys
	  return re
	}
	
	/**
	 * Get the flags for a regexp from the options.
	 *
	 * @param  {Object} options
	 * @return {String}
	 */
	function flags (options) {
	  return options.sensitive ? '' : 'i'
	}
	
	/**
	 * Pull out keys from a regexp.
	 *
	 * @param  {RegExp} path
	 * @param  {Array}  keys
	 * @return {RegExp}
	 */
	function regexpToRegexp (path, keys) {
	  // Use a negative lookahead to match only capturing groups.
	  var groups = path.source.match(/\((?!\?)/g)
	
	  if (groups) {
	    for (var i = 0; i < groups.length; i++) {
	      keys.push({
	        name: i,
	        prefix: null,
	        delimiter: null,
	        optional: false,
	        repeat: false,
	        pattern: null
	      })
	    }
	  }
	
	  return attachKeys(path, keys)
	}
	
	/**
	 * Transform an array into a regexp.
	 *
	 * @param  {Array}  path
	 * @param  {Array}  keys
	 * @param  {Object} options
	 * @return {RegExp}
	 */
	function arrayToRegexp (path, keys, options) {
	  var parts = []
	
	  for (var i = 0; i < path.length; i++) {
	    parts.push(pathToRegexp(path[i], keys, options).source)
	  }
	
	  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))
	
	  return attachKeys(regexp, keys)
	}
	
	/**
	 * Create a path regexp from string input.
	 *
	 * @param  {String} path
	 * @param  {Array}  keys
	 * @param  {Object} options
	 * @return {RegExp}
	 */
	function stringToRegexp (path, keys, options) {
	  var tokens = parse(path)
	  var re = tokensToRegExp(tokens, options)
	
	  // Attach keys back to the regexp.
	  for (var i = 0; i < tokens.length; i++) {
	    if (typeof tokens[i] !== 'string') {
	      keys.push(tokens[i])
	    }
	  }
	
	  return attachKeys(re, keys)
	}
	
	/**
	 * Expose a function for taking tokens and returning a RegExp.
	 *
	 * @param  {Array}  tokens
	 * @param  {Array}  keys
	 * @param  {Object} options
	 * @return {RegExp}
	 */
	function tokensToRegExp (tokens, options) {
	  options = options || {}
	
	  var strict = options.strict
	  var end = options.end !== false
	  var route = ''
	  var lastToken = tokens[tokens.length - 1]
	  var endsWithSlash = typeof lastToken === 'string' && /\/$/.test(lastToken)
	
	  // Iterate over the tokens and create our regexp string.
	  for (var i = 0; i < tokens.length; i++) {
	    var token = tokens[i]
	
	    if (typeof token === 'string') {
	      route += escapeString(token)
	    } else {
	      var prefix = escapeString(token.prefix)
	      var capture = token.pattern
	
	      if (token.repeat) {
	        capture += '(?:' + prefix + capture + ')*'
	      }
	
	      if (token.optional) {
	        if (prefix) {
	          capture = '(?:' + prefix + '(' + capture + '))?'
	        } else {
	          capture = '(' + capture + ')?'
	        }
	      } else {
	        capture = prefix + '(' + capture + ')'
	      }
	
	      route += capture
	    }
	  }
	
	  // In non-strict mode we allow a slash at the end of match. If the path to
	  // match already ends with a slash, we remove it for consistency. The slash
	  // is valid at the end of a path match, not in the middle. This is important
	  // in non-ending mode, where "/test/" shouldn't match "/test//route".
	  if (!strict) {
	    route = (endsWithSlash ? route.slice(0, -2) : route) + '(?:\\/(?=$))?'
	  }
	
	  if (end) {
	    route += '$'
	  } else {
	    // In non-ending mode, we need the capturing groups to match as much as
	    // possible by using a positive lookahead to the end or next path segment.
	    route += strict && endsWithSlash ? '' : '(?=\\/|$)'
	  }
	
	  return new RegExp('^' + route, flags(options))
	}
	
	/**
	 * Normalize the given path string, returning a regular expression.
	 *
	 * An empty array can be passed in for the keys, which will hold the
	 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
	 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
	 *
	 * @param  {(String|RegExp|Array)} path
	 * @param  {Array}                 [keys]
	 * @param  {Object}                [options]
	 * @return {RegExp}
	 */
	function pathToRegexp (path, keys, options) {
	  keys = keys || []
	
	  if (!isarray(keys)) {
	    options = keys
	    keys = []
	  } else if (!options) {
	    options = {}
	  }
	
	  if (path instanceof RegExp) {
	    return regexpToRegexp(path, keys, options)
	  }
	
	  if (isarray(path)) {
	    return arrayToRegexp(path, keys, options)
	  }
	
	  return stringToRegexp(path, keys, options)
	}


/***/ },
/* 317 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(319)();
	// imports
	
	
	// module
	exports.push([module.id, "/**\n * prism.js default theme for JavaScript, CSS and HTML\n * Based on dabblet (http://dabblet.com)\n * @author Lea Verou\n */\n\ncode[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tcolor: black;\n\tbackground: none;\n\ttext-shadow: 0 1px white;\n\tfont-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;\n\ttext-align: left;\n\twhite-space: pre;\n\tword-spacing: normal;\n\tword-break: normal;\n\tword-wrap: normal;\n\tline-height: 1.5;\n\n\t-moz-tab-size: 4;\n\t-o-tab-size: 4;\n\ttab-size: 4;\n\n\t-webkit-hyphens: none;\n\t-moz-hyphens: none;\n\t-ms-hyphens: none;\n\thyphens: none;\n}\n\npre[class*=\"language-\"]::-moz-selection, pre[class*=\"language-\"] ::-moz-selection,\ncode[class*=\"language-\"]::-moz-selection, code[class*=\"language-\"] ::-moz-selection {\n\ttext-shadow: none;\n\tbackground: #b3d4fc;\n}\n\npre[class*=\"language-\"]::selection, pre[class*=\"language-\"] ::selection,\ncode[class*=\"language-\"]::selection, code[class*=\"language-\"] ::selection {\n\ttext-shadow: none;\n\tbackground: #b3d4fc;\n}\n\n@media print {\n\tcode[class*=\"language-\"],\n\tpre[class*=\"language-\"] {\n\t\ttext-shadow: none;\n\t}\n}\n\n/* Code blocks */\npre[class*=\"language-\"] {\n\tpadding: 1em;\n\tmargin: .5em 0;\n\toverflow: auto;\n}\n\n:not(pre) > code[class*=\"language-\"],\npre[class*=\"language-\"] {\n\tbackground: #f5f2f0;\n}\n\n/* Inline code */\n:not(pre) > code[class*=\"language-\"] {\n\tpadding: .1em;\n\tborder-radius: .3em;\n\twhite-space: normal;\n}\n\n.token.comment,\n.token.prolog,\n.token.doctype,\n.token.cdata {\n\tcolor: slategray;\n}\n\n.token.punctuation {\n\tcolor: #999;\n}\n\n.namespace {\n\topacity: .7;\n}\n\n.token.property,\n.token.tag,\n.token.boolean,\n.token.number,\n.token.constant,\n.token.symbol,\n.token.deleted {\n\tcolor: #905;\n}\n\n.token.selector,\n.token.attr-name,\n.token.string,\n.token.char,\n.token.builtin,\n.token.inserted {\n\tcolor: #690;\n}\n\n.token.operator,\n.token.entity,\n.token.url,\n.language-css .token.string,\n.style .token.string {\n\tcolor: #a67f59;\n\tbackground: hsla(0, 0%, 100%, .5);\n}\n\n.token.atrule,\n.token.attr-value,\n.token.keyword {\n\tcolor: #07a;\n}\n\n.token.function {\n\tcolor: #DD4A68;\n}\n\n.token.regex,\n.token.important,\n.token.variable {\n\tcolor: #e90;\n}\n\n.token.important,\n.token.bold {\n\tfont-weight: bold;\n}\n.token.italic {\n\tfont-style: italic;\n}\n\n.token.entity {\n\tcursor: help;\n}\n", ""]);
	
	// exports


/***/ },
/* 319 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 320 */
/***/ function(module, exports) {

	/* WEBPACK VAR INJECTION */(function(global) {
	/* **********************************************
	     Begin prism-core.js
	********************************************** */
	
	var _self = (typeof window !== 'undefined')
		? window   // if in browser
		: (
			(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)
			? self // if in worker
			: {}   // if in node js
		);
	
	/**
	 * Prism: Lightweight, robust, elegant syntax highlighting
	 * MIT license http://www.opensource.org/licenses/mit-license.php/
	 * @author Lea Verou http://lea.verou.me
	 */
	
	var Prism = (function(){
	
	// Private helper vars
	var lang = /\blang(?:uage)?-(\w+)\b/i;
	var uniqueId = 0;
	
	var _ = _self.Prism = {
		util: {
			encode: function (tokens) {
				if (tokens instanceof Token) {
					return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);
				} else if (_.util.type(tokens) === 'Array') {
					return tokens.map(_.util.encode);
				} else {
					return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ');
				}
			},
	
			type: function (o) {
				return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];
			},
	
			objId: function (obj) {
				if (!obj['__id']) {
					Object.defineProperty(obj, '__id', { value: ++uniqueId });
				}
				return obj['__id'];
			},
	
			// Deep clone a language definition (e.g. to extend it)
			clone: function (o) {
				var type = _.util.type(o);
	
				switch (type) {
					case 'Object':
						var clone = {};
	
						for (var key in o) {
							if (o.hasOwnProperty(key)) {
								clone[key] = _.util.clone(o[key]);
							}
						}
	
						return clone;
	
					case 'Array':
						// Check for existence for IE8
						return o.map && o.map(function(v) { return _.util.clone(v); });
				}
	
				return o;
			}
		},
	
		languages: {
			extend: function (id, redef) {
				var lang = _.util.clone(_.languages[id]);
	
				for (var key in redef) {
					lang[key] = redef[key];
				}
	
				return lang;
			},
	
			/**
			 * Insert a token before another token in a language literal
			 * As this needs to recreate the object (we cannot actually insert before keys in object literals),
			 * we cannot just provide an object, we need anobject and a key.
			 * @param inside The key (or language id) of the parent
			 * @param before The key to insert before. If not provided, the function appends instead.
			 * @param insert Object with the key/value pairs to insert
			 * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.
			 */
			insertBefore: function (inside, before, insert, root) {
				root = root || _.languages;
				var grammar = root[inside];
	
				if (arguments.length == 2) {
					insert = arguments[1];
	
					for (var newToken in insert) {
						if (insert.hasOwnProperty(newToken)) {
							grammar[newToken] = insert[newToken];
						}
					}
	
					return grammar;
				}
	
				var ret = {};
	
				for (var token in grammar) {
	
					if (grammar.hasOwnProperty(token)) {
	
						if (token == before) {
	
							for (var newToken in insert) {
	
								if (insert.hasOwnProperty(newToken)) {
									ret[newToken] = insert[newToken];
								}
							}
						}
	
						ret[token] = grammar[token];
					}
				}
	
				// Update references in other language definitions
				_.languages.DFS(_.languages, function(key, value) {
					if (value === root[inside] && key != inside) {
						this[key] = ret;
					}
				});
	
				return root[inside] = ret;
			},
	
			// Traverse a language definition with Depth First Search
			DFS: function(o, callback, type, visited) {
				visited = visited || {};
				for (var i in o) {
					if (o.hasOwnProperty(i)) {
						callback.call(o, i, o[i], type || i);
	
						if (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {
							visited[_.util.objId(o[i])] = true;
							_.languages.DFS(o[i], callback, null, visited);
						}
						else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {
							visited[_.util.objId(o[i])] = true;
							_.languages.DFS(o[i], callback, i, visited);
						}
					}
				}
			}
		},
		plugins: {},
	
		highlightAll: function(async, callback) {
			var env = {
				callback: callback,
				selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
			};
	
			_.hooks.run("before-highlightall", env);
	
			var elements = env.elements || document.querySelectorAll(env.selector);
	
			for (var i=0, element; element = elements[i++];) {
				_.highlightElement(element, async === true, env.callback);
			}
		},
	
		highlightElement: function(element, async, callback) {
			// Find language
			var language, grammar, parent = element;
	
			while (parent && !lang.test(parent.className)) {
				parent = parent.parentNode;
			}
	
			if (parent) {
				language = (parent.className.match(lang) || [,''])[1].toLowerCase();
				grammar = _.languages[language];
			}
	
			// Set language on the element, if not present
			element.className = element.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
	
			// Set language on the parent, for styling
			parent = element.parentNode;
	
			if (/pre/i.test(parent.nodeName)) {
				parent.className = parent.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
			}
	
			var code = element.textContent;
	
			var env = {
				element: element,
				language: language,
				grammar: grammar,
				code: code
			};
	
			_.hooks.run('before-sanity-check', env);
	
			if (!env.code || !env.grammar) {
				if (env.code) {
					env.element.textContent = env.code;
				}
				_.hooks.run('complete', env);
				return;
			}
	
			_.hooks.run('before-highlight', env);
	
			if (async && _self.Worker) {
				var worker = new Worker(_.filename);
	
				worker.onmessage = function(evt) {
					env.highlightedCode = evt.data;
	
					_.hooks.run('before-insert', env);
	
					env.element.innerHTML = env.highlightedCode;
	
					callback && callback.call(env.element);
					_.hooks.run('after-highlight', env);
					_.hooks.run('complete', env);
				};
	
				worker.postMessage(JSON.stringify({
					language: env.language,
					code: env.code,
					immediateClose: true
				}));
			}
			else {
				env.highlightedCode = _.highlight(env.code, env.grammar, env.language);
	
				_.hooks.run('before-insert', env);
	
				env.element.innerHTML = env.highlightedCode;
	
				callback && callback.call(element);
	
				_.hooks.run('after-highlight', env);
				_.hooks.run('complete', env);
			}
		},
	
		highlight: function (text, grammar, language) {
			var tokens = _.tokenize(text, grammar);
			return Token.stringify(_.util.encode(tokens), language);
		},
	
		tokenize: function(text, grammar, language) {
			var Token = _.Token;
	
			var strarr = [text];
	
			var rest = grammar.rest;
	
			if (rest) {
				for (var token in rest) {
					grammar[token] = rest[token];
				}
	
				delete grammar.rest;
			}
	
			tokenloop: for (var token in grammar) {
				if(!grammar.hasOwnProperty(token) || !grammar[token]) {
					continue;
				}
	
				var patterns = grammar[token];
				patterns = (_.util.type(patterns) === "Array") ? patterns : [patterns];
	
				for (var j = 0; j < patterns.length; ++j) {
					var pattern = patterns[j],
						inside = pattern.inside,
						lookbehind = !!pattern.lookbehind,
						greedy = !!pattern.greedy,
						lookbehindLength = 0,
						alias = pattern.alias;
	
					if (greedy && !pattern.pattern.global) {
						// Without the global flag, lastIndex won't work
						var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];
						pattern.pattern = RegExp(pattern.pattern.source, flags + "g");
					}
	
					pattern = pattern.pattern || pattern;
	
					// Don’t cache length as it changes during the loop
					for (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {
	
						var str = strarr[i];
	
						if (strarr.length > text.length) {
							// Something went terribly wrong, ABORT, ABORT!
							break tokenloop;
						}
	
						if (str instanceof Token) {
							continue;
						}
	
						pattern.lastIndex = 0;
	
						var match = pattern.exec(str),
						    delNum = 1;
	
						// Greedy patterns can override/remove up to two previously matched tokens
						if (!match && greedy && i != strarr.length - 1) {
							pattern.lastIndex = pos;
							match = pattern.exec(text);
							if (!match) {
								break;
							}
	
							var from = match.index + (lookbehind ? match[1].length : 0),
							    to = match.index + match[0].length,
							    k = i,
							    p = pos;
	
							for (var len = strarr.length; k < len && p < to; ++k) {
								p += strarr[k].length;
								// Move the index i to the element in strarr that is closest to from
								if (from >= p) {
									++i;
									pos = p;
								}
							}
	
							/*
							 * If strarr[i] is a Token, then the match starts inside another Token, which is invalid
							 * If strarr[k - 1] is greedy we are in conflict with another greedy pattern
							 */
							if (strarr[i] instanceof Token || strarr[k - 1].greedy) {
								continue;
							}
	
							// Number of tokens to delete and replace with the new match
							delNum = k - i;
							str = text.slice(pos, p);
							match.index -= pos;
						}
	
						if (!match) {
							continue;
						}
	
						if(lookbehind) {
							lookbehindLength = match[1].length;
						}
	
						var from = match.index + lookbehindLength,
						    match = match[0].slice(lookbehindLength),
						    to = from + match.length,
						    before = str.slice(0, from),
						    after = str.slice(to);
	
						var args = [i, delNum];
	
						if (before) {
							args.push(before);
						}
	
						var wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);
	
						args.push(wrapped);
	
						if (after) {
							args.push(after);
						}
	
						Array.prototype.splice.apply(strarr, args);
					}
				}
			}
	
			return strarr;
		},
	
		hooks: {
			all: {},
	
			add: function (name, callback) {
				var hooks = _.hooks.all;
	
				hooks[name] = hooks[name] || [];
	
				hooks[name].push(callback);
			},
	
			run: function (name, env) {
				var callbacks = _.hooks.all[name];
	
				if (!callbacks || !callbacks.length) {
					return;
				}
	
				for (var i=0, callback; callback = callbacks[i++];) {
					callback(env);
				}
			}
		}
	};
	
	var Token = _.Token = function(type, content, alias, matchedStr, greedy) {
		this.type = type;
		this.content = content;
		this.alias = alias;
		// Copy of the full string this token was created from
		this.length = (matchedStr || "").length|0;
		this.greedy = !!greedy;
	};
	
	Token.stringify = function(o, language, parent) {
		if (typeof o == 'string') {
			return o;
		}
	
		if (_.util.type(o) === 'Array') {
			return o.map(function(element) {
				return Token.stringify(element, language, o);
			}).join('');
		}
	
		var env = {
			type: o.type,
			content: Token.stringify(o.content, language, parent),
			tag: 'span',
			classes: ['token', o.type],
			attributes: {},
			language: language,
			parent: parent
		};
	
		if (env.type == 'comment') {
			env.attributes['spellcheck'] = 'true';
		}
	
		if (o.alias) {
			var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];
			Array.prototype.push.apply(env.classes, aliases);
		}
	
		_.hooks.run('wrap', env);
	
		var attributes = Object.keys(env.attributes).map(function(name) {
			return name + '="' + (env.attributes[name] || '').replace(/"/g, '&quot;') + '"';
		}).join(' ');
	
		return '<' + env.tag + ' class="' + env.classes.join(' ') + '"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';
	
	};
	
	if (!_self.document) {
		if (!_self.addEventListener) {
			// in Node.js
			return _self.Prism;
		}
	 	// In worker
		_self.addEventListener('message', function(evt) {
			var message = JSON.parse(evt.data),
			    lang = message.language,
			    code = message.code,
			    immediateClose = message.immediateClose;
	
			_self.postMessage(_.highlight(code, _.languages[lang], lang));
			if (immediateClose) {
				_self.close();
			}
		}, false);
	
		return _self.Prism;
	}
	
	//Get current script and highlight
	var script = document.currentScript || [].slice.call(document.getElementsByTagName("script")).pop();
	
	if (script) {
		_.filename = script.src;
	
		if (document.addEventListener && !script.hasAttribute('data-manual')) {
			if(document.readyState !== "loading") {
				if (window.requestAnimationFrame) {
					window.requestAnimationFrame(_.highlightAll);
				} else {
					window.setTimeout(_.highlightAll, 16);
				}
			}
			else {
				document.addEventListener('DOMContentLoaded', _.highlightAll);
			}
		}
	}
	
	return _self.Prism;
	
	})();
	
	if (typeof module !== 'undefined' && module.exports) {
		module.exports = Prism;
	}
	
	// hack for components to work correctly in node.js
	if (typeof global !== 'undefined') {
		global.Prism = Prism;
	}
	
	
	/* **********************************************
	     Begin prism-markup.js
	********************************************** */
	
	Prism.languages.markup = {
		'comment': /<!--[\w\W]*?-->/,
		'prolog': /<\?[\w\W]+?\?>/,
		'doctype': /<!DOCTYPE[\w\W]+?>/i,
		'cdata': /<!\[CDATA\[[\w\W]*?]]>/i,
		'tag': {
			pattern: /<\/?(?!\d)[^\s>\/=$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\w\W])*\1|[^\s'">=]+))?)*\s*\/?>/i,
			inside: {
				'tag': {
					pattern: /^<\/?[^\s>\/]+/i,
					inside: {
						'punctuation': /^<\/?/,
						'namespace': /^[^\s>\/:]+:/
					}
				},
				'attr-value': {
					pattern: /=(?:('|")[\w\W]*?(\1)|[^\s>]+)/i,
					inside: {
						'punctuation': /[=>"']/
					}
				},
				'punctuation': /\/?>/,
				'attr-name': {
					pattern: /[^\s>\/]+/,
					inside: {
						'namespace': /^[^\s>\/:]+:/
					}
				}
	
			}
		},
		'entity': /&#?[\da-z]{1,8};/i
	};
	
	// Plugin to make entity title show the real entity, idea by Roman Komarov
	Prism.hooks.add('wrap', function(env) {
	
		if (env.type === 'entity') {
			env.attributes['title'] = env.content.replace(/&amp;/, '&');
		}
	});
	
	Prism.languages.xml = Prism.languages.markup;
	Prism.languages.html = Prism.languages.markup;
	Prism.languages.mathml = Prism.languages.markup;
	Prism.languages.svg = Prism.languages.markup;
	
	
	/* **********************************************
	     Begin prism-css.js
	********************************************** */
	
	Prism.languages.css = {
		'comment': /\/\*[\w\W]*?\*\//,
		'atrule': {
			pattern: /@[\w-]+?.*?(;|(?=\s*\{))/i,
			inside: {
				'rule': /@[\w-]+/
				// See rest below
			}
		},
		'url': /url\((?:(["'])(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,
		'selector': /[^\{\}\s][^\{\};]*?(?=\s*\{)/,
		'string': {
			pattern: /("|')(\\(?:\r\n|[\w\W])|(?!\1)[^\\\r\n])*\1/,
			greedy: true
		},
		'property': /(\b|\B)[\w-]+(?=\s*:)/i,
		'important': /\B!important\b/i,
		'function': /[-a-z0-9]+(?=\()/i,
		'punctuation': /[(){};:]/
	};
	
	Prism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);
	
	if (Prism.languages.markup) {
		Prism.languages.insertBefore('markup', 'tag', {
			'style': {
				pattern: /(<style[\w\W]*?>)[\w\W]*?(?=<\/style>)/i,
				lookbehind: true,
				inside: Prism.languages.css,
				alias: 'language-css'
			}
		});
		
		Prism.languages.insertBefore('inside', 'attr-value', {
			'style-attr': {
				pattern: /\s*style=("|').*?\1/i,
				inside: {
					'attr-name': {
						pattern: /^\s*style/i,
						inside: Prism.languages.markup.tag.inside
					},
					'punctuation': /^\s*=\s*['"]|['"]\s*$/,
					'attr-value': {
						pattern: /.+/i,
						inside: Prism.languages.css
					}
				},
				alias: 'language-css'
			}
		}, Prism.languages.markup.tag);
	}
	
	/* **********************************************
	     Begin prism-clike.js
	********************************************** */
	
	Prism.languages.clike = {
		'comment': [
			{
				pattern: /(^|[^\\])\/\*[\w\W]*?\*\//,
				lookbehind: true
			},
			{
				pattern: /(^|[^\\:])\/\/.*/,
				lookbehind: true
			}
		],
		'string': {
			pattern: /(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
			greedy: true
		},
		'class-name': {
			pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,
			lookbehind: true,
			inside: {
				punctuation: /(\.|\\)/
			}
		},
		'keyword': /\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
		'boolean': /\b(true|false)\b/,
		'function': /[a-z0-9_]+(?=\()/i,
		'number': /\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,
		'operator': /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
		'punctuation': /[{}[\];(),.:]/
	};
	
	
	/* **********************************************
	     Begin prism-javascript.js
	********************************************** */
	
	Prism.languages.javascript = Prism.languages.extend('clike', {
		'keyword': /\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,
		'number': /\b-?(0x[\dA-Fa-f]+|0b[01]+|0o[0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,
		// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
		'function': /[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i,
		'operator': /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*\*?|\/|~|\^|%|\.{3}/
	});
	
	Prism.languages.insertBefore('javascript', 'keyword', {
		'regex': {
			pattern: /(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\\\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,
			lookbehind: true,
			greedy: true
		}
	});
	
	Prism.languages.insertBefore('javascript', 'string', {
		'template-string': {
			pattern: /`(?:\\\\|\\?[^\\])*?`/,
			greedy: true,
			inside: {
				'interpolation': {
					pattern: /\$\{[^}]+\}/,
					inside: {
						'interpolation-punctuation': {
							pattern: /^\$\{|\}$/,
							alias: 'punctuation'
						},
						rest: Prism.languages.javascript
					}
				},
				'string': /[\s\S]+/
			}
		}
	});
	
	if (Prism.languages.markup) {
		Prism.languages.insertBefore('markup', 'tag', {
			'script': {
				pattern: /(<script[\w\W]*?>)[\w\W]*?(?=<\/script>)/i,
				lookbehind: true,
				inside: Prism.languages.javascript,
				alias: 'language-javascript'
			}
		});
	}
	
	Prism.languages.js = Prism.languages.javascript;
	
	/* **********************************************
	     Begin prism-file-highlight.js
	********************************************** */
	
	(function () {
		if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {
			return;
		}
	
		self.Prism.fileHighlight = function() {
	
			var Extensions = {
				'js': 'javascript',
				'py': 'python',
				'rb': 'ruby',
				'ps1': 'powershell',
				'psm1': 'powershell',
				'sh': 'bash',
				'bat': 'batch',
				'h': 'c',
				'tex': 'latex'
			};
	
			if(Array.prototype.forEach) { // Check to prevent error in IE8
				Array.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {
					var src = pre.getAttribute('data-src');
	
					var language, parent = pre;
					var lang = /\blang(?:uage)?-(?!\*)(\w+)\b/i;
					while (parent && !lang.test(parent.className)) {
						parent = parent.parentNode;
					}
	
					if (parent) {
						language = (pre.className.match(lang) || [, ''])[1];
					}
	
					if (!language) {
						var extension = (src.match(/\.(\w+)$/) || [, ''])[1];
						language = Extensions[extension] || extension;
					}
	
					var code = document.createElement('code');
					code.className = 'language-' + language;
	
					pre.textContent = '';
	
					code.textContent = 'Loading…';
	
					pre.appendChild(code);
	
					var xhr = new XMLHttpRequest();
	
					xhr.open('GET', src, true);
	
					xhr.onreadystatechange = function () {
						if (xhr.readyState == 4) {
	
							if (xhr.status < 400 && xhr.responseText) {
								code.textContent = xhr.responseText;
	
								Prism.highlightElement(code);
							}
							else if (xhr.status >= 400) {
								code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;
							}
							else {
								code.textContent = '✖ Error: File does not exist or is empty';
							}
						}
					};
	
					xhr.send(null);
				});
			}
	
		};
	
		document.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);
	
	})();
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Tab = undefined;
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _skatejs = __webpack_require__(294);
	
	var _classnames = __webpack_require__(322);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _index = __webpack_require__(323);
	
	var _index2 = _interopRequireDefault(_index);
	
	var _tab = __webpack_require__(324);
	
	var _tab2 = _interopRequireDefault(_tab);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /** @jsx h */
	
	function onTabsChanged(elem) {
	  return function () {
	    elem.tabs = [].concat(_toConsumableArray(elem.children));
	  };
	}
	
	function selectTab(elem, tabs, tab) {
	  return function (e) {
	    tabs.forEach(function (cur) {
	      cur.selected = cur === tab;
	    });
	    // @TODO temporary fix to make generated tab titles to re-render in IE and FF ( because they don't react properly on slotchange event - issue is probably with polyfill )
	    elem.tabs = [].concat(_toConsumableArray(tabs));
	    e.preventDefault();
	  };
	}
	
	function getSelectedTab() {
	  var tabs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	
	  return tabs.filter(function (tab) {
	    return tab.selected;
	  })[0];
	}
	
	exports.default = (0, _skatejs.define)(function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'updatedCallback',
	    value: function updatedCallback(prev) {
	      if (_get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'updatedCallback', this).call(this, prev)) {
	        return (0, _skatejs.emit)(this, 'tab-changed', { detail: getSelectedTab(this.tabs) });
	      }
	    }
	  }, {
	    key: 'renderCallback',
	    value: function renderCallback() {
	      var _this2 = this;
	
	      return (0, _skatejs.h)(
	        'div',
	        null,
	        (0, _skatejs.h)(
	          'style',
	          null,
	          _index2.default.toString()
	        ),
	        (0, _skatejs.h)(
	          'div',
	          { 'class': _index2.default.locals.tabs },
	          this.tabs.map(function (tab) {
	            var _cx;
	
	            return (0, _skatejs.h)(
	              'div',
	              { 'class': (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, _index2.default.locals.tab, true), _defineProperty(_cx, _index2.default.locals.selected, tab.selected), _cx)) },
	              (0, _skatejs.h)(
	                'a',
	                { href: '#' + tab.name, 'on-click': selectTab(_this2, _this2.tabs, tab) },
	                tab.name
	              )
	            );
	          })
	        ),
	        (0, _skatejs.h)('slot', { 'on-slotchange': onTabsChanged(this) })
	      );
	    }
	  }], [{
	    key: 'is',
	    get: function get() {
	      return 'sk-tabs';
	    }
	  }, {
	    key: 'props',
	    get: function get() {
	      return {
	        tabs: _skatejs.prop.array()
	      };
	    }
	  }]);
	
	  return _class;
	}(_skatejs.Component));
	exports.Tab = _tab2.default;

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */
	
	(function () {
		'use strict';
	
		var hasOwn = {}.hasOwnProperty;
	
		function classNames () {
			var classes = [];
	
			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;
	
				var argType = typeof arg;
	
				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}
	
			return classes.join(' ');
		}
	
		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 323 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(319)();
	// imports
	
	
	// module
	exports.push([module.id, ":host {\n  display: block;\n}\n\n._2Lx4fB9RrtyJZEybizTry_ {\n  background-color: #DAD6CE;\n}\n\n._3jX3hCKqKj9o6D_5Kx_JBv {\n  display: inline-block;\n}\n\n._3jX3hCKqKj9o6D_5Kx_JBv a {\n  color: #333;\n  display: inline-block;\n  font-size: 18px;\n  font-weight: 200;\n  padding: 20px;\n  text-decoration: none;\n}\n\n._3jX3hCKqKj9o6D_5Kx_JBv._1UoOCaJGOGhObV5161qk5M {\n  background-color: #F1EDE4;\n}\n", ""]);
	
	// exports
	exports.locals = {
		"tabs": "_2Lx4fB9RrtyJZEybizTry_",
		"tabs": "_2Lx4fB9RrtyJZEybizTry_",
		"tab": "_3jX3hCKqKj9o6D_5Kx_JBv",
		"tab": "_3jX3hCKqKj9o6D_5Kx_JBv",
		"selected": "_1UoOCaJGOGhObV5161qk5M",
		"selected": "_1UoOCaJGOGhObV5161qk5M"
	};

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
	
	var _skatejs = __webpack_require__(294);
	
	var _classnames = __webpack_require__(322);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _tab = __webpack_require__(325);
	
	var _tab2 = _interopRequireDefault(_tab);
	
	var _debounce = __webpack_require__(326);
	
	var _debounce2 = _interopRequireDefault(_debounce);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /** @jsx h */
	
	function emitSlotChange(elem) {
	  if (!elem.__debouncedSlotChangeEvent) {
	    elem.__debouncedSlotChangeEvent = (0, _debounce2.default)(_skatejs.emit.bind(null, elem, 'slotchange'), 0);
	  }
	  return elem.__debouncedSlotChangeEvent();
	}
	
	exports.default = (0, _skatejs.define)(function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'connectedCallback',
	    value: function connectedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'connectedCallback', this).call(this);
	      emitSlotChange(this);
	    }
	  }, {
	    key: 'disconnectedCallback',
	    value: function disconnectedCallback() {
	      _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'disconnectedCallback', this).call(this);
	      emitSlotChange(this);
	    }
	  }, {
	    key: 'updatedCallback',
	    value: function updatedCallback(prev) {
	      emitSlotChange(this);
	      return _get(_class.prototype.__proto__ || Object.getPrototypeOf(_class.prototype), 'updatedCallback', this).call(this, prev);
	    }
	  }, {
	    key: 'renderCallback',
	    value: function renderCallback() {
	      var _cx;
	
	      return (0, _skatejs.h)(
	        'div',
	        { 'class': (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, _tab2.default.locals.pane, true), _defineProperty(_cx, _tab2.default.locals.selected, this.selected), _cx)) },
	        (0, _skatejs.h)(
	          'style',
	          null,
	          _tab2.default.toString()
	        ),
	        (0, _skatejs.h)('slot', null)
	      );
	    }
	  }], [{
	    key: 'is',
	    get: function get() {
	      return 'sk-tabs-tab';
	    }
	  }, {
	    key: 'props',
	    get: function get() {
	      return {
	        name: _skatejs.prop.string({ attribute: true }),
	        selected: _skatejs.prop.boolean({ attribute: true })
	      };
	    }
	  }]);
	
	  return _class;
	}(_skatejs.Component));

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(319)();
	// imports
	
	
	// module
	exports.push([module.id, ":host {\n  display: block;\n}\n\n._3WkQLUyd_5sA_re7EzYvMx {\n  background-color: #F1EDE4;\n  display: none;\n  margin: 0;\n  overflow: auto;\n  padding: 20px;\n}\n\n._3WkQLUyd_5sA_re7EzYvMx._2nRhrrYvmfuxu34UiGItXs {\n  display: block;\n}\n", ""]);
	
	// exports
	exports.locals = {
		"pane": "_3WkQLUyd_5sA_re7EzYvMx",
		"pane": "_3WkQLUyd_5sA_re7EzYvMx",
		"selected": "_2nRhrrYvmfuxu34UiGItXs",
		"selected": "_2nRhrrYvmfuxu34UiGItXs"
	};

/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * Module dependencies.
	 */
	
	var now = __webpack_require__(327);
	
	/**
	 * Returns a function, that, as long as it continues to be invoked, will not
	 * be triggered. The function will be called after it stops being called for
	 * N milliseconds. If `immediate` is passed, trigger the function on the
	 * leading edge, instead of the trailing.
	 *
	 * @source underscore.js
	 * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/
	 * @param {Function} function to wrap
	 * @param {Number} timeout in ms (`100`)
	 * @param {Boolean} whether to execute at the beginning (`false`)
	 * @api public
	 */
	
	module.exports = function debounce(func, wait, immediate){
	  var timeout, args, context, timestamp, result;
	  if (null == wait) wait = 100;
	
	  function later() {
	    var last = now() - timestamp;
	
	    if (last < wait && last > 0) {
	      timeout = setTimeout(later, wait - last);
	    } else {
	      timeout = null;
	      if (!immediate) {
	        result = func.apply(context, args);
	        if (!timeout) context = args = null;
	      }
	    }
	  };
	
	  return function debounced() {
	    context = this;
	    args = arguments;
	    timestamp = now();
	    var callNow = immediate && !timeout;
	    if (!timeout) timeout = setTimeout(later, wait);
	    if (callNow) {
	      result = func.apply(context, args);
	      context = args = null;
	    }
	
	    return result;
	  };
	};


/***/ },
/* 327 */
/***/ function(module, exports) {

	module.exports = Date.now || now
	
	function now() {
	    return new Date().getTime()
	}


/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _skatejs = __webpack_require__(294);
	
	var _helpers = __webpack_require__(296);
	
	var _glamor = __webpack_require__(297);
	
	var css = (0, _glamor.style)({
	  backgroundColor: '#fefefe',
	  color: '#333',
	  fontSize: 16,
	  padding: '60px 0 0 0'
	}); /** @jsx h */
	
	exports.default = function (props, chren) {
	  return (0, _skatejs.h)(
	    'div',
	    css,
	    (0, _skatejs.h)(_helpers.Css, { 'for': css }),
	    chren
	  );
	};

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /** @jsx h */
	
	var _glamor = __webpack_require__(297);
	
	var _skatejs = __webpack_require__(294);
	
	var _helpers = __webpack_require__(296);
	
	var _logoGithub = __webpack_require__(330);
	
	var _logoGithub2 = _interopRequireDefault(_logoGithub);
	
	var _logoTwitter = __webpack_require__(331);
	
	var _logoTwitter2 = _interopRequireDefault(_logoTwitter);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var footerCss = (0, _glamor.style)({
	  color: '#eee',
	  fontSize: 12,
	  paddingBottom: 38,
	  textAlign: 'center'
	});
	
	var githubLogoStyle = (0, _glamor.style)({
	  marginBottom: 10
	});
	
	exports.default = function () {
	  return (0, _skatejs.h)(
	    'div',
	    footerCss,
	    (0, _skatejs.h)(_helpers.Css, { 'for': [footerCss, githubLogoStyle] }),
	    (0, _skatejs.h)(
	      _helpers.Link,
	      { rel: 'external', href: 'https://github.com/skatejs/skatejs' },
	      (0, _skatejs.h)('img', _extends({ src: _logoGithub2.default, height: '26' }, githubLogoStyle))
	    ),
	    (0, _skatejs.h)(
	      _helpers.Link,
	      { rel: 'external', href: 'https://twitter.com/skate_js' },
	      (0, _skatejs.h)('img', { src: _logoTwitter2.default, height: '48' })
	    )
	  );
	};

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "ef7a02b69836dc8b6a732a54c4200dcb.png";

/***/ },
/* 331 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "dafae5807689cd295aaff4497fea706a.svg";

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /** @jsx h */
	
	var _skatejs = __webpack_require__(294);
	
	var _helpers = __webpack_require__(296);
	
	var _glamor = __webpack_require__(297);
	
	var _logo = __webpack_require__(333);
	
	var _logo2 = _interopRequireDefault(_logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var css = {
	  header: (0, _glamor.style)({
	    backgroundColor: '#fefefe',
	    color: '#333',
	    position: 'fixed',
	    transition: 'box-shadow .3s ease',
	    width: '100%'
	  }),
	  item: (0, _glamor.style)({
	    display: 'inline-block',
	    margin: 0,
	    padding: 0
	  }),
	  link: (0, _glamor.merge)((0, _glamor.style)({
	    color: '#333',
	    display: 'inline-block',
	    fontSize: 18,
	    margin: 0,
	    padding: 20,
	    textDecoration: 'none',
	    transition: 'background-color .3s ease'
	  }), (0, _glamor.hover)({
	    backgroundColor: '#eee'
	  })),
	  list: (0, _glamor.style)({
	    display: 'inline-block',
	    listStyle: 'none',
	    margin: 0,
	    padding: 0
	  }),
	  scrolled: (0, _glamor.style)({
	    boxShadow: '0 0 15px 0 #333'
	  }),
	  title: (0, _glamor.style)({
	    display: 'inline-block',
	    margin: '0 20px 0 10px',
	    padding: 0,
	    position: 'relative',
	    left: 14,
	    top: 8
	  })
	};
	
	var allCss = Object.keys(css).map(function (k) {
	  return css[k];
	});
	
	exports.default = function (props, chren) {
	  return (0, _skatejs.h)(
	    'div',
	    null,
	    (0, _skatejs.h)(_helpers.Css, { 'for': allCss }),
	    (0, _skatejs.h)(
	      'div',
	      _extends({}, css.header, props.scrolled ? css.scrolled : {}),
	      (0, _skatejs.h)(
	        'h1',
	        css.title,
	        (0, _skatejs.h)(
	          _helpers.Link,
	          { href: '/' },
	          (0, _skatejs.h)('img', { alt: props.title, src: _logo2.default, width: '30' })
	        )
	      ),
	      (0, _skatejs.h)(
	        'ul',
	        css.list,
	        chren
	      )
	    )
	  );
	};

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "cdcf8f64994df2f0ca865f88e17aaa59.png";

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _skatejs = __webpack_require__(294);
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	exports.default = (0, _skatejs.define)(function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'updatedCallback',
	    value: function updatedCallback(prev) {
	      var _this2 = this;
	
	      if (typeof this.load === 'function') {
	        this.load(function (args) {
	          return _this2.args = args;
	        });
	      }
	      return this.args;
	    }
	  }, {
	    key: 'renderCallback',
	    value: function renderCallback() {
	      if (typeof this.done === 'function') {
	        return this.done(this.args);
	      }
	    }
	  }], [{
	    key: 'is',
	    get: function get() {
	      return 'sk-module';
	    }
	  }, {
	    key: 'props',
	    get: function get() {
	      return {
	        args: {},
	        load: {},
	        done: {}
	      };
	    }
	  }]);
	
	  return _class;
	}(_skatejs.Component));

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _skatejs = __webpack_require__(294);
	
	var _page = __webpack_require__(315);
	
	var _page2 = _interopRequireDefault(_page);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var registered = [];
	
	exports.default = (0, _skatejs.define)(function (_Component) {
	  _inherits(_class, _Component);
	
	  function _class() {
	    _classCallCheck(this, _class);
	
	    return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));
	  }
	
	  _createClass(_class, [{
	    key: 'updatedCallback',
	    value: function updatedCallback(prev) {
	      var _this2 = this;
	
	      var path = this.path;
	
	
	      if (registered.indexOf(path) === -1) {
	        registered.push(path);
	        (0, _page2.default)(path, function () {
	          _this2.matched = true;
	        });
	        _page2.default.exit(path, function (args, next) {
	          _this2.matched = false;
	          next();
	        });
	
	        if (path === window.location.pathname) {
	          (0, _page2.default)(path);
	        }
	      }
	
	      return true;
	    }
	  }, {
	    key: 'renderCallback',
	    value: function renderCallback() {
	      return this.matched && this.match();
	    }
	  }], [{
	    key: 'is',
	    get: function get() {
	      return 'sk-router-route';
	    }
	  }, {
	    key: 'props',
	    get: function get() {
	      return {
	        match: {},
	        matched: _skatejs.prop.boolean({ attribute: true }),
	        path: _skatejs.prop.string({ attribute: true })
	      };
	    }
	  }]);
	
	  return _class;
	}(_skatejs.Component));

/***/ },
/* 336 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	exports.default = function (title) {
	  document.title = title;
	};

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	var cbs = [], 
		data;
	module.exports = function(cb) {
		if(cbs) cbs.push(cb);
		else cb(data);
	}
	__webpack_require__.e/* nsure */(1, function(require) {
		data = __webpack_require__(338);
		var callbacks = cbs;
		cbs = null;
		for(var i = 0, l = callbacks.length; i < l; i++) {
			callbacks[i](data);
		}
	});

/***/ },
/* 338 */,
/* 339 */,
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	var cbs = [], 
		data;
	module.exports = function(cb) {
		if(cbs) cbs.push(cb);
		else cb(data);
	}
	__webpack_require__.e/* nsure */(2, function(require) {
		data = __webpack_require__(341);
		var callbacks = cbs;
		cbs = null;
		for(var i = 0, l = callbacks.length; i < l; i++) {
			callbacks[i](data);
		}
	});

/***/ },
/* 341 */,
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	var cbs = [], 
		data;
	module.exports = function(cb) {
		if(cbs) cbs.push(cb);
		else cb(data);
	}
	__webpack_require__.e/* nsure */(3, function(require) {
		data = __webpack_require__(343);
		var callbacks = cbs;
		cbs = null;
		for(var i = 0, l = callbacks.length; i < l; i++) {
			callbacks[i](data);
		}
	});

/***/ },
/* 343 */,
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	var cbs = [], 
		data;
	module.exports = function(cb) {
		if(cbs) cbs.push(cb);
		else cb(data);
	}
	__webpack_require__.e/* nsure */(4, function(require) {
		data = __webpack_require__(345);
		var callbacks = cbs;
		cbs = null;
		for(var i = 0, l = callbacks.length; i < l; i++) {
			callbacks[i](data);
		}
	});

/***/ },
/* 345 */,
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	var cbs = [], 
		data;
	module.exports = function(cb) {
		if(cbs) cbs.push(cb);
		else cb(data);
	}
	__webpack_require__.e/* nsure */(5, function(require) {
		data = __webpack_require__(347);
		var callbacks = cbs;
		cbs = null;
		for(var i = 0, l = callbacks.length; i < l; i++) {
			callbacks[i](data);
		}
	});

/***/ },
/* 347 */,
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	var cbs = [], 
		data;
	module.exports = function(cb) {
		if(cbs) cbs.push(cb);
		else cb(data);
	}
	__webpack_require__.e/* nsure */(6, function(require) {
		data = __webpack_require__(349);
		var callbacks = cbs;
		cbs = null;
		for(var i = 0, l = callbacks.length; i < l; i++) {
			callbacks[i](data);
		}
	});

/***/ },
/* 349 */,
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag
	
	// load the styles
	var content = __webpack_require__(351);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(352)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js?modules&camelCase!./index.css", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js?modules&camelCase!./index.css");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(319)();
	// imports
	
	
	// module
	exports.push([module.id, "html {\n  font-family: Helvetica;\n  font-size: 14px;\n}\n\nbody {\n  margin: 0;\n}\n\na {\n  color: #333;\n}\n\n.gitter-open-chat-button {\n  background-color: #333333;\n  left: 0;\n  right: 0;\n  margin-left: auto;\n  margin-right: auto;\n  width: 200px;\n}", ""]);
	
	// exports


/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];
	
	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}
	
		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();
	
		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";
	
		var styles = listToStyles(list);
		addStylesToDom(styles, options);
	
		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}
	
	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}
	
	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}
	
	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}
	
	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}
	
	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}
	
	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}
	
	function addStyle(obj, options) {
		var styleElement, update, remove;
	
		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}
	
		update(obj);
	
		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}
	
	var replaceText = (function () {
		var textStore = [];
	
		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();
	
	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;
	
		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}
	
	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
	
		if(media) {
			styleElement.setAttribute("media", media)
		}
	
		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}
	
	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;
	
		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}
	
		var blob = new Blob([css], { type: "text/css" });
	
		var oldSrc = linkElement.href;
	
		linkElement.href = URL.createObjectURL(blob);
	
		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }
/******/ ])
});
;
//# sourceMappingURL=bundle.min.js.map